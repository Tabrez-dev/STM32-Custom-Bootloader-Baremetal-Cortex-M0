
4_Blink_LD5.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08008000  08008000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012b8  080080c0  080080c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000050  08009378  08009378  00002378  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080093c8  080093c8  0000305c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080093c8  080093c8  0000305c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080093c8  080093c8  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080093c8  080093c8  000023c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080093cc  080093cc  000023cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  080093d0  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  0800942c  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  0800942c  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000ce8  00000000  00000000  00003084  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000052d  00000000  00000000  00003d6c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000168  00000000  00000000  000042a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000f0  00000000  00000000  00004408  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00013228  00000000  00000000  000044f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001b7e  00000000  00000000  00017720  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00060019  00000000  00000000  0001929e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000792b7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b34  00000000  00000000  000792fc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006d  00000000  00000000  00079e30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080080c0 <__do_global_dtors_aux>:
 80080c0:	b510      	push	{r4, lr}
 80080c2:	4c06      	ldr	r4, [pc, #24]	@ (80080dc <__do_global_dtors_aux+0x1c>)
 80080c4:	7823      	ldrb	r3, [r4, #0]
 80080c6:	2b00      	cmp	r3, #0
 80080c8:	d107      	bne.n	80080da <__do_global_dtors_aux+0x1a>
 80080ca:	4b05      	ldr	r3, [pc, #20]	@ (80080e0 <__do_global_dtors_aux+0x20>)
 80080cc:	2b00      	cmp	r3, #0
 80080ce:	d002      	beq.n	80080d6 <__do_global_dtors_aux+0x16>
 80080d0:	4804      	ldr	r0, [pc, #16]	@ (80080e4 <__do_global_dtors_aux+0x24>)
 80080d2:	e000      	b.n	80080d6 <__do_global_dtors_aux+0x16>
 80080d4:	bf00      	nop
 80080d6:	2301      	movs	r3, #1
 80080d8:	7023      	strb	r3, [r4, #0]
 80080da:	bd10      	pop	{r4, pc}
 80080dc:	2000005c 	.word	0x2000005c
 80080e0:	00000000 	.word	0x00000000
 80080e4:	08009360 	.word	0x08009360

080080e8 <frame_dummy>:
 80080e8:	4b04      	ldr	r3, [pc, #16]	@ (80080fc <frame_dummy+0x14>)
 80080ea:	b510      	push	{r4, lr}
 80080ec:	2b00      	cmp	r3, #0
 80080ee:	d003      	beq.n	80080f8 <frame_dummy+0x10>
 80080f0:	4903      	ldr	r1, [pc, #12]	@ (8008100 <frame_dummy+0x18>)
 80080f2:	4804      	ldr	r0, [pc, #16]	@ (8008104 <frame_dummy+0x1c>)
 80080f4:	e000      	b.n	80080f8 <frame_dummy+0x10>
 80080f6:	bf00      	nop
 80080f8:	bd10      	pop	{r4, pc}
 80080fa:	46c0      	nop			@ (mov r8, r8)
 80080fc:	00000000 	.word	0x00000000
 8008100:	20000060 	.word	0x20000060
 8008104:	08009360 	.word	0x08009360

08008108 <__gnu_thumb1_case_shi>:
 8008108:	b403      	push	{r0, r1}
 800810a:	4671      	mov	r1, lr
 800810c:	0849      	lsrs	r1, r1, #1
 800810e:	0040      	lsls	r0, r0, #1
 8008110:	0049      	lsls	r1, r1, #1
 8008112:	5e09      	ldrsh	r1, [r1, r0]
 8008114:	0049      	lsls	r1, r1, #1
 8008116:	448e      	add	lr, r1
 8008118:	bc03      	pop	{r0, r1}
 800811a:	4770      	bx	lr

0800811c <__udivsi3>:
 800811c:	2200      	movs	r2, #0
 800811e:	0843      	lsrs	r3, r0, #1
 8008120:	428b      	cmp	r3, r1
 8008122:	d374      	bcc.n	800820e <__udivsi3+0xf2>
 8008124:	0903      	lsrs	r3, r0, #4
 8008126:	428b      	cmp	r3, r1
 8008128:	d35f      	bcc.n	80081ea <__udivsi3+0xce>
 800812a:	0a03      	lsrs	r3, r0, #8
 800812c:	428b      	cmp	r3, r1
 800812e:	d344      	bcc.n	80081ba <__udivsi3+0x9e>
 8008130:	0b03      	lsrs	r3, r0, #12
 8008132:	428b      	cmp	r3, r1
 8008134:	d328      	bcc.n	8008188 <__udivsi3+0x6c>
 8008136:	0c03      	lsrs	r3, r0, #16
 8008138:	428b      	cmp	r3, r1
 800813a:	d30d      	bcc.n	8008158 <__udivsi3+0x3c>
 800813c:	22ff      	movs	r2, #255	@ 0xff
 800813e:	0209      	lsls	r1, r1, #8
 8008140:	ba12      	rev	r2, r2
 8008142:	0c03      	lsrs	r3, r0, #16
 8008144:	428b      	cmp	r3, r1
 8008146:	d302      	bcc.n	800814e <__udivsi3+0x32>
 8008148:	1212      	asrs	r2, r2, #8
 800814a:	0209      	lsls	r1, r1, #8
 800814c:	d065      	beq.n	800821a <__udivsi3+0xfe>
 800814e:	0b03      	lsrs	r3, r0, #12
 8008150:	428b      	cmp	r3, r1
 8008152:	d319      	bcc.n	8008188 <__udivsi3+0x6c>
 8008154:	e000      	b.n	8008158 <__udivsi3+0x3c>
 8008156:	0a09      	lsrs	r1, r1, #8
 8008158:	0bc3      	lsrs	r3, r0, #15
 800815a:	428b      	cmp	r3, r1
 800815c:	d301      	bcc.n	8008162 <__udivsi3+0x46>
 800815e:	03cb      	lsls	r3, r1, #15
 8008160:	1ac0      	subs	r0, r0, r3
 8008162:	4152      	adcs	r2, r2
 8008164:	0b83      	lsrs	r3, r0, #14
 8008166:	428b      	cmp	r3, r1
 8008168:	d301      	bcc.n	800816e <__udivsi3+0x52>
 800816a:	038b      	lsls	r3, r1, #14
 800816c:	1ac0      	subs	r0, r0, r3
 800816e:	4152      	adcs	r2, r2
 8008170:	0b43      	lsrs	r3, r0, #13
 8008172:	428b      	cmp	r3, r1
 8008174:	d301      	bcc.n	800817a <__udivsi3+0x5e>
 8008176:	034b      	lsls	r3, r1, #13
 8008178:	1ac0      	subs	r0, r0, r3
 800817a:	4152      	adcs	r2, r2
 800817c:	0b03      	lsrs	r3, r0, #12
 800817e:	428b      	cmp	r3, r1
 8008180:	d301      	bcc.n	8008186 <__udivsi3+0x6a>
 8008182:	030b      	lsls	r3, r1, #12
 8008184:	1ac0      	subs	r0, r0, r3
 8008186:	4152      	adcs	r2, r2
 8008188:	0ac3      	lsrs	r3, r0, #11
 800818a:	428b      	cmp	r3, r1
 800818c:	d301      	bcc.n	8008192 <__udivsi3+0x76>
 800818e:	02cb      	lsls	r3, r1, #11
 8008190:	1ac0      	subs	r0, r0, r3
 8008192:	4152      	adcs	r2, r2
 8008194:	0a83      	lsrs	r3, r0, #10
 8008196:	428b      	cmp	r3, r1
 8008198:	d301      	bcc.n	800819e <__udivsi3+0x82>
 800819a:	028b      	lsls	r3, r1, #10
 800819c:	1ac0      	subs	r0, r0, r3
 800819e:	4152      	adcs	r2, r2
 80081a0:	0a43      	lsrs	r3, r0, #9
 80081a2:	428b      	cmp	r3, r1
 80081a4:	d301      	bcc.n	80081aa <__udivsi3+0x8e>
 80081a6:	024b      	lsls	r3, r1, #9
 80081a8:	1ac0      	subs	r0, r0, r3
 80081aa:	4152      	adcs	r2, r2
 80081ac:	0a03      	lsrs	r3, r0, #8
 80081ae:	428b      	cmp	r3, r1
 80081b0:	d301      	bcc.n	80081b6 <__udivsi3+0x9a>
 80081b2:	020b      	lsls	r3, r1, #8
 80081b4:	1ac0      	subs	r0, r0, r3
 80081b6:	4152      	adcs	r2, r2
 80081b8:	d2cd      	bcs.n	8008156 <__udivsi3+0x3a>
 80081ba:	09c3      	lsrs	r3, r0, #7
 80081bc:	428b      	cmp	r3, r1
 80081be:	d301      	bcc.n	80081c4 <__udivsi3+0xa8>
 80081c0:	01cb      	lsls	r3, r1, #7
 80081c2:	1ac0      	subs	r0, r0, r3
 80081c4:	4152      	adcs	r2, r2
 80081c6:	0983      	lsrs	r3, r0, #6
 80081c8:	428b      	cmp	r3, r1
 80081ca:	d301      	bcc.n	80081d0 <__udivsi3+0xb4>
 80081cc:	018b      	lsls	r3, r1, #6
 80081ce:	1ac0      	subs	r0, r0, r3
 80081d0:	4152      	adcs	r2, r2
 80081d2:	0943      	lsrs	r3, r0, #5
 80081d4:	428b      	cmp	r3, r1
 80081d6:	d301      	bcc.n	80081dc <__udivsi3+0xc0>
 80081d8:	014b      	lsls	r3, r1, #5
 80081da:	1ac0      	subs	r0, r0, r3
 80081dc:	4152      	adcs	r2, r2
 80081de:	0903      	lsrs	r3, r0, #4
 80081e0:	428b      	cmp	r3, r1
 80081e2:	d301      	bcc.n	80081e8 <__udivsi3+0xcc>
 80081e4:	010b      	lsls	r3, r1, #4
 80081e6:	1ac0      	subs	r0, r0, r3
 80081e8:	4152      	adcs	r2, r2
 80081ea:	08c3      	lsrs	r3, r0, #3
 80081ec:	428b      	cmp	r3, r1
 80081ee:	d301      	bcc.n	80081f4 <__udivsi3+0xd8>
 80081f0:	00cb      	lsls	r3, r1, #3
 80081f2:	1ac0      	subs	r0, r0, r3
 80081f4:	4152      	adcs	r2, r2
 80081f6:	0883      	lsrs	r3, r0, #2
 80081f8:	428b      	cmp	r3, r1
 80081fa:	d301      	bcc.n	8008200 <__udivsi3+0xe4>
 80081fc:	008b      	lsls	r3, r1, #2
 80081fe:	1ac0      	subs	r0, r0, r3
 8008200:	4152      	adcs	r2, r2
 8008202:	0843      	lsrs	r3, r0, #1
 8008204:	428b      	cmp	r3, r1
 8008206:	d301      	bcc.n	800820c <__udivsi3+0xf0>
 8008208:	004b      	lsls	r3, r1, #1
 800820a:	1ac0      	subs	r0, r0, r3
 800820c:	4152      	adcs	r2, r2
 800820e:	1a41      	subs	r1, r0, r1
 8008210:	d200      	bcs.n	8008214 <__udivsi3+0xf8>
 8008212:	4601      	mov	r1, r0
 8008214:	4152      	adcs	r2, r2
 8008216:	4610      	mov	r0, r2
 8008218:	4770      	bx	lr
 800821a:	e7ff      	b.n	800821c <__udivsi3+0x100>
 800821c:	b501      	push	{r0, lr}
 800821e:	2000      	movs	r0, #0
 8008220:	f000 f806 	bl	8008230 <__aeabi_idiv0>
 8008224:	bd02      	pop	{r1, pc}
 8008226:	46c0      	nop			@ (mov r8, r8)

08008228 <__aeabi_uidivmod>:
 8008228:	2900      	cmp	r1, #0
 800822a:	d0f7      	beq.n	800821c <__udivsi3+0x100>
 800822c:	e776      	b.n	800811c <__udivsi3>
 800822e:	4770      	bx	lr

08008230 <__aeabi_idiv0>:
 8008230:	4770      	bx	lr
 8008232:	46c0      	nop			@ (mov r8, r8)

08008234 <led_on>:
#define GPIOCEN		(1U<<19)
#define PIN9 		(1U<<9)
#define LED_PIN		PIN9

void led_on(void)
{
 8008234:	b580      	push	{r7, lr}
 8008236:	af00      	add	r7, sp, #0
	/*Set PC9 high*/
	GPIOC->ODR |=LED_PIN;
 8008238:	4b04      	ldr	r3, [pc, #16]	@ (800824c <led_on+0x18>)
 800823a:	695a      	ldr	r2, [r3, #20]
 800823c:	4b03      	ldr	r3, [pc, #12]	@ (800824c <led_on+0x18>)
 800823e:	2180      	movs	r1, #128	@ 0x80
 8008240:	0089      	lsls	r1, r1, #2
 8008242:	430a      	orrs	r2, r1
 8008244:	615a      	str	r2, [r3, #20]
}
 8008246:	46c0      	nop			@ (mov r8, r8)
 8008248:	46bd      	mov	sp, r7
 800824a:	bd80      	pop	{r7, pc}
 800824c:	48000800 	.word	0x48000800

08008250 <led_off>:

void led_off(void)
{
 8008250:	b580      	push	{r7, lr}
 8008252:	af00      	add	r7, sp, #0
	/*Set PC9 low*/
	GPIOC->ODR &= ~LED_PIN;
 8008254:	4b04      	ldr	r3, [pc, #16]	@ (8008268 <led_off+0x18>)
 8008256:	695a      	ldr	r2, [r3, #20]
 8008258:	4b03      	ldr	r3, [pc, #12]	@ (8008268 <led_off+0x18>)
 800825a:	4904      	ldr	r1, [pc, #16]	@ (800826c <led_off+0x1c>)
 800825c:	400a      	ands	r2, r1
 800825e:	615a      	str	r2, [r3, #20]

}
 8008260:	46c0      	nop			@ (mov r8, r8)
 8008262:	46bd      	mov	sp, r7
 8008264:	bd80      	pop	{r7, pc}
 8008266:	46c0      	nop			@ (mov r8, r8)
 8008268:	48000800 	.word	0x48000800
 800826c:	fffffdff 	.word	0xfffffdff

08008270 <main>:
	void(*timebase_init)(void);
	void(*delay)(uint32_t delay);
};

int main()
{
 8008270:	b580      	push	{r7, lr}
 8008272:	b082      	sub	sp, #8
 8008274:	af00      	add	r7, sp, #0
	struct btl_common_apis *common_apis=(struct btl_common_apis
 8008276:	4b10      	ldr	r3, [pc, #64]	@ (80082b8 <main+0x48>)
 8008278:	607b      	str	r3, [r7, #4]
*)0x0801F000;
	/*Initialise  debug UART*/
	common_apis->system_uart_init();
 800827a:	687b      	ldr	r3, [r7, #4]
 800827c:	691b      	ldr	r3, [r3, #16]
 800827e:	4798      	blx	r3
	/*initialise timebase*/
	common_apis->timebase_init();
 8008280:	687b      	ldr	r3, [r7, #4]
 8008282:	69db      	ldr	r3, [r3, #28]
 8008284:	4798      	blx	r3
	/*init led*/
	common_apis->led_init();
 8008286:	687b      	ldr	r3, [r7, #4]
 8008288:	681b      	ldr	r3, [r3, #0]
 800828a:	4798      	blx	r3

	while(1){
		printf("LD5 is Blinking...........\n\r");
 800828c:	4b0b      	ldr	r3, [pc, #44]	@ (80082bc <main+0x4c>)
 800828e:	0018      	movs	r0, r3
 8008290:	f000 f9ca 	bl	8008628 <iprintf>
		//common_apis->led_off();
		common_apis->delay(1000);
 8008294:	687b      	ldr	r3, [r7, #4]
 8008296:	6a1b      	ldr	r3, [r3, #32]
 8008298:	22fa      	movs	r2, #250	@ 0xfa
 800829a:	0092      	lsls	r2, r2, #2
 800829c:	0010      	movs	r0, r2
 800829e:	4798      	blx	r3
		led_on();
 80082a0:	f7ff ffc8 	bl	8008234 <led_on>
		common_apis->delay(1000);
 80082a4:	687b      	ldr	r3, [r7, #4]
 80082a6:	6a1b      	ldr	r3, [r3, #32]
 80082a8:	22fa      	movs	r2, #250	@ 0xfa
 80082aa:	0092      	lsls	r2, r2, #2
 80082ac:	0010      	movs	r0, r2
 80082ae:	4798      	blx	r3
		led_off();
 80082b0:	f7ff ffce 	bl	8008250 <led_off>
		printf("LD5 is Blinking...........\n\r");
 80082b4:	46c0      	nop			@ (mov r8, r8)
 80082b6:	e7e9      	b.n	800828c <main+0x1c>
 80082b8:	0801f000 	.word	0x0801f000
 80082bc:	08009378 	.word	0x08009378

080082c0 <SystemInit>:

	}
}
void SystemInit(void) {
 80082c0:	b580      	push	{r7, lr}
 80082c2:	af00      	add	r7, sp, #0
//    }
//    /* Remap SRAM to address 0x00000000 */
//    SYSCFG->CFGR1 = (SYSCFG->CFGR1 & ~SYSCFG_CFGR1_MEM_MODE) | (0x1);
//    //printf("SYSCFG_CFGR1: 0x%08lX\n", SYSCFG->CFGR1);

}
 80082c4:	46c0      	nop			@ (mov r8, r8)
 80082c6:	46bd      	mov	sp, r7
 80082c8:	bd80      	pop	{r7, pc}

080082ca <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80082ca:	b580      	push	{r7, lr}
 80082cc:	b086      	sub	sp, #24
 80082ce:	af00      	add	r7, sp, #0
 80082d0:	60f8      	str	r0, [r7, #12]
 80082d2:	60b9      	str	r1, [r7, #8]
 80082d4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80082d6:	2300      	movs	r3, #0
 80082d8:	617b      	str	r3, [r7, #20]
 80082da:	e00a      	b.n	80082f2 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80082dc:	e000      	b.n	80082e0 <_read+0x16>
 80082de:	bf00      	nop
 80082e0:	0001      	movs	r1, r0
 80082e2:	68bb      	ldr	r3, [r7, #8]
 80082e4:	1c5a      	adds	r2, r3, #1
 80082e6:	60ba      	str	r2, [r7, #8]
 80082e8:	b2ca      	uxtb	r2, r1
 80082ea:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80082ec:	697b      	ldr	r3, [r7, #20]
 80082ee:	3301      	adds	r3, #1
 80082f0:	617b      	str	r3, [r7, #20]
 80082f2:	697a      	ldr	r2, [r7, #20]
 80082f4:	687b      	ldr	r3, [r7, #4]
 80082f6:	429a      	cmp	r2, r3
 80082f8:	dbf0      	blt.n	80082dc <_read+0x12>
  }

  return len;
 80082fa:	687b      	ldr	r3, [r7, #4]
}
 80082fc:	0018      	movs	r0, r3
 80082fe:	46bd      	mov	sp, r7
 8008300:	b006      	add	sp, #24
 8008302:	bd80      	pop	{r7, pc}

08008304 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8008304:	b580      	push	{r7, lr}
 8008306:	b086      	sub	sp, #24
 8008308:	af00      	add	r7, sp, #0
 800830a:	60f8      	str	r0, [r7, #12]
 800830c:	60b9      	str	r1, [r7, #8]
 800830e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8008310:	2300      	movs	r3, #0
 8008312:	617b      	str	r3, [r7, #20]
 8008314:	e009      	b.n	800832a <_write+0x26>
  {
    __io_putchar(*ptr++);
 8008316:	68bb      	ldr	r3, [r7, #8]
 8008318:	1c5a      	adds	r2, r3, #1
 800831a:	60ba      	str	r2, [r7, #8]
 800831c:	781b      	ldrb	r3, [r3, #0]
 800831e:	0018      	movs	r0, r3
 8008320:	f000 f86e 	bl	8008400 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8008324:	697b      	ldr	r3, [r7, #20]
 8008326:	3301      	adds	r3, #1
 8008328:	617b      	str	r3, [r7, #20]
 800832a:	697a      	ldr	r2, [r7, #20]
 800832c:	687b      	ldr	r3, [r7, #4]
 800832e:	429a      	cmp	r2, r3
 8008330:	dbf1      	blt.n	8008316 <_write+0x12>
  }
  return len;
 8008332:	687b      	ldr	r3, [r7, #4]
}
 8008334:	0018      	movs	r0, r3
 8008336:	46bd      	mov	sp, r7
 8008338:	b006      	add	sp, #24
 800833a:	bd80      	pop	{r7, pc}

0800833c <_close>:

int _close(int file)
{
 800833c:	b580      	push	{r7, lr}
 800833e:	b082      	sub	sp, #8
 8008340:	af00      	add	r7, sp, #0
 8008342:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8008344:	2301      	movs	r3, #1
 8008346:	425b      	negs	r3, r3
}
 8008348:	0018      	movs	r0, r3
 800834a:	46bd      	mov	sp, r7
 800834c:	b002      	add	sp, #8
 800834e:	bd80      	pop	{r7, pc}

08008350 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8008350:	b580      	push	{r7, lr}
 8008352:	b082      	sub	sp, #8
 8008354:	af00      	add	r7, sp, #0
 8008356:	6078      	str	r0, [r7, #4]
 8008358:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800835a:	683b      	ldr	r3, [r7, #0]
 800835c:	2280      	movs	r2, #128	@ 0x80
 800835e:	0192      	lsls	r2, r2, #6
 8008360:	605a      	str	r2, [r3, #4]
  return 0;
 8008362:	2300      	movs	r3, #0
}
 8008364:	0018      	movs	r0, r3
 8008366:	46bd      	mov	sp, r7
 8008368:	b002      	add	sp, #8
 800836a:	bd80      	pop	{r7, pc}

0800836c <_isatty>:

int _isatty(int file)
{
 800836c:	b580      	push	{r7, lr}
 800836e:	b082      	sub	sp, #8
 8008370:	af00      	add	r7, sp, #0
 8008372:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8008374:	2301      	movs	r3, #1
}
 8008376:	0018      	movs	r0, r3
 8008378:	46bd      	mov	sp, r7
 800837a:	b002      	add	sp, #8
 800837c:	bd80      	pop	{r7, pc}

0800837e <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800837e:	b580      	push	{r7, lr}
 8008380:	b084      	sub	sp, #16
 8008382:	af00      	add	r7, sp, #0
 8008384:	60f8      	str	r0, [r7, #12]
 8008386:	60b9      	str	r1, [r7, #8]
 8008388:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800838a:	2300      	movs	r3, #0
}
 800838c:	0018      	movs	r0, r3
 800838e:	46bd      	mov	sp, r7
 8008390:	b004      	add	sp, #16
 8008392:	bd80      	pop	{r7, pc}

08008394 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8008394:	b580      	push	{r7, lr}
 8008396:	b086      	sub	sp, #24
 8008398:	af00      	add	r7, sp, #0
 800839a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800839c:	4a14      	ldr	r2, [pc, #80]	@ (80083f0 <_sbrk+0x5c>)
 800839e:	4b15      	ldr	r3, [pc, #84]	@ (80083f4 <_sbrk+0x60>)
 80083a0:	1ad3      	subs	r3, r2, r3
 80083a2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80083a4:	697b      	ldr	r3, [r7, #20]
 80083a6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80083a8:	4b13      	ldr	r3, [pc, #76]	@ (80083f8 <_sbrk+0x64>)
 80083aa:	681b      	ldr	r3, [r3, #0]
 80083ac:	2b00      	cmp	r3, #0
 80083ae:	d102      	bne.n	80083b6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80083b0:	4b11      	ldr	r3, [pc, #68]	@ (80083f8 <_sbrk+0x64>)
 80083b2:	4a12      	ldr	r2, [pc, #72]	@ (80083fc <_sbrk+0x68>)
 80083b4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80083b6:	4b10      	ldr	r3, [pc, #64]	@ (80083f8 <_sbrk+0x64>)
 80083b8:	681a      	ldr	r2, [r3, #0]
 80083ba:	687b      	ldr	r3, [r7, #4]
 80083bc:	18d3      	adds	r3, r2, r3
 80083be:	693a      	ldr	r2, [r7, #16]
 80083c0:	429a      	cmp	r2, r3
 80083c2:	d207      	bcs.n	80083d4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80083c4:	f000 f9e2 	bl	800878c <__errno>
 80083c8:	0003      	movs	r3, r0
 80083ca:	220c      	movs	r2, #12
 80083cc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80083ce:	2301      	movs	r3, #1
 80083d0:	425b      	negs	r3, r3
 80083d2:	e009      	b.n	80083e8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80083d4:	4b08      	ldr	r3, [pc, #32]	@ (80083f8 <_sbrk+0x64>)
 80083d6:	681b      	ldr	r3, [r3, #0]
 80083d8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80083da:	4b07      	ldr	r3, [pc, #28]	@ (80083f8 <_sbrk+0x64>)
 80083dc:	681a      	ldr	r2, [r3, #0]
 80083de:	687b      	ldr	r3, [r7, #4]
 80083e0:	18d2      	adds	r2, r2, r3
 80083e2:	4b05      	ldr	r3, [pc, #20]	@ (80083f8 <_sbrk+0x64>)
 80083e4:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 80083e6:	68fb      	ldr	r3, [r7, #12]
}
 80083e8:	0018      	movs	r0, r3
 80083ea:	46bd      	mov	sp, r7
 80083ec:	b006      	add	sp, #24
 80083ee:	bd80      	pop	{r7, pc}
 80083f0:	20004000 	.word	0x20004000
 80083f4:	00000400 	.word	0x00000400
 80083f8:	20000078 	.word	0x20000078
 80083fc:	200001c8 	.word	0x200001c8

08008400 <__io_putchar>:
#include "uart.h"

#define SR_TXE				(1U<<7)
static void uart_write(int ch);
int __io_putchar(int ch)
{
 8008400:	b580      	push	{r7, lr}
 8008402:	b082      	sub	sp, #8
 8008404:	af00      	add	r7, sp, #0
 8008406:	6078      	str	r0, [r7, #4]
	uart_write(ch);
 8008408:	687b      	ldr	r3, [r7, #4]
 800840a:	0018      	movs	r0, r3
 800840c:	f000 f806 	bl	800841c <uart_write>
	return ch;
 8008410:	687b      	ldr	r3, [r7, #4]
}
 8008412:	0018      	movs	r0, r3
 8008414:	46bd      	mov	sp, r7
 8008416:	b002      	add	sp, #8
 8008418:	bd80      	pop	{r7, pc}
	...

0800841c <uart_write>:


static void uart_write(int ch)
{
 800841c:	b580      	push	{r7, lr}
 800841e:	b082      	sub	sp, #8
 8008420:	af00      	add	r7, sp, #0
 8008422:	6078      	str	r0, [r7, #4]
	/*Make sure tx data reg is empty*/
	while(!(USART1->ISR & SR_TXE));
 8008424:	46c0      	nop			@ (mov r8, r8)
 8008426:	4b08      	ldr	r3, [pc, #32]	@ (8008448 <uart_write+0x2c>)
 8008428:	69db      	ldr	r3, [r3, #28]
 800842a:	2280      	movs	r2, #128	@ 0x80
 800842c:	4013      	ands	r3, r2
 800842e:	d0fa      	beq.n	8008426 <uart_write+0xa>
	/*Write to transmit data reg*/
	USART1->TDR = (ch & 0xFF);
 8008430:	687b      	ldr	r3, [r7, #4]
 8008432:	b29b      	uxth	r3, r3
 8008434:	4a04      	ldr	r2, [pc, #16]	@ (8008448 <uart_write+0x2c>)
 8008436:	21ff      	movs	r1, #255	@ 0xff
 8008438:	400b      	ands	r3, r1
 800843a:	b29b      	uxth	r3, r3
 800843c:	8513      	strh	r3, [r2, #40]	@ 0x28
}
 800843e:	46c0      	nop			@ (mov r8, r8)
 8008440:	46bd      	mov	sp, r7
 8008442:	b002      	add	sp, #8
 8008444:	bd80      	pop	{r7, pc}
 8008446:	46c0      	nop			@ (mov r8, r8)
 8008448:	40013800 	.word	0x40013800

0800844c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800844c:	480d      	ldr	r0, [pc, #52]	@ (8008484 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800844e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8008450:	f7ff ff36 	bl	80082c0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8008454:	480c      	ldr	r0, [pc, #48]	@ (8008488 <LoopForever+0x6>)
  ldr r1, =_edata
 8008456:	490d      	ldr	r1, [pc, #52]	@ (800848c <LoopForever+0xa>)
  ldr r2, =_sidata
 8008458:	4a0d      	ldr	r2, [pc, #52]	@ (8008490 <LoopForever+0xe>)
  movs r3, #0
 800845a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800845c:	e002      	b.n	8008464 <LoopCopyDataInit>

0800845e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800845e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8008460:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8008462:	3304      	adds	r3, #4

08008464 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8008464:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8008466:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8008468:	d3f9      	bcc.n	800845e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800846a:	4a0a      	ldr	r2, [pc, #40]	@ (8008494 <LoopForever+0x12>)
  ldr r4, =_ebss
 800846c:	4c0a      	ldr	r4, [pc, #40]	@ (8008498 <LoopForever+0x16>)
  movs r3, #0
 800846e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8008470:	e001      	b.n	8008476 <LoopFillZerobss>

08008472 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8008472:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8008474:	3204      	adds	r2, #4

08008476 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8008476:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8008478:	d3fb      	bcc.n	8008472 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800847a:	f000 f98d 	bl	8008798 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800847e:	f7ff fef7 	bl	8008270 <main>

08008482 <LoopForever>:

LoopForever:
  b LoopForever
 8008482:	e7fe      	b.n	8008482 <LoopForever>
  ldr   r0, =_estack
 8008484:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 8008488:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800848c:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8008490:	080093d0 	.word	0x080093d0
  ldr r2, =_sbss
 8008494:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8008498:	200001c8 	.word	0x200001c8

0800849c <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800849c:	e7fe      	b.n	800849c <ADC_COMP_IRQHandler>
	...

080084a0 <std>:
 80084a0:	2300      	movs	r3, #0
 80084a2:	b510      	push	{r4, lr}
 80084a4:	0004      	movs	r4, r0
 80084a6:	6003      	str	r3, [r0, #0]
 80084a8:	6043      	str	r3, [r0, #4]
 80084aa:	6083      	str	r3, [r0, #8]
 80084ac:	8181      	strh	r1, [r0, #12]
 80084ae:	6643      	str	r3, [r0, #100]	@ 0x64
 80084b0:	81c2      	strh	r2, [r0, #14]
 80084b2:	6103      	str	r3, [r0, #16]
 80084b4:	6143      	str	r3, [r0, #20]
 80084b6:	6183      	str	r3, [r0, #24]
 80084b8:	0019      	movs	r1, r3
 80084ba:	2208      	movs	r2, #8
 80084bc:	305c      	adds	r0, #92	@ 0x5c
 80084be:	f000 f90f 	bl	80086e0 <memset>
 80084c2:	4b0b      	ldr	r3, [pc, #44]	@ (80084f0 <std+0x50>)
 80084c4:	6224      	str	r4, [r4, #32]
 80084c6:	6263      	str	r3, [r4, #36]	@ 0x24
 80084c8:	4b0a      	ldr	r3, [pc, #40]	@ (80084f4 <std+0x54>)
 80084ca:	62a3      	str	r3, [r4, #40]	@ 0x28
 80084cc:	4b0a      	ldr	r3, [pc, #40]	@ (80084f8 <std+0x58>)
 80084ce:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80084d0:	4b0a      	ldr	r3, [pc, #40]	@ (80084fc <std+0x5c>)
 80084d2:	6323      	str	r3, [r4, #48]	@ 0x30
 80084d4:	4b0a      	ldr	r3, [pc, #40]	@ (8008500 <std+0x60>)
 80084d6:	429c      	cmp	r4, r3
 80084d8:	d005      	beq.n	80084e6 <std+0x46>
 80084da:	4b0a      	ldr	r3, [pc, #40]	@ (8008504 <std+0x64>)
 80084dc:	429c      	cmp	r4, r3
 80084de:	d002      	beq.n	80084e6 <std+0x46>
 80084e0:	4b09      	ldr	r3, [pc, #36]	@ (8008508 <std+0x68>)
 80084e2:	429c      	cmp	r4, r3
 80084e4:	d103      	bne.n	80084ee <std+0x4e>
 80084e6:	0020      	movs	r0, r4
 80084e8:	3058      	adds	r0, #88	@ 0x58
 80084ea:	f000 f979 	bl	80087e0 <__retarget_lock_init_recursive>
 80084ee:	bd10      	pop	{r4, pc}
 80084f0:	08008649 	.word	0x08008649
 80084f4:	08008671 	.word	0x08008671
 80084f8:	080086a9 	.word	0x080086a9
 80084fc:	080086d5 	.word	0x080086d5
 8008500:	2000007c 	.word	0x2000007c
 8008504:	200000e4 	.word	0x200000e4
 8008508:	2000014c 	.word	0x2000014c

0800850c <stdio_exit_handler>:
 800850c:	b510      	push	{r4, lr}
 800850e:	4a03      	ldr	r2, [pc, #12]	@ (800851c <stdio_exit_handler+0x10>)
 8008510:	4903      	ldr	r1, [pc, #12]	@ (8008520 <stdio_exit_handler+0x14>)
 8008512:	4804      	ldr	r0, [pc, #16]	@ (8008524 <stdio_exit_handler+0x18>)
 8008514:	f000 f86c 	bl	80085f0 <_fwalk_sglue>
 8008518:	bd10      	pop	{r4, pc}
 800851a:	46c0      	nop			@ (mov r8, r8)
 800851c:	20000000 	.word	0x20000000
 8008520:	0800906d 	.word	0x0800906d
 8008524:	20000010 	.word	0x20000010

08008528 <cleanup_stdio>:
 8008528:	6841      	ldr	r1, [r0, #4]
 800852a:	4b0b      	ldr	r3, [pc, #44]	@ (8008558 <cleanup_stdio+0x30>)
 800852c:	b510      	push	{r4, lr}
 800852e:	0004      	movs	r4, r0
 8008530:	4299      	cmp	r1, r3
 8008532:	d001      	beq.n	8008538 <cleanup_stdio+0x10>
 8008534:	f000 fd9a 	bl	800906c <_fflush_r>
 8008538:	68a1      	ldr	r1, [r4, #8]
 800853a:	4b08      	ldr	r3, [pc, #32]	@ (800855c <cleanup_stdio+0x34>)
 800853c:	4299      	cmp	r1, r3
 800853e:	d002      	beq.n	8008546 <cleanup_stdio+0x1e>
 8008540:	0020      	movs	r0, r4
 8008542:	f000 fd93 	bl	800906c <_fflush_r>
 8008546:	68e1      	ldr	r1, [r4, #12]
 8008548:	4b05      	ldr	r3, [pc, #20]	@ (8008560 <cleanup_stdio+0x38>)
 800854a:	4299      	cmp	r1, r3
 800854c:	d002      	beq.n	8008554 <cleanup_stdio+0x2c>
 800854e:	0020      	movs	r0, r4
 8008550:	f000 fd8c 	bl	800906c <_fflush_r>
 8008554:	bd10      	pop	{r4, pc}
 8008556:	46c0      	nop			@ (mov r8, r8)
 8008558:	2000007c 	.word	0x2000007c
 800855c:	200000e4 	.word	0x200000e4
 8008560:	2000014c 	.word	0x2000014c

08008564 <global_stdio_init.part.0>:
 8008564:	b510      	push	{r4, lr}
 8008566:	4b09      	ldr	r3, [pc, #36]	@ (800858c <global_stdio_init.part.0+0x28>)
 8008568:	4a09      	ldr	r2, [pc, #36]	@ (8008590 <global_stdio_init.part.0+0x2c>)
 800856a:	2104      	movs	r1, #4
 800856c:	601a      	str	r2, [r3, #0]
 800856e:	4809      	ldr	r0, [pc, #36]	@ (8008594 <global_stdio_init.part.0+0x30>)
 8008570:	2200      	movs	r2, #0
 8008572:	f7ff ff95 	bl	80084a0 <std>
 8008576:	2201      	movs	r2, #1
 8008578:	2109      	movs	r1, #9
 800857a:	4807      	ldr	r0, [pc, #28]	@ (8008598 <global_stdio_init.part.0+0x34>)
 800857c:	f7ff ff90 	bl	80084a0 <std>
 8008580:	2202      	movs	r2, #2
 8008582:	2112      	movs	r1, #18
 8008584:	4805      	ldr	r0, [pc, #20]	@ (800859c <global_stdio_init.part.0+0x38>)
 8008586:	f7ff ff8b 	bl	80084a0 <std>
 800858a:	bd10      	pop	{r4, pc}
 800858c:	200001b4 	.word	0x200001b4
 8008590:	0800850d 	.word	0x0800850d
 8008594:	2000007c 	.word	0x2000007c
 8008598:	200000e4 	.word	0x200000e4
 800859c:	2000014c 	.word	0x2000014c

080085a0 <__sfp_lock_acquire>:
 80085a0:	b510      	push	{r4, lr}
 80085a2:	4802      	ldr	r0, [pc, #8]	@ (80085ac <__sfp_lock_acquire+0xc>)
 80085a4:	f000 f91d 	bl	80087e2 <__retarget_lock_acquire_recursive>
 80085a8:	bd10      	pop	{r4, pc}
 80085aa:	46c0      	nop			@ (mov r8, r8)
 80085ac:	200001bd 	.word	0x200001bd

080085b0 <__sfp_lock_release>:
 80085b0:	b510      	push	{r4, lr}
 80085b2:	4802      	ldr	r0, [pc, #8]	@ (80085bc <__sfp_lock_release+0xc>)
 80085b4:	f000 f916 	bl	80087e4 <__retarget_lock_release_recursive>
 80085b8:	bd10      	pop	{r4, pc}
 80085ba:	46c0      	nop			@ (mov r8, r8)
 80085bc:	200001bd 	.word	0x200001bd

080085c0 <__sinit>:
 80085c0:	b510      	push	{r4, lr}
 80085c2:	0004      	movs	r4, r0
 80085c4:	f7ff ffec 	bl	80085a0 <__sfp_lock_acquire>
 80085c8:	6a23      	ldr	r3, [r4, #32]
 80085ca:	2b00      	cmp	r3, #0
 80085cc:	d002      	beq.n	80085d4 <__sinit+0x14>
 80085ce:	f7ff ffef 	bl	80085b0 <__sfp_lock_release>
 80085d2:	bd10      	pop	{r4, pc}
 80085d4:	4b04      	ldr	r3, [pc, #16]	@ (80085e8 <__sinit+0x28>)
 80085d6:	6223      	str	r3, [r4, #32]
 80085d8:	4b04      	ldr	r3, [pc, #16]	@ (80085ec <__sinit+0x2c>)
 80085da:	681b      	ldr	r3, [r3, #0]
 80085dc:	2b00      	cmp	r3, #0
 80085de:	d1f6      	bne.n	80085ce <__sinit+0xe>
 80085e0:	f7ff ffc0 	bl	8008564 <global_stdio_init.part.0>
 80085e4:	e7f3      	b.n	80085ce <__sinit+0xe>
 80085e6:	46c0      	nop			@ (mov r8, r8)
 80085e8:	08008529 	.word	0x08008529
 80085ec:	200001b4 	.word	0x200001b4

080085f0 <_fwalk_sglue>:
 80085f0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80085f2:	0014      	movs	r4, r2
 80085f4:	2600      	movs	r6, #0
 80085f6:	9000      	str	r0, [sp, #0]
 80085f8:	9101      	str	r1, [sp, #4]
 80085fa:	68a5      	ldr	r5, [r4, #8]
 80085fc:	6867      	ldr	r7, [r4, #4]
 80085fe:	3f01      	subs	r7, #1
 8008600:	d504      	bpl.n	800860c <_fwalk_sglue+0x1c>
 8008602:	6824      	ldr	r4, [r4, #0]
 8008604:	2c00      	cmp	r4, #0
 8008606:	d1f8      	bne.n	80085fa <_fwalk_sglue+0xa>
 8008608:	0030      	movs	r0, r6
 800860a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800860c:	89ab      	ldrh	r3, [r5, #12]
 800860e:	2b01      	cmp	r3, #1
 8008610:	d908      	bls.n	8008624 <_fwalk_sglue+0x34>
 8008612:	220e      	movs	r2, #14
 8008614:	5eab      	ldrsh	r3, [r5, r2]
 8008616:	3301      	adds	r3, #1
 8008618:	d004      	beq.n	8008624 <_fwalk_sglue+0x34>
 800861a:	0029      	movs	r1, r5
 800861c:	9800      	ldr	r0, [sp, #0]
 800861e:	9b01      	ldr	r3, [sp, #4]
 8008620:	4798      	blx	r3
 8008622:	4306      	orrs	r6, r0
 8008624:	3568      	adds	r5, #104	@ 0x68
 8008626:	e7ea      	b.n	80085fe <_fwalk_sglue+0xe>

08008628 <iprintf>:
 8008628:	b40f      	push	{r0, r1, r2, r3}
 800862a:	b507      	push	{r0, r1, r2, lr}
 800862c:	4905      	ldr	r1, [pc, #20]	@ (8008644 <iprintf+0x1c>)
 800862e:	ab04      	add	r3, sp, #16
 8008630:	6808      	ldr	r0, [r1, #0]
 8008632:	cb04      	ldmia	r3!, {r2}
 8008634:	6881      	ldr	r1, [r0, #8]
 8008636:	9301      	str	r3, [sp, #4]
 8008638:	f000 f9fa 	bl	8008a30 <_vfiprintf_r>
 800863c:	b003      	add	sp, #12
 800863e:	bc08      	pop	{r3}
 8008640:	b004      	add	sp, #16
 8008642:	4718      	bx	r3
 8008644:	2000000c 	.word	0x2000000c

08008648 <__sread>:
 8008648:	b570      	push	{r4, r5, r6, lr}
 800864a:	000c      	movs	r4, r1
 800864c:	250e      	movs	r5, #14
 800864e:	5f49      	ldrsh	r1, [r1, r5]
 8008650:	f000 f874 	bl	800873c <_read_r>
 8008654:	2800      	cmp	r0, #0
 8008656:	db03      	blt.n	8008660 <__sread+0x18>
 8008658:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800865a:	181b      	adds	r3, r3, r0
 800865c:	6563      	str	r3, [r4, #84]	@ 0x54
 800865e:	bd70      	pop	{r4, r5, r6, pc}
 8008660:	89a3      	ldrh	r3, [r4, #12]
 8008662:	4a02      	ldr	r2, [pc, #8]	@ (800866c <__sread+0x24>)
 8008664:	4013      	ands	r3, r2
 8008666:	81a3      	strh	r3, [r4, #12]
 8008668:	e7f9      	b.n	800865e <__sread+0x16>
 800866a:	46c0      	nop			@ (mov r8, r8)
 800866c:	ffffefff 	.word	0xffffefff

08008670 <__swrite>:
 8008670:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008672:	001f      	movs	r7, r3
 8008674:	898b      	ldrh	r3, [r1, #12]
 8008676:	0005      	movs	r5, r0
 8008678:	000c      	movs	r4, r1
 800867a:	0016      	movs	r6, r2
 800867c:	05db      	lsls	r3, r3, #23
 800867e:	d505      	bpl.n	800868c <__swrite+0x1c>
 8008680:	230e      	movs	r3, #14
 8008682:	5ec9      	ldrsh	r1, [r1, r3]
 8008684:	2200      	movs	r2, #0
 8008686:	2302      	movs	r3, #2
 8008688:	f000 f844 	bl	8008714 <_lseek_r>
 800868c:	89a3      	ldrh	r3, [r4, #12]
 800868e:	4a05      	ldr	r2, [pc, #20]	@ (80086a4 <__swrite+0x34>)
 8008690:	0028      	movs	r0, r5
 8008692:	4013      	ands	r3, r2
 8008694:	81a3      	strh	r3, [r4, #12]
 8008696:	0032      	movs	r2, r6
 8008698:	230e      	movs	r3, #14
 800869a:	5ee1      	ldrsh	r1, [r4, r3]
 800869c:	003b      	movs	r3, r7
 800869e:	f000 f861 	bl	8008764 <_write_r>
 80086a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80086a4:	ffffefff 	.word	0xffffefff

080086a8 <__sseek>:
 80086a8:	b570      	push	{r4, r5, r6, lr}
 80086aa:	000c      	movs	r4, r1
 80086ac:	250e      	movs	r5, #14
 80086ae:	5f49      	ldrsh	r1, [r1, r5]
 80086b0:	f000 f830 	bl	8008714 <_lseek_r>
 80086b4:	89a3      	ldrh	r3, [r4, #12]
 80086b6:	1c42      	adds	r2, r0, #1
 80086b8:	d103      	bne.n	80086c2 <__sseek+0x1a>
 80086ba:	4a05      	ldr	r2, [pc, #20]	@ (80086d0 <__sseek+0x28>)
 80086bc:	4013      	ands	r3, r2
 80086be:	81a3      	strh	r3, [r4, #12]
 80086c0:	bd70      	pop	{r4, r5, r6, pc}
 80086c2:	2280      	movs	r2, #128	@ 0x80
 80086c4:	0152      	lsls	r2, r2, #5
 80086c6:	4313      	orrs	r3, r2
 80086c8:	81a3      	strh	r3, [r4, #12]
 80086ca:	6560      	str	r0, [r4, #84]	@ 0x54
 80086cc:	e7f8      	b.n	80086c0 <__sseek+0x18>
 80086ce:	46c0      	nop			@ (mov r8, r8)
 80086d0:	ffffefff 	.word	0xffffefff

080086d4 <__sclose>:
 80086d4:	b510      	push	{r4, lr}
 80086d6:	230e      	movs	r3, #14
 80086d8:	5ec9      	ldrsh	r1, [r1, r3]
 80086da:	f000 f809 	bl	80086f0 <_close_r>
 80086de:	bd10      	pop	{r4, pc}

080086e0 <memset>:
 80086e0:	0003      	movs	r3, r0
 80086e2:	1882      	adds	r2, r0, r2
 80086e4:	4293      	cmp	r3, r2
 80086e6:	d100      	bne.n	80086ea <memset+0xa>
 80086e8:	4770      	bx	lr
 80086ea:	7019      	strb	r1, [r3, #0]
 80086ec:	3301      	adds	r3, #1
 80086ee:	e7f9      	b.n	80086e4 <memset+0x4>

080086f0 <_close_r>:
 80086f0:	2300      	movs	r3, #0
 80086f2:	b570      	push	{r4, r5, r6, lr}
 80086f4:	4d06      	ldr	r5, [pc, #24]	@ (8008710 <_close_r+0x20>)
 80086f6:	0004      	movs	r4, r0
 80086f8:	0008      	movs	r0, r1
 80086fa:	602b      	str	r3, [r5, #0]
 80086fc:	f7ff fe1e 	bl	800833c <_close>
 8008700:	1c43      	adds	r3, r0, #1
 8008702:	d103      	bne.n	800870c <_close_r+0x1c>
 8008704:	682b      	ldr	r3, [r5, #0]
 8008706:	2b00      	cmp	r3, #0
 8008708:	d000      	beq.n	800870c <_close_r+0x1c>
 800870a:	6023      	str	r3, [r4, #0]
 800870c:	bd70      	pop	{r4, r5, r6, pc}
 800870e:	46c0      	nop			@ (mov r8, r8)
 8008710:	200001b8 	.word	0x200001b8

08008714 <_lseek_r>:
 8008714:	b570      	push	{r4, r5, r6, lr}
 8008716:	0004      	movs	r4, r0
 8008718:	0008      	movs	r0, r1
 800871a:	0011      	movs	r1, r2
 800871c:	001a      	movs	r2, r3
 800871e:	2300      	movs	r3, #0
 8008720:	4d05      	ldr	r5, [pc, #20]	@ (8008738 <_lseek_r+0x24>)
 8008722:	602b      	str	r3, [r5, #0]
 8008724:	f7ff fe2b 	bl	800837e <_lseek>
 8008728:	1c43      	adds	r3, r0, #1
 800872a:	d103      	bne.n	8008734 <_lseek_r+0x20>
 800872c:	682b      	ldr	r3, [r5, #0]
 800872e:	2b00      	cmp	r3, #0
 8008730:	d000      	beq.n	8008734 <_lseek_r+0x20>
 8008732:	6023      	str	r3, [r4, #0]
 8008734:	bd70      	pop	{r4, r5, r6, pc}
 8008736:	46c0      	nop			@ (mov r8, r8)
 8008738:	200001b8 	.word	0x200001b8

0800873c <_read_r>:
 800873c:	b570      	push	{r4, r5, r6, lr}
 800873e:	0004      	movs	r4, r0
 8008740:	0008      	movs	r0, r1
 8008742:	0011      	movs	r1, r2
 8008744:	001a      	movs	r2, r3
 8008746:	2300      	movs	r3, #0
 8008748:	4d05      	ldr	r5, [pc, #20]	@ (8008760 <_read_r+0x24>)
 800874a:	602b      	str	r3, [r5, #0]
 800874c:	f7ff fdbd 	bl	80082ca <_read>
 8008750:	1c43      	adds	r3, r0, #1
 8008752:	d103      	bne.n	800875c <_read_r+0x20>
 8008754:	682b      	ldr	r3, [r5, #0]
 8008756:	2b00      	cmp	r3, #0
 8008758:	d000      	beq.n	800875c <_read_r+0x20>
 800875a:	6023      	str	r3, [r4, #0]
 800875c:	bd70      	pop	{r4, r5, r6, pc}
 800875e:	46c0      	nop			@ (mov r8, r8)
 8008760:	200001b8 	.word	0x200001b8

08008764 <_write_r>:
 8008764:	b570      	push	{r4, r5, r6, lr}
 8008766:	0004      	movs	r4, r0
 8008768:	0008      	movs	r0, r1
 800876a:	0011      	movs	r1, r2
 800876c:	001a      	movs	r2, r3
 800876e:	2300      	movs	r3, #0
 8008770:	4d05      	ldr	r5, [pc, #20]	@ (8008788 <_write_r+0x24>)
 8008772:	602b      	str	r3, [r5, #0]
 8008774:	f7ff fdc6 	bl	8008304 <_write>
 8008778:	1c43      	adds	r3, r0, #1
 800877a:	d103      	bne.n	8008784 <_write_r+0x20>
 800877c:	682b      	ldr	r3, [r5, #0]
 800877e:	2b00      	cmp	r3, #0
 8008780:	d000      	beq.n	8008784 <_write_r+0x20>
 8008782:	6023      	str	r3, [r4, #0]
 8008784:	bd70      	pop	{r4, r5, r6, pc}
 8008786:	46c0      	nop			@ (mov r8, r8)
 8008788:	200001b8 	.word	0x200001b8

0800878c <__errno>:
 800878c:	4b01      	ldr	r3, [pc, #4]	@ (8008794 <__errno+0x8>)
 800878e:	6818      	ldr	r0, [r3, #0]
 8008790:	4770      	bx	lr
 8008792:	46c0      	nop			@ (mov r8, r8)
 8008794:	2000000c 	.word	0x2000000c

08008798 <__libc_init_array>:
 8008798:	b570      	push	{r4, r5, r6, lr}
 800879a:	2600      	movs	r6, #0
 800879c:	4c0c      	ldr	r4, [pc, #48]	@ (80087d0 <__libc_init_array+0x38>)
 800879e:	4d0d      	ldr	r5, [pc, #52]	@ (80087d4 <__libc_init_array+0x3c>)
 80087a0:	1b64      	subs	r4, r4, r5
 80087a2:	10a4      	asrs	r4, r4, #2
 80087a4:	42a6      	cmp	r6, r4
 80087a6:	d109      	bne.n	80087bc <__libc_init_array+0x24>
 80087a8:	2600      	movs	r6, #0
 80087aa:	f000 fdd9 	bl	8009360 <_init>
 80087ae:	4c0a      	ldr	r4, [pc, #40]	@ (80087d8 <__libc_init_array+0x40>)
 80087b0:	4d0a      	ldr	r5, [pc, #40]	@ (80087dc <__libc_init_array+0x44>)
 80087b2:	1b64      	subs	r4, r4, r5
 80087b4:	10a4      	asrs	r4, r4, #2
 80087b6:	42a6      	cmp	r6, r4
 80087b8:	d105      	bne.n	80087c6 <__libc_init_array+0x2e>
 80087ba:	bd70      	pop	{r4, r5, r6, pc}
 80087bc:	00b3      	lsls	r3, r6, #2
 80087be:	58eb      	ldr	r3, [r5, r3]
 80087c0:	4798      	blx	r3
 80087c2:	3601      	adds	r6, #1
 80087c4:	e7ee      	b.n	80087a4 <__libc_init_array+0xc>
 80087c6:	00b3      	lsls	r3, r6, #2
 80087c8:	58eb      	ldr	r3, [r5, r3]
 80087ca:	4798      	blx	r3
 80087cc:	3601      	adds	r6, #1
 80087ce:	e7f2      	b.n	80087b6 <__libc_init_array+0x1e>
 80087d0:	080093c8 	.word	0x080093c8
 80087d4:	080093c8 	.word	0x080093c8
 80087d8:	080093cc 	.word	0x080093cc
 80087dc:	080093c8 	.word	0x080093c8

080087e0 <__retarget_lock_init_recursive>:
 80087e0:	4770      	bx	lr

080087e2 <__retarget_lock_acquire_recursive>:
 80087e2:	4770      	bx	lr

080087e4 <__retarget_lock_release_recursive>:
 80087e4:	4770      	bx	lr
	...

080087e8 <_free_r>:
 80087e8:	b570      	push	{r4, r5, r6, lr}
 80087ea:	0005      	movs	r5, r0
 80087ec:	1e0c      	subs	r4, r1, #0
 80087ee:	d010      	beq.n	8008812 <_free_r+0x2a>
 80087f0:	3c04      	subs	r4, #4
 80087f2:	6823      	ldr	r3, [r4, #0]
 80087f4:	2b00      	cmp	r3, #0
 80087f6:	da00      	bge.n	80087fa <_free_r+0x12>
 80087f8:	18e4      	adds	r4, r4, r3
 80087fa:	0028      	movs	r0, r5
 80087fc:	f000 f8e0 	bl	80089c0 <__malloc_lock>
 8008800:	4a1d      	ldr	r2, [pc, #116]	@ (8008878 <_free_r+0x90>)
 8008802:	6813      	ldr	r3, [r2, #0]
 8008804:	2b00      	cmp	r3, #0
 8008806:	d105      	bne.n	8008814 <_free_r+0x2c>
 8008808:	6063      	str	r3, [r4, #4]
 800880a:	6014      	str	r4, [r2, #0]
 800880c:	0028      	movs	r0, r5
 800880e:	f000 f8df 	bl	80089d0 <__malloc_unlock>
 8008812:	bd70      	pop	{r4, r5, r6, pc}
 8008814:	42a3      	cmp	r3, r4
 8008816:	d908      	bls.n	800882a <_free_r+0x42>
 8008818:	6820      	ldr	r0, [r4, #0]
 800881a:	1821      	adds	r1, r4, r0
 800881c:	428b      	cmp	r3, r1
 800881e:	d1f3      	bne.n	8008808 <_free_r+0x20>
 8008820:	6819      	ldr	r1, [r3, #0]
 8008822:	685b      	ldr	r3, [r3, #4]
 8008824:	1809      	adds	r1, r1, r0
 8008826:	6021      	str	r1, [r4, #0]
 8008828:	e7ee      	b.n	8008808 <_free_r+0x20>
 800882a:	001a      	movs	r2, r3
 800882c:	685b      	ldr	r3, [r3, #4]
 800882e:	2b00      	cmp	r3, #0
 8008830:	d001      	beq.n	8008836 <_free_r+0x4e>
 8008832:	42a3      	cmp	r3, r4
 8008834:	d9f9      	bls.n	800882a <_free_r+0x42>
 8008836:	6811      	ldr	r1, [r2, #0]
 8008838:	1850      	adds	r0, r2, r1
 800883a:	42a0      	cmp	r0, r4
 800883c:	d10b      	bne.n	8008856 <_free_r+0x6e>
 800883e:	6820      	ldr	r0, [r4, #0]
 8008840:	1809      	adds	r1, r1, r0
 8008842:	1850      	adds	r0, r2, r1
 8008844:	6011      	str	r1, [r2, #0]
 8008846:	4283      	cmp	r3, r0
 8008848:	d1e0      	bne.n	800880c <_free_r+0x24>
 800884a:	6818      	ldr	r0, [r3, #0]
 800884c:	685b      	ldr	r3, [r3, #4]
 800884e:	1841      	adds	r1, r0, r1
 8008850:	6011      	str	r1, [r2, #0]
 8008852:	6053      	str	r3, [r2, #4]
 8008854:	e7da      	b.n	800880c <_free_r+0x24>
 8008856:	42a0      	cmp	r0, r4
 8008858:	d902      	bls.n	8008860 <_free_r+0x78>
 800885a:	230c      	movs	r3, #12
 800885c:	602b      	str	r3, [r5, #0]
 800885e:	e7d5      	b.n	800880c <_free_r+0x24>
 8008860:	6820      	ldr	r0, [r4, #0]
 8008862:	1821      	adds	r1, r4, r0
 8008864:	428b      	cmp	r3, r1
 8008866:	d103      	bne.n	8008870 <_free_r+0x88>
 8008868:	6819      	ldr	r1, [r3, #0]
 800886a:	685b      	ldr	r3, [r3, #4]
 800886c:	1809      	adds	r1, r1, r0
 800886e:	6021      	str	r1, [r4, #0]
 8008870:	6063      	str	r3, [r4, #4]
 8008872:	6054      	str	r4, [r2, #4]
 8008874:	e7ca      	b.n	800880c <_free_r+0x24>
 8008876:	46c0      	nop			@ (mov r8, r8)
 8008878:	200001c4 	.word	0x200001c4

0800887c <sbrk_aligned>:
 800887c:	b570      	push	{r4, r5, r6, lr}
 800887e:	4e0f      	ldr	r6, [pc, #60]	@ (80088bc <sbrk_aligned+0x40>)
 8008880:	000d      	movs	r5, r1
 8008882:	6831      	ldr	r1, [r6, #0]
 8008884:	0004      	movs	r4, r0
 8008886:	2900      	cmp	r1, #0
 8008888:	d102      	bne.n	8008890 <sbrk_aligned+0x14>
 800888a:	f000 fcbb 	bl	8009204 <_sbrk_r>
 800888e:	6030      	str	r0, [r6, #0]
 8008890:	0029      	movs	r1, r5
 8008892:	0020      	movs	r0, r4
 8008894:	f000 fcb6 	bl	8009204 <_sbrk_r>
 8008898:	1c43      	adds	r3, r0, #1
 800889a:	d103      	bne.n	80088a4 <sbrk_aligned+0x28>
 800889c:	2501      	movs	r5, #1
 800889e:	426d      	negs	r5, r5
 80088a0:	0028      	movs	r0, r5
 80088a2:	bd70      	pop	{r4, r5, r6, pc}
 80088a4:	2303      	movs	r3, #3
 80088a6:	1cc5      	adds	r5, r0, #3
 80088a8:	439d      	bics	r5, r3
 80088aa:	42a8      	cmp	r0, r5
 80088ac:	d0f8      	beq.n	80088a0 <sbrk_aligned+0x24>
 80088ae:	1a29      	subs	r1, r5, r0
 80088b0:	0020      	movs	r0, r4
 80088b2:	f000 fca7 	bl	8009204 <_sbrk_r>
 80088b6:	3001      	adds	r0, #1
 80088b8:	d1f2      	bne.n	80088a0 <sbrk_aligned+0x24>
 80088ba:	e7ef      	b.n	800889c <sbrk_aligned+0x20>
 80088bc:	200001c0 	.word	0x200001c0

080088c0 <_malloc_r>:
 80088c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80088c2:	2203      	movs	r2, #3
 80088c4:	1ccb      	adds	r3, r1, #3
 80088c6:	4393      	bics	r3, r2
 80088c8:	3308      	adds	r3, #8
 80088ca:	0005      	movs	r5, r0
 80088cc:	001f      	movs	r7, r3
 80088ce:	2b0c      	cmp	r3, #12
 80088d0:	d234      	bcs.n	800893c <_malloc_r+0x7c>
 80088d2:	270c      	movs	r7, #12
 80088d4:	42b9      	cmp	r1, r7
 80088d6:	d833      	bhi.n	8008940 <_malloc_r+0x80>
 80088d8:	0028      	movs	r0, r5
 80088da:	f000 f871 	bl	80089c0 <__malloc_lock>
 80088de:	4e37      	ldr	r6, [pc, #220]	@ (80089bc <_malloc_r+0xfc>)
 80088e0:	6833      	ldr	r3, [r6, #0]
 80088e2:	001c      	movs	r4, r3
 80088e4:	2c00      	cmp	r4, #0
 80088e6:	d12f      	bne.n	8008948 <_malloc_r+0x88>
 80088e8:	0039      	movs	r1, r7
 80088ea:	0028      	movs	r0, r5
 80088ec:	f7ff ffc6 	bl	800887c <sbrk_aligned>
 80088f0:	0004      	movs	r4, r0
 80088f2:	1c43      	adds	r3, r0, #1
 80088f4:	d15f      	bne.n	80089b6 <_malloc_r+0xf6>
 80088f6:	6834      	ldr	r4, [r6, #0]
 80088f8:	9400      	str	r4, [sp, #0]
 80088fa:	9b00      	ldr	r3, [sp, #0]
 80088fc:	2b00      	cmp	r3, #0
 80088fe:	d14a      	bne.n	8008996 <_malloc_r+0xd6>
 8008900:	2c00      	cmp	r4, #0
 8008902:	d052      	beq.n	80089aa <_malloc_r+0xea>
 8008904:	6823      	ldr	r3, [r4, #0]
 8008906:	0028      	movs	r0, r5
 8008908:	18e3      	adds	r3, r4, r3
 800890a:	9900      	ldr	r1, [sp, #0]
 800890c:	9301      	str	r3, [sp, #4]
 800890e:	f000 fc79 	bl	8009204 <_sbrk_r>
 8008912:	9b01      	ldr	r3, [sp, #4]
 8008914:	4283      	cmp	r3, r0
 8008916:	d148      	bne.n	80089aa <_malloc_r+0xea>
 8008918:	6823      	ldr	r3, [r4, #0]
 800891a:	0028      	movs	r0, r5
 800891c:	1aff      	subs	r7, r7, r3
 800891e:	0039      	movs	r1, r7
 8008920:	f7ff ffac 	bl	800887c <sbrk_aligned>
 8008924:	3001      	adds	r0, #1
 8008926:	d040      	beq.n	80089aa <_malloc_r+0xea>
 8008928:	6823      	ldr	r3, [r4, #0]
 800892a:	19db      	adds	r3, r3, r7
 800892c:	6023      	str	r3, [r4, #0]
 800892e:	6833      	ldr	r3, [r6, #0]
 8008930:	685a      	ldr	r2, [r3, #4]
 8008932:	2a00      	cmp	r2, #0
 8008934:	d133      	bne.n	800899e <_malloc_r+0xde>
 8008936:	9b00      	ldr	r3, [sp, #0]
 8008938:	6033      	str	r3, [r6, #0]
 800893a:	e019      	b.n	8008970 <_malloc_r+0xb0>
 800893c:	2b00      	cmp	r3, #0
 800893e:	dac9      	bge.n	80088d4 <_malloc_r+0x14>
 8008940:	230c      	movs	r3, #12
 8008942:	602b      	str	r3, [r5, #0]
 8008944:	2000      	movs	r0, #0
 8008946:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008948:	6821      	ldr	r1, [r4, #0]
 800894a:	1bc9      	subs	r1, r1, r7
 800894c:	d420      	bmi.n	8008990 <_malloc_r+0xd0>
 800894e:	290b      	cmp	r1, #11
 8008950:	d90a      	bls.n	8008968 <_malloc_r+0xa8>
 8008952:	19e2      	adds	r2, r4, r7
 8008954:	6027      	str	r7, [r4, #0]
 8008956:	42a3      	cmp	r3, r4
 8008958:	d104      	bne.n	8008964 <_malloc_r+0xa4>
 800895a:	6032      	str	r2, [r6, #0]
 800895c:	6863      	ldr	r3, [r4, #4]
 800895e:	6011      	str	r1, [r2, #0]
 8008960:	6053      	str	r3, [r2, #4]
 8008962:	e005      	b.n	8008970 <_malloc_r+0xb0>
 8008964:	605a      	str	r2, [r3, #4]
 8008966:	e7f9      	b.n	800895c <_malloc_r+0x9c>
 8008968:	6862      	ldr	r2, [r4, #4]
 800896a:	42a3      	cmp	r3, r4
 800896c:	d10e      	bne.n	800898c <_malloc_r+0xcc>
 800896e:	6032      	str	r2, [r6, #0]
 8008970:	0028      	movs	r0, r5
 8008972:	f000 f82d 	bl	80089d0 <__malloc_unlock>
 8008976:	0020      	movs	r0, r4
 8008978:	2207      	movs	r2, #7
 800897a:	300b      	adds	r0, #11
 800897c:	1d23      	adds	r3, r4, #4
 800897e:	4390      	bics	r0, r2
 8008980:	1ac2      	subs	r2, r0, r3
 8008982:	4298      	cmp	r0, r3
 8008984:	d0df      	beq.n	8008946 <_malloc_r+0x86>
 8008986:	1a1b      	subs	r3, r3, r0
 8008988:	50a3      	str	r3, [r4, r2]
 800898a:	e7dc      	b.n	8008946 <_malloc_r+0x86>
 800898c:	605a      	str	r2, [r3, #4]
 800898e:	e7ef      	b.n	8008970 <_malloc_r+0xb0>
 8008990:	0023      	movs	r3, r4
 8008992:	6864      	ldr	r4, [r4, #4]
 8008994:	e7a6      	b.n	80088e4 <_malloc_r+0x24>
 8008996:	9c00      	ldr	r4, [sp, #0]
 8008998:	6863      	ldr	r3, [r4, #4]
 800899a:	9300      	str	r3, [sp, #0]
 800899c:	e7ad      	b.n	80088fa <_malloc_r+0x3a>
 800899e:	001a      	movs	r2, r3
 80089a0:	685b      	ldr	r3, [r3, #4]
 80089a2:	42a3      	cmp	r3, r4
 80089a4:	d1fb      	bne.n	800899e <_malloc_r+0xde>
 80089a6:	2300      	movs	r3, #0
 80089a8:	e7da      	b.n	8008960 <_malloc_r+0xa0>
 80089aa:	230c      	movs	r3, #12
 80089ac:	0028      	movs	r0, r5
 80089ae:	602b      	str	r3, [r5, #0]
 80089b0:	f000 f80e 	bl	80089d0 <__malloc_unlock>
 80089b4:	e7c6      	b.n	8008944 <_malloc_r+0x84>
 80089b6:	6007      	str	r7, [r0, #0]
 80089b8:	e7da      	b.n	8008970 <_malloc_r+0xb0>
 80089ba:	46c0      	nop			@ (mov r8, r8)
 80089bc:	200001c4 	.word	0x200001c4

080089c0 <__malloc_lock>:
 80089c0:	b510      	push	{r4, lr}
 80089c2:	4802      	ldr	r0, [pc, #8]	@ (80089cc <__malloc_lock+0xc>)
 80089c4:	f7ff ff0d 	bl	80087e2 <__retarget_lock_acquire_recursive>
 80089c8:	bd10      	pop	{r4, pc}
 80089ca:	46c0      	nop			@ (mov r8, r8)
 80089cc:	200001bc 	.word	0x200001bc

080089d0 <__malloc_unlock>:
 80089d0:	b510      	push	{r4, lr}
 80089d2:	4802      	ldr	r0, [pc, #8]	@ (80089dc <__malloc_unlock+0xc>)
 80089d4:	f7ff ff06 	bl	80087e4 <__retarget_lock_release_recursive>
 80089d8:	bd10      	pop	{r4, pc}
 80089da:	46c0      	nop			@ (mov r8, r8)
 80089dc:	200001bc 	.word	0x200001bc

080089e0 <__sfputc_r>:
 80089e0:	6893      	ldr	r3, [r2, #8]
 80089e2:	b510      	push	{r4, lr}
 80089e4:	3b01      	subs	r3, #1
 80089e6:	6093      	str	r3, [r2, #8]
 80089e8:	2b00      	cmp	r3, #0
 80089ea:	da04      	bge.n	80089f6 <__sfputc_r+0x16>
 80089ec:	6994      	ldr	r4, [r2, #24]
 80089ee:	42a3      	cmp	r3, r4
 80089f0:	db07      	blt.n	8008a02 <__sfputc_r+0x22>
 80089f2:	290a      	cmp	r1, #10
 80089f4:	d005      	beq.n	8008a02 <__sfputc_r+0x22>
 80089f6:	6813      	ldr	r3, [r2, #0]
 80089f8:	1c58      	adds	r0, r3, #1
 80089fa:	6010      	str	r0, [r2, #0]
 80089fc:	7019      	strb	r1, [r3, #0]
 80089fe:	0008      	movs	r0, r1
 8008a00:	bd10      	pop	{r4, pc}
 8008a02:	f000 fb5e 	bl	80090c2 <__swbuf_r>
 8008a06:	0001      	movs	r1, r0
 8008a08:	e7f9      	b.n	80089fe <__sfputc_r+0x1e>

08008a0a <__sfputs_r>:
 8008a0a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008a0c:	0006      	movs	r6, r0
 8008a0e:	000f      	movs	r7, r1
 8008a10:	0014      	movs	r4, r2
 8008a12:	18d5      	adds	r5, r2, r3
 8008a14:	42ac      	cmp	r4, r5
 8008a16:	d101      	bne.n	8008a1c <__sfputs_r+0x12>
 8008a18:	2000      	movs	r0, #0
 8008a1a:	e007      	b.n	8008a2c <__sfputs_r+0x22>
 8008a1c:	7821      	ldrb	r1, [r4, #0]
 8008a1e:	003a      	movs	r2, r7
 8008a20:	0030      	movs	r0, r6
 8008a22:	f7ff ffdd 	bl	80089e0 <__sfputc_r>
 8008a26:	3401      	adds	r4, #1
 8008a28:	1c43      	adds	r3, r0, #1
 8008a2a:	d1f3      	bne.n	8008a14 <__sfputs_r+0xa>
 8008a2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08008a30 <_vfiprintf_r>:
 8008a30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008a32:	b0a1      	sub	sp, #132	@ 0x84
 8008a34:	000f      	movs	r7, r1
 8008a36:	0015      	movs	r5, r2
 8008a38:	001e      	movs	r6, r3
 8008a3a:	9003      	str	r0, [sp, #12]
 8008a3c:	2800      	cmp	r0, #0
 8008a3e:	d004      	beq.n	8008a4a <_vfiprintf_r+0x1a>
 8008a40:	6a03      	ldr	r3, [r0, #32]
 8008a42:	2b00      	cmp	r3, #0
 8008a44:	d101      	bne.n	8008a4a <_vfiprintf_r+0x1a>
 8008a46:	f7ff fdbb 	bl	80085c0 <__sinit>
 8008a4a:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8008a4c:	07db      	lsls	r3, r3, #31
 8008a4e:	d405      	bmi.n	8008a5c <_vfiprintf_r+0x2c>
 8008a50:	89bb      	ldrh	r3, [r7, #12]
 8008a52:	059b      	lsls	r3, r3, #22
 8008a54:	d402      	bmi.n	8008a5c <_vfiprintf_r+0x2c>
 8008a56:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8008a58:	f7ff fec3 	bl	80087e2 <__retarget_lock_acquire_recursive>
 8008a5c:	89bb      	ldrh	r3, [r7, #12]
 8008a5e:	071b      	lsls	r3, r3, #28
 8008a60:	d502      	bpl.n	8008a68 <_vfiprintf_r+0x38>
 8008a62:	693b      	ldr	r3, [r7, #16]
 8008a64:	2b00      	cmp	r3, #0
 8008a66:	d113      	bne.n	8008a90 <_vfiprintf_r+0x60>
 8008a68:	0039      	movs	r1, r7
 8008a6a:	9803      	ldr	r0, [sp, #12]
 8008a6c:	f000 fb6c 	bl	8009148 <__swsetup_r>
 8008a70:	2800      	cmp	r0, #0
 8008a72:	d00d      	beq.n	8008a90 <_vfiprintf_r+0x60>
 8008a74:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8008a76:	07db      	lsls	r3, r3, #31
 8008a78:	d503      	bpl.n	8008a82 <_vfiprintf_r+0x52>
 8008a7a:	2001      	movs	r0, #1
 8008a7c:	4240      	negs	r0, r0
 8008a7e:	b021      	add	sp, #132	@ 0x84
 8008a80:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008a82:	89bb      	ldrh	r3, [r7, #12]
 8008a84:	059b      	lsls	r3, r3, #22
 8008a86:	d4f8      	bmi.n	8008a7a <_vfiprintf_r+0x4a>
 8008a88:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8008a8a:	f7ff feab 	bl	80087e4 <__retarget_lock_release_recursive>
 8008a8e:	e7f4      	b.n	8008a7a <_vfiprintf_r+0x4a>
 8008a90:	2300      	movs	r3, #0
 8008a92:	ac08      	add	r4, sp, #32
 8008a94:	6163      	str	r3, [r4, #20]
 8008a96:	3320      	adds	r3, #32
 8008a98:	7663      	strb	r3, [r4, #25]
 8008a9a:	3310      	adds	r3, #16
 8008a9c:	76a3      	strb	r3, [r4, #26]
 8008a9e:	9607      	str	r6, [sp, #28]
 8008aa0:	002e      	movs	r6, r5
 8008aa2:	7833      	ldrb	r3, [r6, #0]
 8008aa4:	2b00      	cmp	r3, #0
 8008aa6:	d001      	beq.n	8008aac <_vfiprintf_r+0x7c>
 8008aa8:	2b25      	cmp	r3, #37	@ 0x25
 8008aaa:	d148      	bne.n	8008b3e <_vfiprintf_r+0x10e>
 8008aac:	1b73      	subs	r3, r6, r5
 8008aae:	9305      	str	r3, [sp, #20]
 8008ab0:	42ae      	cmp	r6, r5
 8008ab2:	d00b      	beq.n	8008acc <_vfiprintf_r+0x9c>
 8008ab4:	002a      	movs	r2, r5
 8008ab6:	0039      	movs	r1, r7
 8008ab8:	9803      	ldr	r0, [sp, #12]
 8008aba:	f7ff ffa6 	bl	8008a0a <__sfputs_r>
 8008abe:	3001      	adds	r0, #1
 8008ac0:	d100      	bne.n	8008ac4 <_vfiprintf_r+0x94>
 8008ac2:	e0ae      	b.n	8008c22 <_vfiprintf_r+0x1f2>
 8008ac4:	6963      	ldr	r3, [r4, #20]
 8008ac6:	9a05      	ldr	r2, [sp, #20]
 8008ac8:	189b      	adds	r3, r3, r2
 8008aca:	6163      	str	r3, [r4, #20]
 8008acc:	7833      	ldrb	r3, [r6, #0]
 8008ace:	2b00      	cmp	r3, #0
 8008ad0:	d100      	bne.n	8008ad4 <_vfiprintf_r+0xa4>
 8008ad2:	e0a6      	b.n	8008c22 <_vfiprintf_r+0x1f2>
 8008ad4:	2201      	movs	r2, #1
 8008ad6:	2300      	movs	r3, #0
 8008ad8:	4252      	negs	r2, r2
 8008ada:	6062      	str	r2, [r4, #4]
 8008adc:	a904      	add	r1, sp, #16
 8008ade:	3254      	adds	r2, #84	@ 0x54
 8008ae0:	1852      	adds	r2, r2, r1
 8008ae2:	1c75      	adds	r5, r6, #1
 8008ae4:	6023      	str	r3, [r4, #0]
 8008ae6:	60e3      	str	r3, [r4, #12]
 8008ae8:	60a3      	str	r3, [r4, #8]
 8008aea:	7013      	strb	r3, [r2, #0]
 8008aec:	65a3      	str	r3, [r4, #88]	@ 0x58
 8008aee:	4b59      	ldr	r3, [pc, #356]	@ (8008c54 <_vfiprintf_r+0x224>)
 8008af0:	2205      	movs	r2, #5
 8008af2:	0018      	movs	r0, r3
 8008af4:	7829      	ldrb	r1, [r5, #0]
 8008af6:	9305      	str	r3, [sp, #20]
 8008af8:	f000 fb96 	bl	8009228 <memchr>
 8008afc:	1c6e      	adds	r6, r5, #1
 8008afe:	2800      	cmp	r0, #0
 8008b00:	d11f      	bne.n	8008b42 <_vfiprintf_r+0x112>
 8008b02:	6822      	ldr	r2, [r4, #0]
 8008b04:	06d3      	lsls	r3, r2, #27
 8008b06:	d504      	bpl.n	8008b12 <_vfiprintf_r+0xe2>
 8008b08:	2353      	movs	r3, #83	@ 0x53
 8008b0a:	a904      	add	r1, sp, #16
 8008b0c:	185b      	adds	r3, r3, r1
 8008b0e:	2120      	movs	r1, #32
 8008b10:	7019      	strb	r1, [r3, #0]
 8008b12:	0713      	lsls	r3, r2, #28
 8008b14:	d504      	bpl.n	8008b20 <_vfiprintf_r+0xf0>
 8008b16:	2353      	movs	r3, #83	@ 0x53
 8008b18:	a904      	add	r1, sp, #16
 8008b1a:	185b      	adds	r3, r3, r1
 8008b1c:	212b      	movs	r1, #43	@ 0x2b
 8008b1e:	7019      	strb	r1, [r3, #0]
 8008b20:	782b      	ldrb	r3, [r5, #0]
 8008b22:	2b2a      	cmp	r3, #42	@ 0x2a
 8008b24:	d016      	beq.n	8008b54 <_vfiprintf_r+0x124>
 8008b26:	002e      	movs	r6, r5
 8008b28:	2100      	movs	r1, #0
 8008b2a:	200a      	movs	r0, #10
 8008b2c:	68e3      	ldr	r3, [r4, #12]
 8008b2e:	7832      	ldrb	r2, [r6, #0]
 8008b30:	1c75      	adds	r5, r6, #1
 8008b32:	3a30      	subs	r2, #48	@ 0x30
 8008b34:	2a09      	cmp	r2, #9
 8008b36:	d950      	bls.n	8008bda <_vfiprintf_r+0x1aa>
 8008b38:	2900      	cmp	r1, #0
 8008b3a:	d111      	bne.n	8008b60 <_vfiprintf_r+0x130>
 8008b3c:	e017      	b.n	8008b6e <_vfiprintf_r+0x13e>
 8008b3e:	3601      	adds	r6, #1
 8008b40:	e7af      	b.n	8008aa2 <_vfiprintf_r+0x72>
 8008b42:	9b05      	ldr	r3, [sp, #20]
 8008b44:	6822      	ldr	r2, [r4, #0]
 8008b46:	1ac0      	subs	r0, r0, r3
 8008b48:	2301      	movs	r3, #1
 8008b4a:	4083      	lsls	r3, r0
 8008b4c:	4313      	orrs	r3, r2
 8008b4e:	0035      	movs	r5, r6
 8008b50:	6023      	str	r3, [r4, #0]
 8008b52:	e7cc      	b.n	8008aee <_vfiprintf_r+0xbe>
 8008b54:	9b07      	ldr	r3, [sp, #28]
 8008b56:	1d19      	adds	r1, r3, #4
 8008b58:	681b      	ldr	r3, [r3, #0]
 8008b5a:	9107      	str	r1, [sp, #28]
 8008b5c:	2b00      	cmp	r3, #0
 8008b5e:	db01      	blt.n	8008b64 <_vfiprintf_r+0x134>
 8008b60:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008b62:	e004      	b.n	8008b6e <_vfiprintf_r+0x13e>
 8008b64:	425b      	negs	r3, r3
 8008b66:	60e3      	str	r3, [r4, #12]
 8008b68:	2302      	movs	r3, #2
 8008b6a:	4313      	orrs	r3, r2
 8008b6c:	6023      	str	r3, [r4, #0]
 8008b6e:	7833      	ldrb	r3, [r6, #0]
 8008b70:	2b2e      	cmp	r3, #46	@ 0x2e
 8008b72:	d10c      	bne.n	8008b8e <_vfiprintf_r+0x15e>
 8008b74:	7873      	ldrb	r3, [r6, #1]
 8008b76:	2b2a      	cmp	r3, #42	@ 0x2a
 8008b78:	d134      	bne.n	8008be4 <_vfiprintf_r+0x1b4>
 8008b7a:	9b07      	ldr	r3, [sp, #28]
 8008b7c:	3602      	adds	r6, #2
 8008b7e:	1d1a      	adds	r2, r3, #4
 8008b80:	681b      	ldr	r3, [r3, #0]
 8008b82:	9207      	str	r2, [sp, #28]
 8008b84:	2b00      	cmp	r3, #0
 8008b86:	da01      	bge.n	8008b8c <_vfiprintf_r+0x15c>
 8008b88:	2301      	movs	r3, #1
 8008b8a:	425b      	negs	r3, r3
 8008b8c:	9309      	str	r3, [sp, #36]	@ 0x24
 8008b8e:	4d32      	ldr	r5, [pc, #200]	@ (8008c58 <_vfiprintf_r+0x228>)
 8008b90:	2203      	movs	r2, #3
 8008b92:	0028      	movs	r0, r5
 8008b94:	7831      	ldrb	r1, [r6, #0]
 8008b96:	f000 fb47 	bl	8009228 <memchr>
 8008b9a:	2800      	cmp	r0, #0
 8008b9c:	d006      	beq.n	8008bac <_vfiprintf_r+0x17c>
 8008b9e:	2340      	movs	r3, #64	@ 0x40
 8008ba0:	1b40      	subs	r0, r0, r5
 8008ba2:	4083      	lsls	r3, r0
 8008ba4:	6822      	ldr	r2, [r4, #0]
 8008ba6:	3601      	adds	r6, #1
 8008ba8:	4313      	orrs	r3, r2
 8008baa:	6023      	str	r3, [r4, #0]
 8008bac:	7831      	ldrb	r1, [r6, #0]
 8008bae:	2206      	movs	r2, #6
 8008bb0:	482a      	ldr	r0, [pc, #168]	@ (8008c5c <_vfiprintf_r+0x22c>)
 8008bb2:	1c75      	adds	r5, r6, #1
 8008bb4:	7621      	strb	r1, [r4, #24]
 8008bb6:	f000 fb37 	bl	8009228 <memchr>
 8008bba:	2800      	cmp	r0, #0
 8008bbc:	d040      	beq.n	8008c40 <_vfiprintf_r+0x210>
 8008bbe:	4b28      	ldr	r3, [pc, #160]	@ (8008c60 <_vfiprintf_r+0x230>)
 8008bc0:	2b00      	cmp	r3, #0
 8008bc2:	d122      	bne.n	8008c0a <_vfiprintf_r+0x1da>
 8008bc4:	2207      	movs	r2, #7
 8008bc6:	9b07      	ldr	r3, [sp, #28]
 8008bc8:	3307      	adds	r3, #7
 8008bca:	4393      	bics	r3, r2
 8008bcc:	3308      	adds	r3, #8
 8008bce:	9307      	str	r3, [sp, #28]
 8008bd0:	6963      	ldr	r3, [r4, #20]
 8008bd2:	9a04      	ldr	r2, [sp, #16]
 8008bd4:	189b      	adds	r3, r3, r2
 8008bd6:	6163      	str	r3, [r4, #20]
 8008bd8:	e762      	b.n	8008aa0 <_vfiprintf_r+0x70>
 8008bda:	4343      	muls	r3, r0
 8008bdc:	002e      	movs	r6, r5
 8008bde:	2101      	movs	r1, #1
 8008be0:	189b      	adds	r3, r3, r2
 8008be2:	e7a4      	b.n	8008b2e <_vfiprintf_r+0xfe>
 8008be4:	2300      	movs	r3, #0
 8008be6:	200a      	movs	r0, #10
 8008be8:	0019      	movs	r1, r3
 8008bea:	3601      	adds	r6, #1
 8008bec:	6063      	str	r3, [r4, #4]
 8008bee:	7832      	ldrb	r2, [r6, #0]
 8008bf0:	1c75      	adds	r5, r6, #1
 8008bf2:	3a30      	subs	r2, #48	@ 0x30
 8008bf4:	2a09      	cmp	r2, #9
 8008bf6:	d903      	bls.n	8008c00 <_vfiprintf_r+0x1d0>
 8008bf8:	2b00      	cmp	r3, #0
 8008bfa:	d0c8      	beq.n	8008b8e <_vfiprintf_r+0x15e>
 8008bfc:	9109      	str	r1, [sp, #36]	@ 0x24
 8008bfe:	e7c6      	b.n	8008b8e <_vfiprintf_r+0x15e>
 8008c00:	4341      	muls	r1, r0
 8008c02:	002e      	movs	r6, r5
 8008c04:	2301      	movs	r3, #1
 8008c06:	1889      	adds	r1, r1, r2
 8008c08:	e7f1      	b.n	8008bee <_vfiprintf_r+0x1be>
 8008c0a:	aa07      	add	r2, sp, #28
 8008c0c:	9200      	str	r2, [sp, #0]
 8008c0e:	0021      	movs	r1, r4
 8008c10:	003a      	movs	r2, r7
 8008c12:	4b14      	ldr	r3, [pc, #80]	@ (8008c64 <_vfiprintf_r+0x234>)
 8008c14:	9803      	ldr	r0, [sp, #12]
 8008c16:	e000      	b.n	8008c1a <_vfiprintf_r+0x1ea>
 8008c18:	bf00      	nop
 8008c1a:	9004      	str	r0, [sp, #16]
 8008c1c:	9b04      	ldr	r3, [sp, #16]
 8008c1e:	3301      	adds	r3, #1
 8008c20:	d1d6      	bne.n	8008bd0 <_vfiprintf_r+0x1a0>
 8008c22:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8008c24:	07db      	lsls	r3, r3, #31
 8008c26:	d405      	bmi.n	8008c34 <_vfiprintf_r+0x204>
 8008c28:	89bb      	ldrh	r3, [r7, #12]
 8008c2a:	059b      	lsls	r3, r3, #22
 8008c2c:	d402      	bmi.n	8008c34 <_vfiprintf_r+0x204>
 8008c2e:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8008c30:	f7ff fdd8 	bl	80087e4 <__retarget_lock_release_recursive>
 8008c34:	89bb      	ldrh	r3, [r7, #12]
 8008c36:	065b      	lsls	r3, r3, #25
 8008c38:	d500      	bpl.n	8008c3c <_vfiprintf_r+0x20c>
 8008c3a:	e71e      	b.n	8008a7a <_vfiprintf_r+0x4a>
 8008c3c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8008c3e:	e71e      	b.n	8008a7e <_vfiprintf_r+0x4e>
 8008c40:	aa07      	add	r2, sp, #28
 8008c42:	9200      	str	r2, [sp, #0]
 8008c44:	0021      	movs	r1, r4
 8008c46:	003a      	movs	r2, r7
 8008c48:	4b06      	ldr	r3, [pc, #24]	@ (8008c64 <_vfiprintf_r+0x234>)
 8008c4a:	9803      	ldr	r0, [sp, #12]
 8008c4c:	f000 f87c 	bl	8008d48 <_printf_i>
 8008c50:	e7e3      	b.n	8008c1a <_vfiprintf_r+0x1ea>
 8008c52:	46c0      	nop			@ (mov r8, r8)
 8008c54:	08009395 	.word	0x08009395
 8008c58:	0800939b 	.word	0x0800939b
 8008c5c:	0800939f 	.word	0x0800939f
 8008c60:	00000000 	.word	0x00000000
 8008c64:	08008a0b 	.word	0x08008a0b

08008c68 <_printf_common>:
 8008c68:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008c6a:	0016      	movs	r6, r2
 8008c6c:	9301      	str	r3, [sp, #4]
 8008c6e:	688a      	ldr	r2, [r1, #8]
 8008c70:	690b      	ldr	r3, [r1, #16]
 8008c72:	000c      	movs	r4, r1
 8008c74:	9000      	str	r0, [sp, #0]
 8008c76:	4293      	cmp	r3, r2
 8008c78:	da00      	bge.n	8008c7c <_printf_common+0x14>
 8008c7a:	0013      	movs	r3, r2
 8008c7c:	0022      	movs	r2, r4
 8008c7e:	6033      	str	r3, [r6, #0]
 8008c80:	3243      	adds	r2, #67	@ 0x43
 8008c82:	7812      	ldrb	r2, [r2, #0]
 8008c84:	2a00      	cmp	r2, #0
 8008c86:	d001      	beq.n	8008c8c <_printf_common+0x24>
 8008c88:	3301      	adds	r3, #1
 8008c8a:	6033      	str	r3, [r6, #0]
 8008c8c:	6823      	ldr	r3, [r4, #0]
 8008c8e:	069b      	lsls	r3, r3, #26
 8008c90:	d502      	bpl.n	8008c98 <_printf_common+0x30>
 8008c92:	6833      	ldr	r3, [r6, #0]
 8008c94:	3302      	adds	r3, #2
 8008c96:	6033      	str	r3, [r6, #0]
 8008c98:	6822      	ldr	r2, [r4, #0]
 8008c9a:	2306      	movs	r3, #6
 8008c9c:	0015      	movs	r5, r2
 8008c9e:	401d      	ands	r5, r3
 8008ca0:	421a      	tst	r2, r3
 8008ca2:	d027      	beq.n	8008cf4 <_printf_common+0x8c>
 8008ca4:	0023      	movs	r3, r4
 8008ca6:	3343      	adds	r3, #67	@ 0x43
 8008ca8:	781b      	ldrb	r3, [r3, #0]
 8008caa:	1e5a      	subs	r2, r3, #1
 8008cac:	4193      	sbcs	r3, r2
 8008cae:	6822      	ldr	r2, [r4, #0]
 8008cb0:	0692      	lsls	r2, r2, #26
 8008cb2:	d430      	bmi.n	8008d16 <_printf_common+0xae>
 8008cb4:	0022      	movs	r2, r4
 8008cb6:	9901      	ldr	r1, [sp, #4]
 8008cb8:	9800      	ldr	r0, [sp, #0]
 8008cba:	9d08      	ldr	r5, [sp, #32]
 8008cbc:	3243      	adds	r2, #67	@ 0x43
 8008cbe:	47a8      	blx	r5
 8008cc0:	3001      	adds	r0, #1
 8008cc2:	d025      	beq.n	8008d10 <_printf_common+0xa8>
 8008cc4:	2206      	movs	r2, #6
 8008cc6:	6823      	ldr	r3, [r4, #0]
 8008cc8:	2500      	movs	r5, #0
 8008cca:	4013      	ands	r3, r2
 8008ccc:	2b04      	cmp	r3, #4
 8008cce:	d105      	bne.n	8008cdc <_printf_common+0x74>
 8008cd0:	6833      	ldr	r3, [r6, #0]
 8008cd2:	68e5      	ldr	r5, [r4, #12]
 8008cd4:	1aed      	subs	r5, r5, r3
 8008cd6:	43eb      	mvns	r3, r5
 8008cd8:	17db      	asrs	r3, r3, #31
 8008cda:	401d      	ands	r5, r3
 8008cdc:	68a3      	ldr	r3, [r4, #8]
 8008cde:	6922      	ldr	r2, [r4, #16]
 8008ce0:	4293      	cmp	r3, r2
 8008ce2:	dd01      	ble.n	8008ce8 <_printf_common+0x80>
 8008ce4:	1a9b      	subs	r3, r3, r2
 8008ce6:	18ed      	adds	r5, r5, r3
 8008ce8:	2600      	movs	r6, #0
 8008cea:	42b5      	cmp	r5, r6
 8008cec:	d120      	bne.n	8008d30 <_printf_common+0xc8>
 8008cee:	2000      	movs	r0, #0
 8008cf0:	e010      	b.n	8008d14 <_printf_common+0xac>
 8008cf2:	3501      	adds	r5, #1
 8008cf4:	68e3      	ldr	r3, [r4, #12]
 8008cf6:	6832      	ldr	r2, [r6, #0]
 8008cf8:	1a9b      	subs	r3, r3, r2
 8008cfa:	42ab      	cmp	r3, r5
 8008cfc:	ddd2      	ble.n	8008ca4 <_printf_common+0x3c>
 8008cfe:	0022      	movs	r2, r4
 8008d00:	2301      	movs	r3, #1
 8008d02:	9901      	ldr	r1, [sp, #4]
 8008d04:	9800      	ldr	r0, [sp, #0]
 8008d06:	9f08      	ldr	r7, [sp, #32]
 8008d08:	3219      	adds	r2, #25
 8008d0a:	47b8      	blx	r7
 8008d0c:	3001      	adds	r0, #1
 8008d0e:	d1f0      	bne.n	8008cf2 <_printf_common+0x8a>
 8008d10:	2001      	movs	r0, #1
 8008d12:	4240      	negs	r0, r0
 8008d14:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008d16:	2030      	movs	r0, #48	@ 0x30
 8008d18:	18e1      	adds	r1, r4, r3
 8008d1a:	3143      	adds	r1, #67	@ 0x43
 8008d1c:	7008      	strb	r0, [r1, #0]
 8008d1e:	0021      	movs	r1, r4
 8008d20:	1c5a      	adds	r2, r3, #1
 8008d22:	3145      	adds	r1, #69	@ 0x45
 8008d24:	7809      	ldrb	r1, [r1, #0]
 8008d26:	18a2      	adds	r2, r4, r2
 8008d28:	3243      	adds	r2, #67	@ 0x43
 8008d2a:	3302      	adds	r3, #2
 8008d2c:	7011      	strb	r1, [r2, #0]
 8008d2e:	e7c1      	b.n	8008cb4 <_printf_common+0x4c>
 8008d30:	0022      	movs	r2, r4
 8008d32:	2301      	movs	r3, #1
 8008d34:	9901      	ldr	r1, [sp, #4]
 8008d36:	9800      	ldr	r0, [sp, #0]
 8008d38:	9f08      	ldr	r7, [sp, #32]
 8008d3a:	321a      	adds	r2, #26
 8008d3c:	47b8      	blx	r7
 8008d3e:	3001      	adds	r0, #1
 8008d40:	d0e6      	beq.n	8008d10 <_printf_common+0xa8>
 8008d42:	3601      	adds	r6, #1
 8008d44:	e7d1      	b.n	8008cea <_printf_common+0x82>
	...

08008d48 <_printf_i>:
 8008d48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008d4a:	b08b      	sub	sp, #44	@ 0x2c
 8008d4c:	9206      	str	r2, [sp, #24]
 8008d4e:	000a      	movs	r2, r1
 8008d50:	3243      	adds	r2, #67	@ 0x43
 8008d52:	9307      	str	r3, [sp, #28]
 8008d54:	9005      	str	r0, [sp, #20]
 8008d56:	9203      	str	r2, [sp, #12]
 8008d58:	7e0a      	ldrb	r2, [r1, #24]
 8008d5a:	000c      	movs	r4, r1
 8008d5c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8008d5e:	2a78      	cmp	r2, #120	@ 0x78
 8008d60:	d809      	bhi.n	8008d76 <_printf_i+0x2e>
 8008d62:	2a62      	cmp	r2, #98	@ 0x62
 8008d64:	d80b      	bhi.n	8008d7e <_printf_i+0x36>
 8008d66:	2a00      	cmp	r2, #0
 8008d68:	d100      	bne.n	8008d6c <_printf_i+0x24>
 8008d6a:	e0ba      	b.n	8008ee2 <_printf_i+0x19a>
 8008d6c:	497a      	ldr	r1, [pc, #488]	@ (8008f58 <_printf_i+0x210>)
 8008d6e:	9104      	str	r1, [sp, #16]
 8008d70:	2a58      	cmp	r2, #88	@ 0x58
 8008d72:	d100      	bne.n	8008d76 <_printf_i+0x2e>
 8008d74:	e08e      	b.n	8008e94 <_printf_i+0x14c>
 8008d76:	0025      	movs	r5, r4
 8008d78:	3542      	adds	r5, #66	@ 0x42
 8008d7a:	702a      	strb	r2, [r5, #0]
 8008d7c:	e022      	b.n	8008dc4 <_printf_i+0x7c>
 8008d7e:	0010      	movs	r0, r2
 8008d80:	3863      	subs	r0, #99	@ 0x63
 8008d82:	2815      	cmp	r0, #21
 8008d84:	d8f7      	bhi.n	8008d76 <_printf_i+0x2e>
 8008d86:	f7ff f9bf 	bl	8008108 <__gnu_thumb1_case_shi>
 8008d8a:	0016      	.short	0x0016
 8008d8c:	fff6001f 	.word	0xfff6001f
 8008d90:	fff6fff6 	.word	0xfff6fff6
 8008d94:	001ffff6 	.word	0x001ffff6
 8008d98:	fff6fff6 	.word	0xfff6fff6
 8008d9c:	fff6fff6 	.word	0xfff6fff6
 8008da0:	0036009f 	.word	0x0036009f
 8008da4:	fff6007e 	.word	0xfff6007e
 8008da8:	00b0fff6 	.word	0x00b0fff6
 8008dac:	0036fff6 	.word	0x0036fff6
 8008db0:	fff6fff6 	.word	0xfff6fff6
 8008db4:	0082      	.short	0x0082
 8008db6:	0025      	movs	r5, r4
 8008db8:	681a      	ldr	r2, [r3, #0]
 8008dba:	3542      	adds	r5, #66	@ 0x42
 8008dbc:	1d11      	adds	r1, r2, #4
 8008dbe:	6019      	str	r1, [r3, #0]
 8008dc0:	6813      	ldr	r3, [r2, #0]
 8008dc2:	702b      	strb	r3, [r5, #0]
 8008dc4:	2301      	movs	r3, #1
 8008dc6:	e09e      	b.n	8008f06 <_printf_i+0x1be>
 8008dc8:	6818      	ldr	r0, [r3, #0]
 8008dca:	6809      	ldr	r1, [r1, #0]
 8008dcc:	1d02      	adds	r2, r0, #4
 8008dce:	060d      	lsls	r5, r1, #24
 8008dd0:	d50b      	bpl.n	8008dea <_printf_i+0xa2>
 8008dd2:	6806      	ldr	r6, [r0, #0]
 8008dd4:	601a      	str	r2, [r3, #0]
 8008dd6:	2e00      	cmp	r6, #0
 8008dd8:	da03      	bge.n	8008de2 <_printf_i+0x9a>
 8008dda:	232d      	movs	r3, #45	@ 0x2d
 8008ddc:	9a03      	ldr	r2, [sp, #12]
 8008dde:	4276      	negs	r6, r6
 8008de0:	7013      	strb	r3, [r2, #0]
 8008de2:	4b5d      	ldr	r3, [pc, #372]	@ (8008f58 <_printf_i+0x210>)
 8008de4:	270a      	movs	r7, #10
 8008de6:	9304      	str	r3, [sp, #16]
 8008de8:	e018      	b.n	8008e1c <_printf_i+0xd4>
 8008dea:	6806      	ldr	r6, [r0, #0]
 8008dec:	601a      	str	r2, [r3, #0]
 8008dee:	0649      	lsls	r1, r1, #25
 8008df0:	d5f1      	bpl.n	8008dd6 <_printf_i+0x8e>
 8008df2:	b236      	sxth	r6, r6
 8008df4:	e7ef      	b.n	8008dd6 <_printf_i+0x8e>
 8008df6:	6808      	ldr	r0, [r1, #0]
 8008df8:	6819      	ldr	r1, [r3, #0]
 8008dfa:	c940      	ldmia	r1!, {r6}
 8008dfc:	0605      	lsls	r5, r0, #24
 8008dfe:	d402      	bmi.n	8008e06 <_printf_i+0xbe>
 8008e00:	0640      	lsls	r0, r0, #25
 8008e02:	d500      	bpl.n	8008e06 <_printf_i+0xbe>
 8008e04:	b2b6      	uxth	r6, r6
 8008e06:	6019      	str	r1, [r3, #0]
 8008e08:	4b53      	ldr	r3, [pc, #332]	@ (8008f58 <_printf_i+0x210>)
 8008e0a:	270a      	movs	r7, #10
 8008e0c:	9304      	str	r3, [sp, #16]
 8008e0e:	2a6f      	cmp	r2, #111	@ 0x6f
 8008e10:	d100      	bne.n	8008e14 <_printf_i+0xcc>
 8008e12:	3f02      	subs	r7, #2
 8008e14:	0023      	movs	r3, r4
 8008e16:	2200      	movs	r2, #0
 8008e18:	3343      	adds	r3, #67	@ 0x43
 8008e1a:	701a      	strb	r2, [r3, #0]
 8008e1c:	6863      	ldr	r3, [r4, #4]
 8008e1e:	60a3      	str	r3, [r4, #8]
 8008e20:	2b00      	cmp	r3, #0
 8008e22:	db06      	blt.n	8008e32 <_printf_i+0xea>
 8008e24:	2104      	movs	r1, #4
 8008e26:	6822      	ldr	r2, [r4, #0]
 8008e28:	9d03      	ldr	r5, [sp, #12]
 8008e2a:	438a      	bics	r2, r1
 8008e2c:	6022      	str	r2, [r4, #0]
 8008e2e:	4333      	orrs	r3, r6
 8008e30:	d00c      	beq.n	8008e4c <_printf_i+0x104>
 8008e32:	9d03      	ldr	r5, [sp, #12]
 8008e34:	0030      	movs	r0, r6
 8008e36:	0039      	movs	r1, r7
 8008e38:	f7ff f9f6 	bl	8008228 <__aeabi_uidivmod>
 8008e3c:	9b04      	ldr	r3, [sp, #16]
 8008e3e:	3d01      	subs	r5, #1
 8008e40:	5c5b      	ldrb	r3, [r3, r1]
 8008e42:	702b      	strb	r3, [r5, #0]
 8008e44:	0033      	movs	r3, r6
 8008e46:	0006      	movs	r6, r0
 8008e48:	429f      	cmp	r7, r3
 8008e4a:	d9f3      	bls.n	8008e34 <_printf_i+0xec>
 8008e4c:	2f08      	cmp	r7, #8
 8008e4e:	d109      	bne.n	8008e64 <_printf_i+0x11c>
 8008e50:	6823      	ldr	r3, [r4, #0]
 8008e52:	07db      	lsls	r3, r3, #31
 8008e54:	d506      	bpl.n	8008e64 <_printf_i+0x11c>
 8008e56:	6862      	ldr	r2, [r4, #4]
 8008e58:	6923      	ldr	r3, [r4, #16]
 8008e5a:	429a      	cmp	r2, r3
 8008e5c:	dc02      	bgt.n	8008e64 <_printf_i+0x11c>
 8008e5e:	2330      	movs	r3, #48	@ 0x30
 8008e60:	3d01      	subs	r5, #1
 8008e62:	702b      	strb	r3, [r5, #0]
 8008e64:	9b03      	ldr	r3, [sp, #12]
 8008e66:	1b5b      	subs	r3, r3, r5
 8008e68:	6123      	str	r3, [r4, #16]
 8008e6a:	9b07      	ldr	r3, [sp, #28]
 8008e6c:	0021      	movs	r1, r4
 8008e6e:	9300      	str	r3, [sp, #0]
 8008e70:	9805      	ldr	r0, [sp, #20]
 8008e72:	9b06      	ldr	r3, [sp, #24]
 8008e74:	aa09      	add	r2, sp, #36	@ 0x24
 8008e76:	f7ff fef7 	bl	8008c68 <_printf_common>
 8008e7a:	3001      	adds	r0, #1
 8008e7c:	d148      	bne.n	8008f10 <_printf_i+0x1c8>
 8008e7e:	2001      	movs	r0, #1
 8008e80:	4240      	negs	r0, r0
 8008e82:	b00b      	add	sp, #44	@ 0x2c
 8008e84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008e86:	2220      	movs	r2, #32
 8008e88:	6809      	ldr	r1, [r1, #0]
 8008e8a:	430a      	orrs	r2, r1
 8008e8c:	6022      	str	r2, [r4, #0]
 8008e8e:	2278      	movs	r2, #120	@ 0x78
 8008e90:	4932      	ldr	r1, [pc, #200]	@ (8008f5c <_printf_i+0x214>)
 8008e92:	9104      	str	r1, [sp, #16]
 8008e94:	0021      	movs	r1, r4
 8008e96:	3145      	adds	r1, #69	@ 0x45
 8008e98:	700a      	strb	r2, [r1, #0]
 8008e9a:	6819      	ldr	r1, [r3, #0]
 8008e9c:	6822      	ldr	r2, [r4, #0]
 8008e9e:	c940      	ldmia	r1!, {r6}
 8008ea0:	0610      	lsls	r0, r2, #24
 8008ea2:	d402      	bmi.n	8008eaa <_printf_i+0x162>
 8008ea4:	0650      	lsls	r0, r2, #25
 8008ea6:	d500      	bpl.n	8008eaa <_printf_i+0x162>
 8008ea8:	b2b6      	uxth	r6, r6
 8008eaa:	6019      	str	r1, [r3, #0]
 8008eac:	07d3      	lsls	r3, r2, #31
 8008eae:	d502      	bpl.n	8008eb6 <_printf_i+0x16e>
 8008eb0:	2320      	movs	r3, #32
 8008eb2:	4313      	orrs	r3, r2
 8008eb4:	6023      	str	r3, [r4, #0]
 8008eb6:	2e00      	cmp	r6, #0
 8008eb8:	d001      	beq.n	8008ebe <_printf_i+0x176>
 8008eba:	2710      	movs	r7, #16
 8008ebc:	e7aa      	b.n	8008e14 <_printf_i+0xcc>
 8008ebe:	2220      	movs	r2, #32
 8008ec0:	6823      	ldr	r3, [r4, #0]
 8008ec2:	4393      	bics	r3, r2
 8008ec4:	6023      	str	r3, [r4, #0]
 8008ec6:	e7f8      	b.n	8008eba <_printf_i+0x172>
 8008ec8:	681a      	ldr	r2, [r3, #0]
 8008eca:	680d      	ldr	r5, [r1, #0]
 8008ecc:	1d10      	adds	r0, r2, #4
 8008ece:	6949      	ldr	r1, [r1, #20]
 8008ed0:	6018      	str	r0, [r3, #0]
 8008ed2:	6813      	ldr	r3, [r2, #0]
 8008ed4:	062e      	lsls	r6, r5, #24
 8008ed6:	d501      	bpl.n	8008edc <_printf_i+0x194>
 8008ed8:	6019      	str	r1, [r3, #0]
 8008eda:	e002      	b.n	8008ee2 <_printf_i+0x19a>
 8008edc:	066d      	lsls	r5, r5, #25
 8008ede:	d5fb      	bpl.n	8008ed8 <_printf_i+0x190>
 8008ee0:	8019      	strh	r1, [r3, #0]
 8008ee2:	2300      	movs	r3, #0
 8008ee4:	9d03      	ldr	r5, [sp, #12]
 8008ee6:	6123      	str	r3, [r4, #16]
 8008ee8:	e7bf      	b.n	8008e6a <_printf_i+0x122>
 8008eea:	681a      	ldr	r2, [r3, #0]
 8008eec:	1d11      	adds	r1, r2, #4
 8008eee:	6019      	str	r1, [r3, #0]
 8008ef0:	6815      	ldr	r5, [r2, #0]
 8008ef2:	2100      	movs	r1, #0
 8008ef4:	0028      	movs	r0, r5
 8008ef6:	6862      	ldr	r2, [r4, #4]
 8008ef8:	f000 f996 	bl	8009228 <memchr>
 8008efc:	2800      	cmp	r0, #0
 8008efe:	d001      	beq.n	8008f04 <_printf_i+0x1bc>
 8008f00:	1b40      	subs	r0, r0, r5
 8008f02:	6060      	str	r0, [r4, #4]
 8008f04:	6863      	ldr	r3, [r4, #4]
 8008f06:	6123      	str	r3, [r4, #16]
 8008f08:	2300      	movs	r3, #0
 8008f0a:	9a03      	ldr	r2, [sp, #12]
 8008f0c:	7013      	strb	r3, [r2, #0]
 8008f0e:	e7ac      	b.n	8008e6a <_printf_i+0x122>
 8008f10:	002a      	movs	r2, r5
 8008f12:	6923      	ldr	r3, [r4, #16]
 8008f14:	9906      	ldr	r1, [sp, #24]
 8008f16:	9805      	ldr	r0, [sp, #20]
 8008f18:	9d07      	ldr	r5, [sp, #28]
 8008f1a:	47a8      	blx	r5
 8008f1c:	3001      	adds	r0, #1
 8008f1e:	d0ae      	beq.n	8008e7e <_printf_i+0x136>
 8008f20:	6823      	ldr	r3, [r4, #0]
 8008f22:	079b      	lsls	r3, r3, #30
 8008f24:	d415      	bmi.n	8008f52 <_printf_i+0x20a>
 8008f26:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008f28:	68e0      	ldr	r0, [r4, #12]
 8008f2a:	4298      	cmp	r0, r3
 8008f2c:	daa9      	bge.n	8008e82 <_printf_i+0x13a>
 8008f2e:	0018      	movs	r0, r3
 8008f30:	e7a7      	b.n	8008e82 <_printf_i+0x13a>
 8008f32:	0022      	movs	r2, r4
 8008f34:	2301      	movs	r3, #1
 8008f36:	9906      	ldr	r1, [sp, #24]
 8008f38:	9805      	ldr	r0, [sp, #20]
 8008f3a:	9e07      	ldr	r6, [sp, #28]
 8008f3c:	3219      	adds	r2, #25
 8008f3e:	47b0      	blx	r6
 8008f40:	3001      	adds	r0, #1
 8008f42:	d09c      	beq.n	8008e7e <_printf_i+0x136>
 8008f44:	3501      	adds	r5, #1
 8008f46:	68e3      	ldr	r3, [r4, #12]
 8008f48:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8008f4a:	1a9b      	subs	r3, r3, r2
 8008f4c:	42ab      	cmp	r3, r5
 8008f4e:	dcf0      	bgt.n	8008f32 <_printf_i+0x1ea>
 8008f50:	e7e9      	b.n	8008f26 <_printf_i+0x1de>
 8008f52:	2500      	movs	r5, #0
 8008f54:	e7f7      	b.n	8008f46 <_printf_i+0x1fe>
 8008f56:	46c0      	nop			@ (mov r8, r8)
 8008f58:	080093a6 	.word	0x080093a6
 8008f5c:	080093b7 	.word	0x080093b7

08008f60 <__sflush_r>:
 8008f60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008f62:	220c      	movs	r2, #12
 8008f64:	5e8b      	ldrsh	r3, [r1, r2]
 8008f66:	0005      	movs	r5, r0
 8008f68:	000c      	movs	r4, r1
 8008f6a:	071a      	lsls	r2, r3, #28
 8008f6c:	d456      	bmi.n	800901c <__sflush_r+0xbc>
 8008f6e:	684a      	ldr	r2, [r1, #4]
 8008f70:	2a00      	cmp	r2, #0
 8008f72:	dc02      	bgt.n	8008f7a <__sflush_r+0x1a>
 8008f74:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 8008f76:	2a00      	cmp	r2, #0
 8008f78:	dd4e      	ble.n	8009018 <__sflush_r+0xb8>
 8008f7a:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8008f7c:	2f00      	cmp	r7, #0
 8008f7e:	d04b      	beq.n	8009018 <__sflush_r+0xb8>
 8008f80:	2200      	movs	r2, #0
 8008f82:	2080      	movs	r0, #128	@ 0x80
 8008f84:	682e      	ldr	r6, [r5, #0]
 8008f86:	602a      	str	r2, [r5, #0]
 8008f88:	001a      	movs	r2, r3
 8008f8a:	0140      	lsls	r0, r0, #5
 8008f8c:	6a21      	ldr	r1, [r4, #32]
 8008f8e:	4002      	ands	r2, r0
 8008f90:	4203      	tst	r3, r0
 8008f92:	d033      	beq.n	8008ffc <__sflush_r+0x9c>
 8008f94:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8008f96:	89a3      	ldrh	r3, [r4, #12]
 8008f98:	075b      	lsls	r3, r3, #29
 8008f9a:	d506      	bpl.n	8008faa <__sflush_r+0x4a>
 8008f9c:	6863      	ldr	r3, [r4, #4]
 8008f9e:	1ad2      	subs	r2, r2, r3
 8008fa0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8008fa2:	2b00      	cmp	r3, #0
 8008fa4:	d001      	beq.n	8008faa <__sflush_r+0x4a>
 8008fa6:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008fa8:	1ad2      	subs	r2, r2, r3
 8008faa:	2300      	movs	r3, #0
 8008fac:	0028      	movs	r0, r5
 8008fae:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8008fb0:	6a21      	ldr	r1, [r4, #32]
 8008fb2:	47b8      	blx	r7
 8008fb4:	89a2      	ldrh	r2, [r4, #12]
 8008fb6:	1c43      	adds	r3, r0, #1
 8008fb8:	d106      	bne.n	8008fc8 <__sflush_r+0x68>
 8008fba:	6829      	ldr	r1, [r5, #0]
 8008fbc:	291d      	cmp	r1, #29
 8008fbe:	d846      	bhi.n	800904e <__sflush_r+0xee>
 8008fc0:	4b29      	ldr	r3, [pc, #164]	@ (8009068 <__sflush_r+0x108>)
 8008fc2:	40cb      	lsrs	r3, r1
 8008fc4:	07db      	lsls	r3, r3, #31
 8008fc6:	d542      	bpl.n	800904e <__sflush_r+0xee>
 8008fc8:	2300      	movs	r3, #0
 8008fca:	6063      	str	r3, [r4, #4]
 8008fcc:	6923      	ldr	r3, [r4, #16]
 8008fce:	6023      	str	r3, [r4, #0]
 8008fd0:	04d2      	lsls	r2, r2, #19
 8008fd2:	d505      	bpl.n	8008fe0 <__sflush_r+0x80>
 8008fd4:	1c43      	adds	r3, r0, #1
 8008fd6:	d102      	bne.n	8008fde <__sflush_r+0x7e>
 8008fd8:	682b      	ldr	r3, [r5, #0]
 8008fda:	2b00      	cmp	r3, #0
 8008fdc:	d100      	bne.n	8008fe0 <__sflush_r+0x80>
 8008fde:	6560      	str	r0, [r4, #84]	@ 0x54
 8008fe0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8008fe2:	602e      	str	r6, [r5, #0]
 8008fe4:	2900      	cmp	r1, #0
 8008fe6:	d017      	beq.n	8009018 <__sflush_r+0xb8>
 8008fe8:	0023      	movs	r3, r4
 8008fea:	3344      	adds	r3, #68	@ 0x44
 8008fec:	4299      	cmp	r1, r3
 8008fee:	d002      	beq.n	8008ff6 <__sflush_r+0x96>
 8008ff0:	0028      	movs	r0, r5
 8008ff2:	f7ff fbf9 	bl	80087e8 <_free_r>
 8008ff6:	2300      	movs	r3, #0
 8008ff8:	6363      	str	r3, [r4, #52]	@ 0x34
 8008ffa:	e00d      	b.n	8009018 <__sflush_r+0xb8>
 8008ffc:	2301      	movs	r3, #1
 8008ffe:	0028      	movs	r0, r5
 8009000:	47b8      	blx	r7
 8009002:	0002      	movs	r2, r0
 8009004:	1c43      	adds	r3, r0, #1
 8009006:	d1c6      	bne.n	8008f96 <__sflush_r+0x36>
 8009008:	682b      	ldr	r3, [r5, #0]
 800900a:	2b00      	cmp	r3, #0
 800900c:	d0c3      	beq.n	8008f96 <__sflush_r+0x36>
 800900e:	2b1d      	cmp	r3, #29
 8009010:	d001      	beq.n	8009016 <__sflush_r+0xb6>
 8009012:	2b16      	cmp	r3, #22
 8009014:	d11a      	bne.n	800904c <__sflush_r+0xec>
 8009016:	602e      	str	r6, [r5, #0]
 8009018:	2000      	movs	r0, #0
 800901a:	e01e      	b.n	800905a <__sflush_r+0xfa>
 800901c:	690e      	ldr	r6, [r1, #16]
 800901e:	2e00      	cmp	r6, #0
 8009020:	d0fa      	beq.n	8009018 <__sflush_r+0xb8>
 8009022:	680f      	ldr	r7, [r1, #0]
 8009024:	600e      	str	r6, [r1, #0]
 8009026:	1bba      	subs	r2, r7, r6
 8009028:	9201      	str	r2, [sp, #4]
 800902a:	2200      	movs	r2, #0
 800902c:	079b      	lsls	r3, r3, #30
 800902e:	d100      	bne.n	8009032 <__sflush_r+0xd2>
 8009030:	694a      	ldr	r2, [r1, #20]
 8009032:	60a2      	str	r2, [r4, #8]
 8009034:	9b01      	ldr	r3, [sp, #4]
 8009036:	2b00      	cmp	r3, #0
 8009038:	ddee      	ble.n	8009018 <__sflush_r+0xb8>
 800903a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800903c:	0032      	movs	r2, r6
 800903e:	001f      	movs	r7, r3
 8009040:	0028      	movs	r0, r5
 8009042:	9b01      	ldr	r3, [sp, #4]
 8009044:	6a21      	ldr	r1, [r4, #32]
 8009046:	47b8      	blx	r7
 8009048:	2800      	cmp	r0, #0
 800904a:	dc07      	bgt.n	800905c <__sflush_r+0xfc>
 800904c:	89a2      	ldrh	r2, [r4, #12]
 800904e:	2340      	movs	r3, #64	@ 0x40
 8009050:	2001      	movs	r0, #1
 8009052:	4313      	orrs	r3, r2
 8009054:	b21b      	sxth	r3, r3
 8009056:	81a3      	strh	r3, [r4, #12]
 8009058:	4240      	negs	r0, r0
 800905a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800905c:	9b01      	ldr	r3, [sp, #4]
 800905e:	1836      	adds	r6, r6, r0
 8009060:	1a1b      	subs	r3, r3, r0
 8009062:	9301      	str	r3, [sp, #4]
 8009064:	e7e6      	b.n	8009034 <__sflush_r+0xd4>
 8009066:	46c0      	nop			@ (mov r8, r8)
 8009068:	20400001 	.word	0x20400001

0800906c <_fflush_r>:
 800906c:	690b      	ldr	r3, [r1, #16]
 800906e:	b570      	push	{r4, r5, r6, lr}
 8009070:	0005      	movs	r5, r0
 8009072:	000c      	movs	r4, r1
 8009074:	2b00      	cmp	r3, #0
 8009076:	d102      	bne.n	800907e <_fflush_r+0x12>
 8009078:	2500      	movs	r5, #0
 800907a:	0028      	movs	r0, r5
 800907c:	bd70      	pop	{r4, r5, r6, pc}
 800907e:	2800      	cmp	r0, #0
 8009080:	d004      	beq.n	800908c <_fflush_r+0x20>
 8009082:	6a03      	ldr	r3, [r0, #32]
 8009084:	2b00      	cmp	r3, #0
 8009086:	d101      	bne.n	800908c <_fflush_r+0x20>
 8009088:	f7ff fa9a 	bl	80085c0 <__sinit>
 800908c:	220c      	movs	r2, #12
 800908e:	5ea3      	ldrsh	r3, [r4, r2]
 8009090:	2b00      	cmp	r3, #0
 8009092:	d0f1      	beq.n	8009078 <_fflush_r+0xc>
 8009094:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8009096:	07d2      	lsls	r2, r2, #31
 8009098:	d404      	bmi.n	80090a4 <_fflush_r+0x38>
 800909a:	059b      	lsls	r3, r3, #22
 800909c:	d402      	bmi.n	80090a4 <_fflush_r+0x38>
 800909e:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80090a0:	f7ff fb9f 	bl	80087e2 <__retarget_lock_acquire_recursive>
 80090a4:	0028      	movs	r0, r5
 80090a6:	0021      	movs	r1, r4
 80090a8:	f7ff ff5a 	bl	8008f60 <__sflush_r>
 80090ac:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80090ae:	0005      	movs	r5, r0
 80090b0:	07db      	lsls	r3, r3, #31
 80090b2:	d4e2      	bmi.n	800907a <_fflush_r+0xe>
 80090b4:	89a3      	ldrh	r3, [r4, #12]
 80090b6:	059b      	lsls	r3, r3, #22
 80090b8:	d4df      	bmi.n	800907a <_fflush_r+0xe>
 80090ba:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80090bc:	f7ff fb92 	bl	80087e4 <__retarget_lock_release_recursive>
 80090c0:	e7db      	b.n	800907a <_fflush_r+0xe>

080090c2 <__swbuf_r>:
 80090c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80090c4:	0006      	movs	r6, r0
 80090c6:	000d      	movs	r5, r1
 80090c8:	0014      	movs	r4, r2
 80090ca:	2800      	cmp	r0, #0
 80090cc:	d004      	beq.n	80090d8 <__swbuf_r+0x16>
 80090ce:	6a03      	ldr	r3, [r0, #32]
 80090d0:	2b00      	cmp	r3, #0
 80090d2:	d101      	bne.n	80090d8 <__swbuf_r+0x16>
 80090d4:	f7ff fa74 	bl	80085c0 <__sinit>
 80090d8:	69a3      	ldr	r3, [r4, #24]
 80090da:	60a3      	str	r3, [r4, #8]
 80090dc:	89a3      	ldrh	r3, [r4, #12]
 80090de:	071b      	lsls	r3, r3, #28
 80090e0:	d502      	bpl.n	80090e8 <__swbuf_r+0x26>
 80090e2:	6923      	ldr	r3, [r4, #16]
 80090e4:	2b00      	cmp	r3, #0
 80090e6:	d109      	bne.n	80090fc <__swbuf_r+0x3a>
 80090e8:	0021      	movs	r1, r4
 80090ea:	0030      	movs	r0, r6
 80090ec:	f000 f82c 	bl	8009148 <__swsetup_r>
 80090f0:	2800      	cmp	r0, #0
 80090f2:	d003      	beq.n	80090fc <__swbuf_r+0x3a>
 80090f4:	2501      	movs	r5, #1
 80090f6:	426d      	negs	r5, r5
 80090f8:	0028      	movs	r0, r5
 80090fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80090fc:	6923      	ldr	r3, [r4, #16]
 80090fe:	6820      	ldr	r0, [r4, #0]
 8009100:	b2ef      	uxtb	r7, r5
 8009102:	1ac0      	subs	r0, r0, r3
 8009104:	6963      	ldr	r3, [r4, #20]
 8009106:	b2ed      	uxtb	r5, r5
 8009108:	4283      	cmp	r3, r0
 800910a:	dc05      	bgt.n	8009118 <__swbuf_r+0x56>
 800910c:	0021      	movs	r1, r4
 800910e:	0030      	movs	r0, r6
 8009110:	f7ff ffac 	bl	800906c <_fflush_r>
 8009114:	2800      	cmp	r0, #0
 8009116:	d1ed      	bne.n	80090f4 <__swbuf_r+0x32>
 8009118:	68a3      	ldr	r3, [r4, #8]
 800911a:	3001      	adds	r0, #1
 800911c:	3b01      	subs	r3, #1
 800911e:	60a3      	str	r3, [r4, #8]
 8009120:	6823      	ldr	r3, [r4, #0]
 8009122:	1c5a      	adds	r2, r3, #1
 8009124:	6022      	str	r2, [r4, #0]
 8009126:	701f      	strb	r7, [r3, #0]
 8009128:	6963      	ldr	r3, [r4, #20]
 800912a:	4283      	cmp	r3, r0
 800912c:	d004      	beq.n	8009138 <__swbuf_r+0x76>
 800912e:	89a3      	ldrh	r3, [r4, #12]
 8009130:	07db      	lsls	r3, r3, #31
 8009132:	d5e1      	bpl.n	80090f8 <__swbuf_r+0x36>
 8009134:	2d0a      	cmp	r5, #10
 8009136:	d1df      	bne.n	80090f8 <__swbuf_r+0x36>
 8009138:	0021      	movs	r1, r4
 800913a:	0030      	movs	r0, r6
 800913c:	f7ff ff96 	bl	800906c <_fflush_r>
 8009140:	2800      	cmp	r0, #0
 8009142:	d0d9      	beq.n	80090f8 <__swbuf_r+0x36>
 8009144:	e7d6      	b.n	80090f4 <__swbuf_r+0x32>
	...

08009148 <__swsetup_r>:
 8009148:	4b2d      	ldr	r3, [pc, #180]	@ (8009200 <__swsetup_r+0xb8>)
 800914a:	b570      	push	{r4, r5, r6, lr}
 800914c:	0005      	movs	r5, r0
 800914e:	6818      	ldr	r0, [r3, #0]
 8009150:	000c      	movs	r4, r1
 8009152:	2800      	cmp	r0, #0
 8009154:	d004      	beq.n	8009160 <__swsetup_r+0x18>
 8009156:	6a03      	ldr	r3, [r0, #32]
 8009158:	2b00      	cmp	r3, #0
 800915a:	d101      	bne.n	8009160 <__swsetup_r+0x18>
 800915c:	f7ff fa30 	bl	80085c0 <__sinit>
 8009160:	220c      	movs	r2, #12
 8009162:	5ea3      	ldrsh	r3, [r4, r2]
 8009164:	071a      	lsls	r2, r3, #28
 8009166:	d423      	bmi.n	80091b0 <__swsetup_r+0x68>
 8009168:	06da      	lsls	r2, r3, #27
 800916a:	d407      	bmi.n	800917c <__swsetup_r+0x34>
 800916c:	2209      	movs	r2, #9
 800916e:	602a      	str	r2, [r5, #0]
 8009170:	2240      	movs	r2, #64	@ 0x40
 8009172:	2001      	movs	r0, #1
 8009174:	4313      	orrs	r3, r2
 8009176:	81a3      	strh	r3, [r4, #12]
 8009178:	4240      	negs	r0, r0
 800917a:	e03a      	b.n	80091f2 <__swsetup_r+0xaa>
 800917c:	075b      	lsls	r3, r3, #29
 800917e:	d513      	bpl.n	80091a8 <__swsetup_r+0x60>
 8009180:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8009182:	2900      	cmp	r1, #0
 8009184:	d008      	beq.n	8009198 <__swsetup_r+0x50>
 8009186:	0023      	movs	r3, r4
 8009188:	3344      	adds	r3, #68	@ 0x44
 800918a:	4299      	cmp	r1, r3
 800918c:	d002      	beq.n	8009194 <__swsetup_r+0x4c>
 800918e:	0028      	movs	r0, r5
 8009190:	f7ff fb2a 	bl	80087e8 <_free_r>
 8009194:	2300      	movs	r3, #0
 8009196:	6363      	str	r3, [r4, #52]	@ 0x34
 8009198:	2224      	movs	r2, #36	@ 0x24
 800919a:	89a3      	ldrh	r3, [r4, #12]
 800919c:	4393      	bics	r3, r2
 800919e:	81a3      	strh	r3, [r4, #12]
 80091a0:	2300      	movs	r3, #0
 80091a2:	6063      	str	r3, [r4, #4]
 80091a4:	6923      	ldr	r3, [r4, #16]
 80091a6:	6023      	str	r3, [r4, #0]
 80091a8:	2308      	movs	r3, #8
 80091aa:	89a2      	ldrh	r2, [r4, #12]
 80091ac:	4313      	orrs	r3, r2
 80091ae:	81a3      	strh	r3, [r4, #12]
 80091b0:	6923      	ldr	r3, [r4, #16]
 80091b2:	2b00      	cmp	r3, #0
 80091b4:	d10b      	bne.n	80091ce <__swsetup_r+0x86>
 80091b6:	21a0      	movs	r1, #160	@ 0xa0
 80091b8:	2280      	movs	r2, #128	@ 0x80
 80091ba:	89a3      	ldrh	r3, [r4, #12]
 80091bc:	0089      	lsls	r1, r1, #2
 80091be:	0092      	lsls	r2, r2, #2
 80091c0:	400b      	ands	r3, r1
 80091c2:	4293      	cmp	r3, r2
 80091c4:	d003      	beq.n	80091ce <__swsetup_r+0x86>
 80091c6:	0021      	movs	r1, r4
 80091c8:	0028      	movs	r0, r5
 80091ca:	f000 f863 	bl	8009294 <__smakebuf_r>
 80091ce:	220c      	movs	r2, #12
 80091d0:	5ea3      	ldrsh	r3, [r4, r2]
 80091d2:	2101      	movs	r1, #1
 80091d4:	001a      	movs	r2, r3
 80091d6:	400a      	ands	r2, r1
 80091d8:	420b      	tst	r3, r1
 80091da:	d00b      	beq.n	80091f4 <__swsetup_r+0xac>
 80091dc:	2200      	movs	r2, #0
 80091de:	60a2      	str	r2, [r4, #8]
 80091e0:	6962      	ldr	r2, [r4, #20]
 80091e2:	4252      	negs	r2, r2
 80091e4:	61a2      	str	r2, [r4, #24]
 80091e6:	2000      	movs	r0, #0
 80091e8:	6922      	ldr	r2, [r4, #16]
 80091ea:	4282      	cmp	r2, r0
 80091ec:	d101      	bne.n	80091f2 <__swsetup_r+0xaa>
 80091ee:	061a      	lsls	r2, r3, #24
 80091f0:	d4be      	bmi.n	8009170 <__swsetup_r+0x28>
 80091f2:	bd70      	pop	{r4, r5, r6, pc}
 80091f4:	0799      	lsls	r1, r3, #30
 80091f6:	d400      	bmi.n	80091fa <__swsetup_r+0xb2>
 80091f8:	6962      	ldr	r2, [r4, #20]
 80091fa:	60a2      	str	r2, [r4, #8]
 80091fc:	e7f3      	b.n	80091e6 <__swsetup_r+0x9e>
 80091fe:	46c0      	nop			@ (mov r8, r8)
 8009200:	2000000c 	.word	0x2000000c

08009204 <_sbrk_r>:
 8009204:	2300      	movs	r3, #0
 8009206:	b570      	push	{r4, r5, r6, lr}
 8009208:	4d06      	ldr	r5, [pc, #24]	@ (8009224 <_sbrk_r+0x20>)
 800920a:	0004      	movs	r4, r0
 800920c:	0008      	movs	r0, r1
 800920e:	602b      	str	r3, [r5, #0]
 8009210:	f7ff f8c0 	bl	8008394 <_sbrk>
 8009214:	1c43      	adds	r3, r0, #1
 8009216:	d103      	bne.n	8009220 <_sbrk_r+0x1c>
 8009218:	682b      	ldr	r3, [r5, #0]
 800921a:	2b00      	cmp	r3, #0
 800921c:	d000      	beq.n	8009220 <_sbrk_r+0x1c>
 800921e:	6023      	str	r3, [r4, #0]
 8009220:	bd70      	pop	{r4, r5, r6, pc}
 8009222:	46c0      	nop			@ (mov r8, r8)
 8009224:	200001b8 	.word	0x200001b8

08009228 <memchr>:
 8009228:	b2c9      	uxtb	r1, r1
 800922a:	1882      	adds	r2, r0, r2
 800922c:	4290      	cmp	r0, r2
 800922e:	d101      	bne.n	8009234 <memchr+0xc>
 8009230:	2000      	movs	r0, #0
 8009232:	4770      	bx	lr
 8009234:	7803      	ldrb	r3, [r0, #0]
 8009236:	428b      	cmp	r3, r1
 8009238:	d0fb      	beq.n	8009232 <memchr+0xa>
 800923a:	3001      	adds	r0, #1
 800923c:	e7f6      	b.n	800922c <memchr+0x4>
	...

08009240 <__swhatbuf_r>:
 8009240:	b570      	push	{r4, r5, r6, lr}
 8009242:	000e      	movs	r6, r1
 8009244:	001d      	movs	r5, r3
 8009246:	230e      	movs	r3, #14
 8009248:	5ec9      	ldrsh	r1, [r1, r3]
 800924a:	0014      	movs	r4, r2
 800924c:	b096      	sub	sp, #88	@ 0x58
 800924e:	2900      	cmp	r1, #0
 8009250:	da0c      	bge.n	800926c <__swhatbuf_r+0x2c>
 8009252:	89b2      	ldrh	r2, [r6, #12]
 8009254:	2380      	movs	r3, #128	@ 0x80
 8009256:	0011      	movs	r1, r2
 8009258:	4019      	ands	r1, r3
 800925a:	421a      	tst	r2, r3
 800925c:	d114      	bne.n	8009288 <__swhatbuf_r+0x48>
 800925e:	2380      	movs	r3, #128	@ 0x80
 8009260:	00db      	lsls	r3, r3, #3
 8009262:	2000      	movs	r0, #0
 8009264:	6029      	str	r1, [r5, #0]
 8009266:	6023      	str	r3, [r4, #0]
 8009268:	b016      	add	sp, #88	@ 0x58
 800926a:	bd70      	pop	{r4, r5, r6, pc}
 800926c:	466a      	mov	r2, sp
 800926e:	f000 f853 	bl	8009318 <_fstat_r>
 8009272:	2800      	cmp	r0, #0
 8009274:	dbed      	blt.n	8009252 <__swhatbuf_r+0x12>
 8009276:	23f0      	movs	r3, #240	@ 0xf0
 8009278:	9901      	ldr	r1, [sp, #4]
 800927a:	021b      	lsls	r3, r3, #8
 800927c:	4019      	ands	r1, r3
 800927e:	4b04      	ldr	r3, [pc, #16]	@ (8009290 <__swhatbuf_r+0x50>)
 8009280:	18c9      	adds	r1, r1, r3
 8009282:	424b      	negs	r3, r1
 8009284:	4159      	adcs	r1, r3
 8009286:	e7ea      	b.n	800925e <__swhatbuf_r+0x1e>
 8009288:	2100      	movs	r1, #0
 800928a:	2340      	movs	r3, #64	@ 0x40
 800928c:	e7e9      	b.n	8009262 <__swhatbuf_r+0x22>
 800928e:	46c0      	nop			@ (mov r8, r8)
 8009290:	ffffe000 	.word	0xffffe000

08009294 <__smakebuf_r>:
 8009294:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009296:	2602      	movs	r6, #2
 8009298:	898b      	ldrh	r3, [r1, #12]
 800929a:	0005      	movs	r5, r0
 800929c:	000c      	movs	r4, r1
 800929e:	b085      	sub	sp, #20
 80092a0:	4233      	tst	r3, r6
 80092a2:	d007      	beq.n	80092b4 <__smakebuf_r+0x20>
 80092a4:	0023      	movs	r3, r4
 80092a6:	3347      	adds	r3, #71	@ 0x47
 80092a8:	6023      	str	r3, [r4, #0]
 80092aa:	6123      	str	r3, [r4, #16]
 80092ac:	2301      	movs	r3, #1
 80092ae:	6163      	str	r3, [r4, #20]
 80092b0:	b005      	add	sp, #20
 80092b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80092b4:	ab03      	add	r3, sp, #12
 80092b6:	aa02      	add	r2, sp, #8
 80092b8:	f7ff ffc2 	bl	8009240 <__swhatbuf_r>
 80092bc:	9f02      	ldr	r7, [sp, #8]
 80092be:	9001      	str	r0, [sp, #4]
 80092c0:	0039      	movs	r1, r7
 80092c2:	0028      	movs	r0, r5
 80092c4:	f7ff fafc 	bl	80088c0 <_malloc_r>
 80092c8:	2800      	cmp	r0, #0
 80092ca:	d108      	bne.n	80092de <__smakebuf_r+0x4a>
 80092cc:	220c      	movs	r2, #12
 80092ce:	5ea3      	ldrsh	r3, [r4, r2]
 80092d0:	059a      	lsls	r2, r3, #22
 80092d2:	d4ed      	bmi.n	80092b0 <__smakebuf_r+0x1c>
 80092d4:	2203      	movs	r2, #3
 80092d6:	4393      	bics	r3, r2
 80092d8:	431e      	orrs	r6, r3
 80092da:	81a6      	strh	r6, [r4, #12]
 80092dc:	e7e2      	b.n	80092a4 <__smakebuf_r+0x10>
 80092de:	2380      	movs	r3, #128	@ 0x80
 80092e0:	89a2      	ldrh	r2, [r4, #12]
 80092e2:	6020      	str	r0, [r4, #0]
 80092e4:	4313      	orrs	r3, r2
 80092e6:	81a3      	strh	r3, [r4, #12]
 80092e8:	9b03      	ldr	r3, [sp, #12]
 80092ea:	6120      	str	r0, [r4, #16]
 80092ec:	6167      	str	r7, [r4, #20]
 80092ee:	2b00      	cmp	r3, #0
 80092f0:	d00c      	beq.n	800930c <__smakebuf_r+0x78>
 80092f2:	0028      	movs	r0, r5
 80092f4:	230e      	movs	r3, #14
 80092f6:	5ee1      	ldrsh	r1, [r4, r3]
 80092f8:	f000 f820 	bl	800933c <_isatty_r>
 80092fc:	2800      	cmp	r0, #0
 80092fe:	d005      	beq.n	800930c <__smakebuf_r+0x78>
 8009300:	2303      	movs	r3, #3
 8009302:	89a2      	ldrh	r2, [r4, #12]
 8009304:	439a      	bics	r2, r3
 8009306:	3b02      	subs	r3, #2
 8009308:	4313      	orrs	r3, r2
 800930a:	81a3      	strh	r3, [r4, #12]
 800930c:	89a3      	ldrh	r3, [r4, #12]
 800930e:	9a01      	ldr	r2, [sp, #4]
 8009310:	4313      	orrs	r3, r2
 8009312:	81a3      	strh	r3, [r4, #12]
 8009314:	e7cc      	b.n	80092b0 <__smakebuf_r+0x1c>
	...

08009318 <_fstat_r>:
 8009318:	2300      	movs	r3, #0
 800931a:	b570      	push	{r4, r5, r6, lr}
 800931c:	4d06      	ldr	r5, [pc, #24]	@ (8009338 <_fstat_r+0x20>)
 800931e:	0004      	movs	r4, r0
 8009320:	0008      	movs	r0, r1
 8009322:	0011      	movs	r1, r2
 8009324:	602b      	str	r3, [r5, #0]
 8009326:	f7ff f813 	bl	8008350 <_fstat>
 800932a:	1c43      	adds	r3, r0, #1
 800932c:	d103      	bne.n	8009336 <_fstat_r+0x1e>
 800932e:	682b      	ldr	r3, [r5, #0]
 8009330:	2b00      	cmp	r3, #0
 8009332:	d000      	beq.n	8009336 <_fstat_r+0x1e>
 8009334:	6023      	str	r3, [r4, #0]
 8009336:	bd70      	pop	{r4, r5, r6, pc}
 8009338:	200001b8 	.word	0x200001b8

0800933c <_isatty_r>:
 800933c:	2300      	movs	r3, #0
 800933e:	b570      	push	{r4, r5, r6, lr}
 8009340:	4d06      	ldr	r5, [pc, #24]	@ (800935c <_isatty_r+0x20>)
 8009342:	0004      	movs	r4, r0
 8009344:	0008      	movs	r0, r1
 8009346:	602b      	str	r3, [r5, #0]
 8009348:	f7ff f810 	bl	800836c <_isatty>
 800934c:	1c43      	adds	r3, r0, #1
 800934e:	d103      	bne.n	8009358 <_isatty_r+0x1c>
 8009350:	682b      	ldr	r3, [r5, #0]
 8009352:	2b00      	cmp	r3, #0
 8009354:	d000      	beq.n	8009358 <_isatty_r+0x1c>
 8009356:	6023      	str	r3, [r4, #0]
 8009358:	bd70      	pop	{r4, r5, r6, pc}
 800935a:	46c0      	nop			@ (mov r8, r8)
 800935c:	200001b8 	.word	0x200001b8

08009360 <_init>:
 8009360:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009362:	46c0      	nop			@ (mov r8, r8)
 8009364:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009366:	bc08      	pop	{r3}
 8009368:	469e      	mov	lr, r3
 800936a:	4770      	bx	lr

0800936c <_fini>:
 800936c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800936e:	46c0      	nop			@ (mov r8, r8)
 8009370:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009372:	bc08      	pop	{r3}
 8009374:	469e      	mov	lr, r3
 8009376:	4770      	bx	lr
