
8_Bootloader-2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .COMMON_APIS  00000020  0801f000  0801f000  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .text         00001560  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000006c  08001620  08001620  00002620  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  0800168c  0800168c  00004020  2**0
                  CONTENTS, READONLY
  5 .ARM          00000000  0800168c  0800168c  00004020  2**0
                  CONTENTS, READONLY
  6 .preinit_array 00000000  0800168c  0800168c  00004020  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000004  0800168c  0800168c  0000268c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .fini_array   00000004  08001690  08001690  00002690  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .data         0000005c  20000000  08001694  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          00000174  2000005c  080016f0  0000305c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001d0  080016f0  000031d0  2**0
                  ALLOC
 12 .ARM.attributes 00000028  00000000  00000000  00004020  2**0
                  CONTENTS, READONLY
 13 .debug_info   00001263  00000000  00000000  00004048  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000007de  00000000  00000000  000052ab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000001e0  00000000  00000000  00005a90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000146  00000000  00000000  00005c70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00013396  00000000  00000000  00005db6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00002443  00000000  00000000  0001914c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00060324  00000000  00000000  0001b58f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0007b8b3  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000ca4  00000000  00000000  0007b8f8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000070  00000000  00000000  0007c59c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	2000005c 	.word	0x2000005c
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08001608 	.word	0x08001608

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000060 	.word	0x20000060
 8000104:	08001608 	.word	0x08001608

08000108 <__gnu_thumb1_case_shi>:
 8000108:	b403      	push	{r0, r1}
 800010a:	4671      	mov	r1, lr
 800010c:	0849      	lsrs	r1, r1, #1
 800010e:	0040      	lsls	r0, r0, #1
 8000110:	0049      	lsls	r1, r1, #1
 8000112:	5e09      	ldrsh	r1, [r1, r0]
 8000114:	0049      	lsls	r1, r1, #1
 8000116:	448e      	add	lr, r1
 8000118:	bc03      	pop	{r0, r1}
 800011a:	4770      	bx	lr

0800011c <__udivsi3>:
 800011c:	2200      	movs	r2, #0
 800011e:	0843      	lsrs	r3, r0, #1
 8000120:	428b      	cmp	r3, r1
 8000122:	d374      	bcc.n	800020e <__udivsi3+0xf2>
 8000124:	0903      	lsrs	r3, r0, #4
 8000126:	428b      	cmp	r3, r1
 8000128:	d35f      	bcc.n	80001ea <__udivsi3+0xce>
 800012a:	0a03      	lsrs	r3, r0, #8
 800012c:	428b      	cmp	r3, r1
 800012e:	d344      	bcc.n	80001ba <__udivsi3+0x9e>
 8000130:	0b03      	lsrs	r3, r0, #12
 8000132:	428b      	cmp	r3, r1
 8000134:	d328      	bcc.n	8000188 <__udivsi3+0x6c>
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d30d      	bcc.n	8000158 <__udivsi3+0x3c>
 800013c:	22ff      	movs	r2, #255	@ 0xff
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	ba12      	rev	r2, r2
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d302      	bcc.n	800014e <__udivsi3+0x32>
 8000148:	1212      	asrs	r2, r2, #8
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	d065      	beq.n	800021a <__udivsi3+0xfe>
 800014e:	0b03      	lsrs	r3, r0, #12
 8000150:	428b      	cmp	r3, r1
 8000152:	d319      	bcc.n	8000188 <__udivsi3+0x6c>
 8000154:	e000      	b.n	8000158 <__udivsi3+0x3c>
 8000156:	0a09      	lsrs	r1, r1, #8
 8000158:	0bc3      	lsrs	r3, r0, #15
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x46>
 800015e:	03cb      	lsls	r3, r1, #15
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b83      	lsrs	r3, r0, #14
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x52>
 800016a:	038b      	lsls	r3, r1, #14
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b43      	lsrs	r3, r0, #13
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x5e>
 8000176:	034b      	lsls	r3, r1, #13
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b03      	lsrs	r3, r0, #12
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x6a>
 8000182:	030b      	lsls	r3, r1, #12
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0ac3      	lsrs	r3, r0, #11
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x76>
 800018e:	02cb      	lsls	r3, r1, #11
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a83      	lsrs	r3, r0, #10
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x82>
 800019a:	028b      	lsls	r3, r1, #10
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a43      	lsrs	r3, r0, #9
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x8e>
 80001a6:	024b      	lsls	r3, r1, #9
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a03      	lsrs	r3, r0, #8
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x9a>
 80001b2:	020b      	lsls	r3, r1, #8
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	d2cd      	bcs.n	8000156 <__udivsi3+0x3a>
 80001ba:	09c3      	lsrs	r3, r0, #7
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xa8>
 80001c0:	01cb      	lsls	r3, r1, #7
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0983      	lsrs	r3, r0, #6
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xb4>
 80001cc:	018b      	lsls	r3, r1, #6
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0943      	lsrs	r3, r0, #5
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xc0>
 80001d8:	014b      	lsls	r3, r1, #5
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0903      	lsrs	r3, r0, #4
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xcc>
 80001e4:	010b      	lsls	r3, r1, #4
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	08c3      	lsrs	r3, r0, #3
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xd8>
 80001f0:	00cb      	lsls	r3, r1, #3
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0883      	lsrs	r3, r0, #2
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xe4>
 80001fc:	008b      	lsls	r3, r1, #2
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0843      	lsrs	r3, r0, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xf0>
 8000208:	004b      	lsls	r3, r1, #1
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	1a41      	subs	r1, r0, r1
 8000210:	d200      	bcs.n	8000214 <__udivsi3+0xf8>
 8000212:	4601      	mov	r1, r0
 8000214:	4152      	adcs	r2, r2
 8000216:	4610      	mov	r0, r2
 8000218:	4770      	bx	lr
 800021a:	e7ff      	b.n	800021c <__udivsi3+0x100>
 800021c:	b501      	push	{r0, lr}
 800021e:	2000      	movs	r0, #0
 8000220:	f000 f806 	bl	8000230 <__aeabi_idiv0>
 8000224:	bd02      	pop	{r1, pc}
 8000226:	46c0      	nop			@ (mov r8, r8)

08000228 <__aeabi_uidivmod>:
 8000228:	2900      	cmp	r1, #0
 800022a:	d0f7      	beq.n	800021c <__udivsi3+0x100>
 800022c:	e776      	b.n	800011c <__udivsi3>
 800022e:	4770      	bx	lr

08000230 <__aeabi_idiv0>:
 8000230:	4770      	bx	lr
 8000232:	46c0      	nop			@ (mov r8, r8)

08000234 <led_init>:
#define PIN6 		(1U<<6)
#define LED_PIN		PIN6
#define PIN0		(1U<<0)
#define BTN_PIN		PIN0
void led_init(void)
{
 8000234:	b580      	push	{r7, lr}
 8000236:	af00      	add	r7, sp, #0
	/*Enable clock access to GPIOC*/
	RCC->AHBENR |= GPIOCEN;
 8000238:	4b09      	ldr	r3, [pc, #36]	@ (8000260 <led_init+0x2c>)
 800023a:	695a      	ldr	r2, [r3, #20]
 800023c:	4b08      	ldr	r3, [pc, #32]	@ (8000260 <led_init+0x2c>)
 800023e:	2180      	movs	r1, #128	@ 0x80
 8000240:	0309      	lsls	r1, r1, #12
 8000242:	430a      	orrs	r2, r1
 8000244:	615a      	str	r2, [r3, #20]
	/*Set PC6 mode to output mode*/
	GPIOC->MODER = (1U<<12);
 8000246:	4b07      	ldr	r3, [pc, #28]	@ (8000264 <led_init+0x30>)
 8000248:	2280      	movs	r2, #128	@ 0x80
 800024a:	0152      	lsls	r2, r2, #5
 800024c:	601a      	str	r2, [r3, #0]
	GPIOC->MODER &=~(1U<<13);
 800024e:	4b05      	ldr	r3, [pc, #20]	@ (8000264 <led_init+0x30>)
 8000250:	681a      	ldr	r2, [r3, #0]
 8000252:	4b04      	ldr	r3, [pc, #16]	@ (8000264 <led_init+0x30>)
 8000254:	4904      	ldr	r1, [pc, #16]	@ (8000268 <led_init+0x34>)
 8000256:	400a      	ands	r2, r1
 8000258:	601a      	str	r2, [r3, #0]
}
 800025a:	46c0      	nop			@ (mov r8, r8)
 800025c:	46bd      	mov	sp, r7
 800025e:	bd80      	pop	{r7, pc}
 8000260:	40021000 	.word	0x40021000
 8000264:	48000800 	.word	0x48000800
 8000268:	ffffdfff 	.word	0xffffdfff

0800026c <led_toggle>:

void led_toggle(uint32_t dly)
{
 800026c:	b580      	push	{r7, lr}
 800026e:	b082      	sub	sp, #8
 8000270:	af00      	add	r7, sp, #0
 8000272:	6078      	str	r0, [r7, #4]
	/*Set PC6 high*/
	GPIOC->ODR ^=LED_PIN;
 8000274:	4b06      	ldr	r3, [pc, #24]	@ (8000290 <led_toggle+0x24>)
 8000276:	695a      	ldr	r2, [r3, #20]
 8000278:	4b05      	ldr	r3, [pc, #20]	@ (8000290 <led_toggle+0x24>)
 800027a:	2140      	movs	r1, #64	@ 0x40
 800027c:	404a      	eors	r2, r1
 800027e:	615a      	str	r2, [r3, #20]
	delay(dly);
 8000280:	687b      	ldr	r3, [r7, #4]
 8000282:	0018      	movs	r0, r3
 8000284:	f000 f924 	bl	80004d0 <delay>
}
 8000288:	46c0      	nop			@ (mov r8, r8)
 800028a:	46bd      	mov	sp, r7
 800028c:	b002      	add	sp, #8
 800028e:	bd80      	pop	{r7, pc}
 8000290:	48000800 	.word	0x48000800

08000294 <led_on>:

void led_on(void)
{
 8000294:	b580      	push	{r7, lr}
 8000296:	af00      	add	r7, sp, #0
	/*Set PC6 high*/
	GPIOC->ODR |=LED_PIN;
 8000298:	4b04      	ldr	r3, [pc, #16]	@ (80002ac <led_on+0x18>)
 800029a:	695a      	ldr	r2, [r3, #20]
 800029c:	4b03      	ldr	r3, [pc, #12]	@ (80002ac <led_on+0x18>)
 800029e:	2140      	movs	r1, #64	@ 0x40
 80002a0:	430a      	orrs	r2, r1
 80002a2:	615a      	str	r2, [r3, #20]
}
 80002a4:	46c0      	nop			@ (mov r8, r8)
 80002a6:	46bd      	mov	sp, r7
 80002a8:	bd80      	pop	{r7, pc}
 80002aa:	46c0      	nop			@ (mov r8, r8)
 80002ac:	48000800 	.word	0x48000800

080002b0 <led_off>:

void led_off(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	af00      	add	r7, sp, #0
	/*Set PC6 low*/
	GPIOC->ODR &= ~LED_PIN;
 80002b4:	4b04      	ldr	r3, [pc, #16]	@ (80002c8 <led_off+0x18>)
 80002b6:	695a      	ldr	r2, [r3, #20]
 80002b8:	4b03      	ldr	r3, [pc, #12]	@ (80002c8 <led_off+0x18>)
 80002ba:	2140      	movs	r1, #64	@ 0x40
 80002bc:	438a      	bics	r2, r1
 80002be:	615a      	str	r2, [r3, #20]

}
 80002c0:	46c0      	nop			@ (mov r8, r8)
 80002c2:	46bd      	mov	sp, r7
 80002c4:	bd80      	pop	{r7, pc}
 80002c6:	46c0      	nop			@ (mov r8, r8)
 80002c8:	48000800 	.word	0x48000800

080002cc <button_init>:

void button_init(void)
{
 80002cc:	b580      	push	{r7, lr}
 80002ce:	af00      	add	r7, sp, #0
	/*Enable port access to PORTA*/
	RCC->AHBENR |= GPIOAEN;
 80002d0:	4b0c      	ldr	r3, [pc, #48]	@ (8000304 <button_init+0x38>)
 80002d2:	695a      	ldr	r2, [r3, #20]
 80002d4:	4b0b      	ldr	r3, [pc, #44]	@ (8000304 <button_init+0x38>)
 80002d6:	2180      	movs	r1, #128	@ 0x80
 80002d8:	0289      	lsls	r1, r1, #10
 80002da:	430a      	orrs	r2, r1
 80002dc:	615a      	str	r2, [r3, #20]
	/*Set PA0 as input pin*/
	GPIOA->MODER &= ~(1U<<0);
 80002de:	2390      	movs	r3, #144	@ 0x90
 80002e0:	05db      	lsls	r3, r3, #23
 80002e2:	681a      	ldr	r2, [r3, #0]
 80002e4:	2390      	movs	r3, #144	@ 0x90
 80002e6:	05db      	lsls	r3, r3, #23
 80002e8:	2101      	movs	r1, #1
 80002ea:	438a      	bics	r2, r1
 80002ec:	601a      	str	r2, [r3, #0]
	GPIOA->MODER &= ~(1U<<1);
 80002ee:	2390      	movs	r3, #144	@ 0x90
 80002f0:	05db      	lsls	r3, r3, #23
 80002f2:	681a      	ldr	r2, [r3, #0]
 80002f4:	2390      	movs	r3, #144	@ 0x90
 80002f6:	05db      	lsls	r3, r3, #23
 80002f8:	2102      	movs	r1, #2
 80002fa:	438a      	bics	r2, r1
 80002fc:	601a      	str	r2, [r3, #0]

}
 80002fe:	46c0      	nop			@ (mov r8, r8)
 8000300:	46bd      	mov	sp, r7
 8000302:	bd80      	pop	{r7, pc}
 8000304:	40021000 	.word	0x40021000

08000308 <get_btn_state>:

bool get_btn_state(void)
{
 8000308:	b580      	push	{r7, lr}
 800030a:	af00      	add	r7, sp, #0
	/*Check if button is pressed, not btn is  active high btn*/
	if(GPIOA->IDR & BTN_PIN){
 800030c:	2390      	movs	r3, #144	@ 0x90
 800030e:	05db      	lsls	r3, r3, #23
 8000310:	691b      	ldr	r3, [r3, #16]
 8000312:	2201      	movs	r2, #1
 8000314:	4013      	ands	r3, r2
 8000316:	d001      	beq.n	800031c <get_btn_state+0x14>
		return true;
 8000318:	2301      	movs	r3, #1
 800031a:	e000      	b.n	800031e <get_btn_state+0x16>
	}else{
		return false;
 800031c:	2300      	movs	r3, #0
	}
}
 800031e:	0018      	movs	r0, r3
 8000320:	46bd      	mov	sp, r7
 8000322:	bd80      	pop	{r7, pc}

08000324 <jmp_to_default_app>:
//#define MEM_CHECK_V1
#define MEM_CHECK_V2
typedef void(*func_ptr)(void);
//20004000
void jmp_to_default_app(void)
{
 8000324:	b580      	push	{r7, lr}
 8000326:	b084      	sub	sp, #16
 8000328:	af00      	add	r7, sp, #0
	uint32_t app_start_address;
	func_ptr jump_to_app;
	printf("Bootloader started....\n\r");
 800032a:	4b12      	ldr	r3, [pc, #72]	@ (8000374 <jmp_to_default_app+0x50>)
 800032c:	0018      	movs	r0, r3
 800032e:	f000 facf 	bl	80008d0 <iprintf>
	delay(300);
 8000332:	2396      	movs	r3, #150	@ 0x96
 8000334:	005b      	lsls	r3, r3, #1
 8000336:	0018      	movs	r0, r3
 8000338:	f000 f8ca 	bl	80004d0 <delay>
#ifdef MEM_CHECK_V1
	if(((*(uint32_t*)APPLICATION_ADDRESS) & MSP_VERIFY_MASK) == 0x20004000)
#endif

#ifdef MEM_CHECK_V2
	if((*(uint32_t*)APPLICATION_ADDRESS) != EMPTY_MEM)
 800033c:	4b0e      	ldr	r3, [pc, #56]	@ (8000378 <jmp_to_default_app+0x54>)
 800033e:	681b      	ldr	r3, [r3, #0]
 8000340:	3301      	adds	r3, #1
 8000342:	d00e      	beq.n	8000362 <jmp_to_default_app+0x3e>
#endif
	{
		//The compiler needs to know that 0x08008004 is a memory address storing a uint32_t value.
		//Without casting, the compiler would not know how to read from that address correctly.
		app_start_address = *(uint32_t*)(APPLICATION_ADDRESS+4);
 8000344:	4b0d      	ldr	r3, [pc, #52]	@ (800037c <jmp_to_default_app+0x58>)
 8000346:	681b      	ldr	r3, [r3, #0]
 8000348:	60fb      	str	r3, [r7, #12]
		// converts this raw address into a callable function pointer.
		jump_to_app= (func_ptr)app_start_address;
 800034a:	68fb      	ldr	r3, [r7, #12]
 800034c:	60bb      	str	r3, [r7, #8]
		/*init main stack ptr*/
		__set_MSP(*(uint32_t*)APPLICATION_ADDRESS);
 800034e:	4b0a      	ldr	r3, [pc, #40]	@ (8000378 <jmp_to_default_app+0x54>)
 8000350:	681b      	ldr	r3, [r3, #0]
 8000352:	607b      	str	r3, [r7, #4]
  \details Assigns the given value to the Main Stack Pointer (MSP).
  \param [in]    topOfMainStack  Main Stack Pointer value to set
 */
__STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
{
  __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	f383 8808 	msr	MSP, r3
}
 800035a:	46c0      	nop			@ (mov r8, r8)
		/*Jump to app()*/
		jump_to_app();//jumps to 0x08008000
 800035c:	68bb      	ldr	r3, [r7, #8]
 800035e:	4798      	blx	r3
	}else
	{
		printf("No application found....\n\r");
	}
}
 8000360:	e003      	b.n	800036a <jmp_to_default_app+0x46>
		printf("No application found....\n\r");
 8000362:	4b07      	ldr	r3, [pc, #28]	@ (8000380 <jmp_to_default_app+0x5c>)
 8000364:	0018      	movs	r0, r3
 8000366:	f000 fab3 	bl	80008d0 <iprintf>
}
 800036a:	46c0      	nop			@ (mov r8, r8)
 800036c:	46bd      	mov	sp, r7
 800036e:	b004      	add	sp, #16
 8000370:	bd80      	pop	{r7, pc}
 8000372:	46c0      	nop			@ (mov r8, r8)
 8000374:	08001620 	.word	0x08001620
 8000378:	08008000 	.word	0x08008000
 800037c:	08008004 	.word	0x08008004
 8000380:	0800163c 	.word	0x0800163c

08000384 <main>:
		get_btn_state,
		//fpu_enable,
		timebase_init
};
int main()
{
 8000384:	b580      	push	{r7, lr}
 8000386:	af00      	add	r7, sp, #0
//	RCC->AHBENR |= GPIOCEN;
//	/*Set PC6 to output mode*/
//	GPIOC->MODER |=(1U<<12);
//	GPIOC->MODER &=~(1U<<13);
	/*Initialise  debug UART*/
	debug_uart_init();
 8000388:	f000 f916 	bl	80005b8 <debug_uart_init>
	/*initialise timebase*/
	timebase_init();
 800038c:	f000 f8de 	bl	800054c <timebase_init>
	/*init led*/
	//led_init();
	/*Init push button*/
	//button_init();

	jmp_to_default_app();
 8000390:	f7ff ffc8 	bl	8000324 <jmp_to_default_app>
	while(1){
 8000394:	46c0      	nop			@ (mov r8, r8)
 8000396:	e7fd      	b.n	8000394 <main+0x10>

08000398 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000398:	b580      	push	{r7, lr}
 800039a:	b086      	sub	sp, #24
 800039c:	af00      	add	r7, sp, #0
 800039e:	60f8      	str	r0, [r7, #12]
 80003a0:	60b9      	str	r1, [r7, #8]
 80003a2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003a4:	2300      	movs	r3, #0
 80003a6:	617b      	str	r3, [r7, #20]
 80003a8:	e00a      	b.n	80003c0 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80003aa:	e000      	b.n	80003ae <_read+0x16>
 80003ac:	bf00      	nop
 80003ae:	0001      	movs	r1, r0
 80003b0:	68bb      	ldr	r3, [r7, #8]
 80003b2:	1c5a      	adds	r2, r3, #1
 80003b4:	60ba      	str	r2, [r7, #8]
 80003b6:	b2ca      	uxtb	r2, r1
 80003b8:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ba:	697b      	ldr	r3, [r7, #20]
 80003bc:	3301      	adds	r3, #1
 80003be:	617b      	str	r3, [r7, #20]
 80003c0:	697a      	ldr	r2, [r7, #20]
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	429a      	cmp	r2, r3
 80003c6:	dbf0      	blt.n	80003aa <_read+0x12>
  }

  return len;
 80003c8:	687b      	ldr	r3, [r7, #4]
}
 80003ca:	0018      	movs	r0, r3
 80003cc:	46bd      	mov	sp, r7
 80003ce:	b006      	add	sp, #24
 80003d0:	bd80      	pop	{r7, pc}

080003d2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003d2:	b580      	push	{r7, lr}
 80003d4:	b086      	sub	sp, #24
 80003d6:	af00      	add	r7, sp, #0
 80003d8:	60f8      	str	r0, [r7, #12]
 80003da:	60b9      	str	r1, [r7, #8]
 80003dc:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003de:	2300      	movs	r3, #0
 80003e0:	617b      	str	r3, [r7, #20]
 80003e2:	e009      	b.n	80003f8 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80003e4:	68bb      	ldr	r3, [r7, #8]
 80003e6:	1c5a      	adds	r2, r3, #1
 80003e8:	60ba      	str	r2, [r7, #8]
 80003ea:	781b      	ldrb	r3, [r3, #0]
 80003ec:	0018      	movs	r0, r3
 80003ee:	f000 f8d6 	bl	800059e <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003f2:	697b      	ldr	r3, [r7, #20]
 80003f4:	3301      	adds	r3, #1
 80003f6:	617b      	str	r3, [r7, #20]
 80003f8:	697a      	ldr	r2, [r7, #20]
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	429a      	cmp	r2, r3
 80003fe:	dbf1      	blt.n	80003e4 <_write+0x12>
  }
  return len;
 8000400:	687b      	ldr	r3, [r7, #4]
}
 8000402:	0018      	movs	r0, r3
 8000404:	46bd      	mov	sp, r7
 8000406:	b006      	add	sp, #24
 8000408:	bd80      	pop	{r7, pc}

0800040a <_close>:

int _close(int file)
{
 800040a:	b580      	push	{r7, lr}
 800040c:	b082      	sub	sp, #8
 800040e:	af00      	add	r7, sp, #0
 8000410:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000412:	2301      	movs	r3, #1
 8000414:	425b      	negs	r3, r3
}
 8000416:	0018      	movs	r0, r3
 8000418:	46bd      	mov	sp, r7
 800041a:	b002      	add	sp, #8
 800041c:	bd80      	pop	{r7, pc}

0800041e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800041e:	b580      	push	{r7, lr}
 8000420:	b082      	sub	sp, #8
 8000422:	af00      	add	r7, sp, #0
 8000424:	6078      	str	r0, [r7, #4]
 8000426:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000428:	683b      	ldr	r3, [r7, #0]
 800042a:	2280      	movs	r2, #128	@ 0x80
 800042c:	0192      	lsls	r2, r2, #6
 800042e:	605a      	str	r2, [r3, #4]
  return 0;
 8000430:	2300      	movs	r3, #0
}
 8000432:	0018      	movs	r0, r3
 8000434:	46bd      	mov	sp, r7
 8000436:	b002      	add	sp, #8
 8000438:	bd80      	pop	{r7, pc}

0800043a <_isatty>:

int _isatty(int file)
{
 800043a:	b580      	push	{r7, lr}
 800043c:	b082      	sub	sp, #8
 800043e:	af00      	add	r7, sp, #0
 8000440:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000442:	2301      	movs	r3, #1
}
 8000444:	0018      	movs	r0, r3
 8000446:	46bd      	mov	sp, r7
 8000448:	b002      	add	sp, #8
 800044a:	bd80      	pop	{r7, pc}

0800044c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800044c:	b580      	push	{r7, lr}
 800044e:	b084      	sub	sp, #16
 8000450:	af00      	add	r7, sp, #0
 8000452:	60f8      	str	r0, [r7, #12]
 8000454:	60b9      	str	r1, [r7, #8]
 8000456:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000458:	2300      	movs	r3, #0
}
 800045a:	0018      	movs	r0, r3
 800045c:	46bd      	mov	sp, r7
 800045e:	b004      	add	sp, #16
 8000460:	bd80      	pop	{r7, pc}
	...

08000464 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000464:	b580      	push	{r7, lr}
 8000466:	b086      	sub	sp, #24
 8000468:	af00      	add	r7, sp, #0
 800046a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800046c:	4a14      	ldr	r2, [pc, #80]	@ (80004c0 <_sbrk+0x5c>)
 800046e:	4b15      	ldr	r3, [pc, #84]	@ (80004c4 <_sbrk+0x60>)
 8000470:	1ad3      	subs	r3, r2, r3
 8000472:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000474:	697b      	ldr	r3, [r7, #20]
 8000476:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000478:	4b13      	ldr	r3, [pc, #76]	@ (80004c8 <_sbrk+0x64>)
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	2b00      	cmp	r3, #0
 800047e:	d102      	bne.n	8000486 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000480:	4b11      	ldr	r3, [pc, #68]	@ (80004c8 <_sbrk+0x64>)
 8000482:	4a12      	ldr	r2, [pc, #72]	@ (80004cc <_sbrk+0x68>)
 8000484:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000486:	4b10      	ldr	r3, [pc, #64]	@ (80004c8 <_sbrk+0x64>)
 8000488:	681a      	ldr	r2, [r3, #0]
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	18d3      	adds	r3, r2, r3
 800048e:	693a      	ldr	r2, [r7, #16]
 8000490:	429a      	cmp	r2, r3
 8000492:	d207      	bcs.n	80004a4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000494:	f000 face 	bl	8000a34 <__errno>
 8000498:	0003      	movs	r3, r0
 800049a:	220c      	movs	r2, #12
 800049c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800049e:	2301      	movs	r3, #1
 80004a0:	425b      	negs	r3, r3
 80004a2:	e009      	b.n	80004b8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004a4:	4b08      	ldr	r3, [pc, #32]	@ (80004c8 <_sbrk+0x64>)
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004aa:	4b07      	ldr	r3, [pc, #28]	@ (80004c8 <_sbrk+0x64>)
 80004ac:	681a      	ldr	r2, [r3, #0]
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	18d2      	adds	r2, r2, r3
 80004b2:	4b05      	ldr	r3, [pc, #20]	@ (80004c8 <_sbrk+0x64>)
 80004b4:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 80004b6:	68fb      	ldr	r3, [r7, #12]
}
 80004b8:	0018      	movs	r0, r3
 80004ba:	46bd      	mov	sp, r7
 80004bc:	b006      	add	sp, #24
 80004be:	bd80      	pop	{r7, pc}
 80004c0:	20004000 	.word	0x20004000
 80004c4:	00000400 	.word	0x00000400
 80004c8:	20000078 	.word	0x20000078
 80004cc:	200001d0 	.word	0x200001d0

080004d0 <delay>:
volatile uint32_t g_curr_tick;
volatile uint32_t g_curr_tick_p;
/*Delay in seconds*/

void delay(uint32_t delay)
{
 80004d0:	b580      	push	{r7, lr}
 80004d2:	b084      	sub	sp, #16
 80004d4:	af00      	add	r7, sp, #0
 80004d6:	6078      	str	r0, [r7, #4]
	uint32_t tickstart=get_tick();
 80004d8:	f000 f818 	bl	800050c <get_tick>
 80004dc:	0003      	movs	r3, r0
 80004de:	60bb      	str	r3, [r7, #8]
	uint32_t wait = delay;
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	60fb      	str	r3, [r7, #12]
	if(wait<MAX_DELAY){
 80004e4:	68fb      	ldr	r3, [r7, #12]
 80004e6:	3301      	adds	r3, #1
 80004e8:	d002      	beq.n	80004f0 <delay+0x20>
		wait+=(uint32_t)TICK_FREQ;
 80004ea:	68fb      	ldr	r3, [r7, #12]
 80004ec:	3301      	adds	r3, #1
 80004ee:	60fb      	str	r3, [r7, #12]
	}
	while((get_tick()-tickstart)<wait){}
 80004f0:	46c0      	nop			@ (mov r8, r8)
 80004f2:	f000 f80b 	bl	800050c <get_tick>
 80004f6:	0002      	movs	r2, r0
 80004f8:	68bb      	ldr	r3, [r7, #8]
 80004fa:	1ad3      	subs	r3, r2, r3
 80004fc:	68fa      	ldr	r2, [r7, #12]
 80004fe:	429a      	cmp	r2, r3
 8000500:	d8f7      	bhi.n	80004f2 <delay+0x22>
}
 8000502:	46c0      	nop			@ (mov r8, r8)
 8000504:	46c0      	nop			@ (mov r8, r8)
 8000506:	46bd      	mov	sp, r7
 8000508:	b004      	add	sp, #16
 800050a:	bd80      	pop	{r7, pc}

0800050c <get_tick>:
uint32_t get_tick(void)
{
 800050c:	b580      	push	{r7, lr}
 800050e:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 8000510:	b672      	cpsid	i
}
 8000512:	46c0      	nop			@ (mov r8, r8)
	__disable_irq();
	g_curr_tick_p = g_curr_tick;
 8000514:	4b05      	ldr	r3, [pc, #20]	@ (800052c <get_tick+0x20>)
 8000516:	681a      	ldr	r2, [r3, #0]
 8000518:	4b05      	ldr	r3, [pc, #20]	@ (8000530 <get_tick+0x24>)
 800051a:	601a      	str	r2, [r3, #0]
  __ASM volatile ("cpsie i" : : : "memory");
 800051c:	b662      	cpsie	i
}
 800051e:	46c0      	nop			@ (mov r8, r8)
	__enable_irq();

	return g_curr_tick_p;
 8000520:	4b03      	ldr	r3, [pc, #12]	@ (8000530 <get_tick+0x24>)
 8000522:	681b      	ldr	r3, [r3, #0]
}
 8000524:	0018      	movs	r0, r3
 8000526:	46bd      	mov	sp, r7
 8000528:	bd80      	pop	{r7, pc}
 800052a:	46c0      	nop			@ (mov r8, r8)
 800052c:	2000007c 	.word	0x2000007c
 8000530:	20000080 	.word	0x20000080

08000534 <tick_increment>:


static void tick_increment(void)
{
 8000534:	b580      	push	{r7, lr}
 8000536:	af00      	add	r7, sp, #0
	g_curr_tick += TICK_FREQ;
 8000538:	4b03      	ldr	r3, [pc, #12]	@ (8000548 <tick_increment+0x14>)
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	1c5a      	adds	r2, r3, #1
 800053e:	4b02      	ldr	r3, [pc, #8]	@ (8000548 <tick_increment+0x14>)
 8000540:	601a      	str	r2, [r3, #0]
}
 8000542:	46c0      	nop			@ (mov r8, r8)
 8000544:	46bd      	mov	sp, r7
 8000546:	bd80      	pop	{r7, pc}
 8000548:	2000007c 	.word	0x2000007c

0800054c <timebase_init>:
void timebase_init(void)
{
 800054c:	b580      	push	{r7, lr}
 800054e:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 8000550:	b672      	cpsid	i
}
 8000552:	46c0      	nop			@ (mov r8, r8)
	/*Disable global interrupts*/
	__disable_irq();
	/*Load the timer num of clock cycles per second*/
	SysTick->LOAD = ONE_MSEC_LOAD-1;//Total time=Number of ticks×Time per tick = 7999999 x 125ns=1sec
 8000554:	4b0c      	ldr	r3, [pc, #48]	@ (8000588 <timebase_init+0x3c>)
 8000556:	4a0d      	ldr	r2, [pc, #52]	@ (800058c <timebase_init+0x40>)
 8000558:	605a      	str	r2, [r3, #4]
	//if SysTick->LOAD is set to the same value as the system clock frequency i.e interrupt occurs every 1 sec
	/*Clear systick current val reg*/
	SysTick->VAL=0;
 800055a:	4b0b      	ldr	r3, [pc, #44]	@ (8000588 <timebase_init+0x3c>)
 800055c:	2200      	movs	r2, #0
 800055e:	609a      	str	r2, [r3, #8]
	/*Select internal clock source*/
	SysTick->CTRL=CTRL_CLKSRC;
 8000560:	4b09      	ldr	r3, [pc, #36]	@ (8000588 <timebase_init+0x3c>)
 8000562:	2204      	movs	r2, #4
 8000564:	601a      	str	r2, [r3, #0]
	/*enable interrupt*/
	SysTick->CTRL |= CTRL_TICKINT;
 8000566:	4b08      	ldr	r3, [pc, #32]	@ (8000588 <timebase_init+0x3c>)
 8000568:	681a      	ldr	r2, [r3, #0]
 800056a:	4b07      	ldr	r3, [pc, #28]	@ (8000588 <timebase_init+0x3c>)
 800056c:	2102      	movs	r1, #2
 800056e:	430a      	orrs	r2, r1
 8000570:	601a      	str	r2, [r3, #0]
	/*Enable systick*/
	SysTick->CTRL |= CTRL_ENABLE;
 8000572:	4b05      	ldr	r3, [pc, #20]	@ (8000588 <timebase_init+0x3c>)
 8000574:	681a      	ldr	r2, [r3, #0]
 8000576:	4b04      	ldr	r3, [pc, #16]	@ (8000588 <timebase_init+0x3c>)
 8000578:	2101      	movs	r1, #1
 800057a:	430a      	orrs	r2, r1
 800057c:	601a      	str	r2, [r3, #0]
  __ASM volatile ("cpsie i" : : : "memory");
 800057e:	b662      	cpsie	i
}
 8000580:	46c0      	nop			@ (mov r8, r8)
	/*Enable global interrupt*/
	__enable_irq();
}
 8000582:	46c0      	nop			@ (mov r8, r8)
 8000584:	46bd      	mov	sp, r7
 8000586:	bd80      	pop	{r7, pc}
 8000588:	e000e010 	.word	0xe000e010
 800058c:	00001f3f 	.word	0x00001f3f

08000590 <SysTick_Handler>:

void SysTick_Handler(void){
 8000590:	b580      	push	{r7, lr}
 8000592:	af00      	add	r7, sp, #0
	tick_increment();
 8000594:	f7ff ffce 	bl	8000534 <tick_increment>
}
 8000598:	46c0      	nop			@ (mov r8, r8)
 800059a:	46bd      	mov	sp, r7
 800059c:	bd80      	pop	{r7, pc}

0800059e <__io_putchar>:
#define SR_TXE				(1U<<7)
static void uart_set_baud_rate(uint32_t periph_clk,uint32_t baudrate);
static void uart_write(int ch);
static uint16_t compute_uart_bd(uint32_t periph_clk,uint32_t baudrate);
int __io_putchar(int ch)
{
 800059e:	b580      	push	{r7, lr}
 80005a0:	b082      	sub	sp, #8
 80005a2:	af00      	add	r7, sp, #0
 80005a4:	6078      	str	r0, [r7, #4]
	uart_write(ch);
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	0018      	movs	r0, r3
 80005aa:	f000 f861 	bl	8000670 <uart_write>
	return ch;
 80005ae:	687b      	ldr	r3, [r7, #4]
}
 80005b0:	0018      	movs	r0, r3
 80005b2:	46bd      	mov	sp, r7
 80005b4:	b002      	add	sp, #8
 80005b6:	bd80      	pop	{r7, pc}

080005b8 <debug_uart_init>:

void debug_uart_init(void){
 80005b8:	b580      	push	{r7, lr}
 80005ba:	af00      	add	r7, sp, #0
	/*Enable clock access to GPIOA*/
	RCC->AHBENR |= GPIOAEN;
 80005bc:	4b28      	ldr	r3, [pc, #160]	@ (8000660 <debug_uart_init+0xa8>)
 80005be:	695a      	ldr	r2, [r3, #20]
 80005c0:	4b27      	ldr	r3, [pc, #156]	@ (8000660 <debug_uart_init+0xa8>)
 80005c2:	2180      	movs	r1, #128	@ 0x80
 80005c4:	0289      	lsls	r1, r1, #10
 80005c6:	430a      	orrs	r2, r1
 80005c8:	615a      	str	r2, [r3, #20]
	/*Set the mode of PA9 and PA10 to AF mode*/
	GPIOA->MODER &= ~(1U<<18);
 80005ca:	2390      	movs	r3, #144	@ 0x90
 80005cc:	05db      	lsls	r3, r3, #23
 80005ce:	681a      	ldr	r2, [r3, #0]
 80005d0:	2390      	movs	r3, #144	@ 0x90
 80005d2:	05db      	lsls	r3, r3, #23
 80005d4:	4923      	ldr	r1, [pc, #140]	@ (8000664 <debug_uart_init+0xac>)
 80005d6:	400a      	ands	r2, r1
 80005d8:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |= (1U<<19);
 80005da:	2390      	movs	r3, #144	@ 0x90
 80005dc:	05db      	lsls	r3, r3, #23
 80005de:	681a      	ldr	r2, [r3, #0]
 80005e0:	2390      	movs	r3, #144	@ 0x90
 80005e2:	05db      	lsls	r3, r3, #23
 80005e4:	2180      	movs	r1, #128	@ 0x80
 80005e6:	0309      	lsls	r1, r1, #12
 80005e8:	430a      	orrs	r2, r1
 80005ea:	601a      	str	r2, [r3, #0]
	/*Set AF type to AF1(USART1_TX/RX)*/
	GPIOA->AFR[1] |= (1U<<4);
 80005ec:	2390      	movs	r3, #144	@ 0x90
 80005ee:	05db      	lsls	r3, r3, #23
 80005f0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80005f2:	2390      	movs	r3, #144	@ 0x90
 80005f4:	05db      	lsls	r3, r3, #23
 80005f6:	2110      	movs	r1, #16
 80005f8:	430a      	orrs	r2, r1
 80005fa:	625a      	str	r2, [r3, #36]	@ 0x24
	GPIOA->AFR[1] &= ~(1U<<5);
 80005fc:	2390      	movs	r3, #144	@ 0x90
 80005fe:	05db      	lsls	r3, r3, #23
 8000600:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000602:	2390      	movs	r3, #144	@ 0x90
 8000604:	05db      	lsls	r3, r3, #23
 8000606:	2120      	movs	r1, #32
 8000608:	438a      	bics	r2, r1
 800060a:	625a      	str	r2, [r3, #36]	@ 0x24
	GPIOA->AFR[1] &= ~(1U<<6);
 800060c:	2390      	movs	r3, #144	@ 0x90
 800060e:	05db      	lsls	r3, r3, #23
 8000610:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000612:	2390      	movs	r3, #144	@ 0x90
 8000614:	05db      	lsls	r3, r3, #23
 8000616:	2140      	movs	r1, #64	@ 0x40
 8000618:	438a      	bics	r2, r1
 800061a:	625a      	str	r2, [r3, #36]	@ 0x24
	GPIOA->AFR[1] &= ~(1U<<7);
 800061c:	2390      	movs	r3, #144	@ 0x90
 800061e:	05db      	lsls	r3, r3, #23
 8000620:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000622:	2390      	movs	r3, #144	@ 0x90
 8000624:	05db      	lsls	r3, r3, #23
 8000626:	2180      	movs	r1, #128	@ 0x80
 8000628:	438a      	bics	r2, r1
 800062a:	625a      	str	r2, [r3, #36]	@ 0x24


	/*Enable clock access to USART1*/
	RCC->APB2ENR |= UART1EN;
 800062c:	4b0c      	ldr	r3, [pc, #48]	@ (8000660 <debug_uart_init+0xa8>)
 800062e:	699a      	ldr	r2, [r3, #24]
 8000630:	4b0b      	ldr	r3, [pc, #44]	@ (8000660 <debug_uart_init+0xa8>)
 8000632:	2180      	movs	r1, #128	@ 0x80
 8000634:	01c9      	lsls	r1, r1, #7
 8000636:	430a      	orrs	r2, r1
 8000638:	619a      	str	r2, [r3, #24]
	/*Configure uart baud rate*/
	uart_set_baud_rate(APB2_CLK,DBG_UART_BAUDRATE);
 800063a:	23e1      	movs	r3, #225	@ 0xe1
 800063c:	025b      	lsls	r3, r3, #9
 800063e:	4a0a      	ldr	r2, [pc, #40]	@ (8000668 <debug_uart_init+0xb0>)
 8000640:	0019      	movs	r1, r3
 8000642:	0010      	movs	r0, r2
 8000644:	f000 f840 	bl	80006c8 <uart_set_baud_rate>
	/*Configure transfer direction*/
	USART1->CR1 = CR1_TE;
 8000648:	4b08      	ldr	r3, [pc, #32]	@ (800066c <debug_uart_init+0xb4>)
 800064a:	2208      	movs	r2, #8
 800064c:	601a      	str	r2, [r3, #0]
	/*Enable UART module*/
	USART1->CR1 |= CR1_UE;//just update value of bit 0
 800064e:	4b07      	ldr	r3, [pc, #28]	@ (800066c <debug_uart_init+0xb4>)
 8000650:	681a      	ldr	r2, [r3, #0]
 8000652:	4b06      	ldr	r3, [pc, #24]	@ (800066c <debug_uart_init+0xb4>)
 8000654:	2101      	movs	r1, #1
 8000656:	430a      	orrs	r2, r1
 8000658:	601a      	str	r2, [r3, #0]

}
 800065a:	46c0      	nop			@ (mov r8, r8)
 800065c:	46bd      	mov	sp, r7
 800065e:	bd80      	pop	{r7, pc}
 8000660:	40021000 	.word	0x40021000
 8000664:	fffbffff 	.word	0xfffbffff
 8000668:	007a1200 	.word	0x007a1200
 800066c:	40013800 	.word	0x40013800

08000670 <uart_write>:

static void uart_write(int ch)
{
 8000670:	b580      	push	{r7, lr}
 8000672:	b082      	sub	sp, #8
 8000674:	af00      	add	r7, sp, #0
 8000676:	6078      	str	r0, [r7, #4]
	/*Make sure tx data reg is empty*/
	while(!(USART1->ISR & SR_TXE));
 8000678:	46c0      	nop			@ (mov r8, r8)
 800067a:	4b08      	ldr	r3, [pc, #32]	@ (800069c <uart_write+0x2c>)
 800067c:	69db      	ldr	r3, [r3, #28]
 800067e:	2280      	movs	r2, #128	@ 0x80
 8000680:	4013      	ands	r3, r2
 8000682:	d0fa      	beq.n	800067a <uart_write+0xa>
	/*Write to transmit data reg*/
	USART1->TDR = (ch & 0xFF);
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	b29b      	uxth	r3, r3
 8000688:	4a04      	ldr	r2, [pc, #16]	@ (800069c <uart_write+0x2c>)
 800068a:	21ff      	movs	r1, #255	@ 0xff
 800068c:	400b      	ands	r3, r1
 800068e:	b29b      	uxth	r3, r3
 8000690:	8513      	strh	r3, [r2, #40]	@ 0x28
}
 8000692:	46c0      	nop			@ (mov r8, r8)
 8000694:	46bd      	mov	sp, r7
 8000696:	b002      	add	sp, #8
 8000698:	bd80      	pop	{r7, pc}
 800069a:	46c0      	nop			@ (mov r8, r8)
 800069c:	40013800 	.word	0x40013800

080006a0 <compute_uart_bd>:

static uint16_t compute_uart_bd(uint32_t periph_clk,uint32_t baudrate)
{
 80006a0:	b580      	push	{r7, lr}
 80006a2:	b082      	sub	sp, #8
 80006a4:	af00      	add	r7, sp, #0
 80006a6:	6078      	str	r0, [r7, #4]
 80006a8:	6039      	str	r1, [r7, #0]
	return ((periph_clk + (baudrate/2U))/baudrate);//round off technineuq
 80006aa:	683b      	ldr	r3, [r7, #0]
 80006ac:	085a      	lsrs	r2, r3, #1
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	18d3      	adds	r3, r2, r3
 80006b2:	6839      	ldr	r1, [r7, #0]
 80006b4:	0018      	movs	r0, r3
 80006b6:	f7ff fd31 	bl	800011c <__udivsi3>
 80006ba:	0003      	movs	r3, r0
 80006bc:	b29b      	uxth	r3, r3
}
 80006be:	0018      	movs	r0, r3
 80006c0:	46bd      	mov	sp, r7
 80006c2:	b002      	add	sp, #8
 80006c4:	bd80      	pop	{r7, pc}
	...

080006c8 <uart_set_baud_rate>:

static void uart_set_baud_rate(uint32_t periph_clk,uint32_t baudrate)
{
 80006c8:	b580      	push	{r7, lr}
 80006ca:	b082      	sub	sp, #8
 80006cc:	af00      	add	r7, sp, #0
 80006ce:	6078      	str	r0, [r7, #4]
 80006d0:	6039      	str	r1, [r7, #0]
	USART1->BRR = compute_uart_bd(periph_clk,baudrate);
 80006d2:	683a      	ldr	r2, [r7, #0]
 80006d4:	687b      	ldr	r3, [r7, #4]
 80006d6:	0011      	movs	r1, r2
 80006d8:	0018      	movs	r0, r3
 80006da:	f7ff ffe1 	bl	80006a0 <compute_uart_bd>
 80006de:	0003      	movs	r3, r0
 80006e0:	001a      	movs	r2, r3
 80006e2:	4b03      	ldr	r3, [pc, #12]	@ (80006f0 <uart_set_baud_rate+0x28>)
 80006e4:	60da      	str	r2, [r3, #12]
}
 80006e6:	46c0      	nop			@ (mov r8, r8)
 80006e8:	46bd      	mov	sp, r7
 80006ea:	b002      	add	sp, #8
 80006ec:	bd80      	pop	{r7, pc}
 80006ee:	46c0      	nop			@ (mov r8, r8)
 80006f0:	40013800 	.word	0x40013800

080006f4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80006f4:	480d      	ldr	r0, [pc, #52]	@ (800072c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80006f6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80006f8:	e000      	b.n	80006fc <Reset_Handler+0x8>
 80006fa:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80006fc:	480c      	ldr	r0, [pc, #48]	@ (8000730 <LoopForever+0x6>)
  ldr r1, =_edata
 80006fe:	490d      	ldr	r1, [pc, #52]	@ (8000734 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000700:	4a0d      	ldr	r2, [pc, #52]	@ (8000738 <LoopForever+0xe>)
  movs r3, #0
 8000702:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000704:	e002      	b.n	800070c <LoopCopyDataInit>

08000706 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000706:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000708:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800070a:	3304      	adds	r3, #4

0800070c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800070c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800070e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000710:	d3f9      	bcc.n	8000706 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000712:	4a0a      	ldr	r2, [pc, #40]	@ (800073c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000714:	4c0a      	ldr	r4, [pc, #40]	@ (8000740 <LoopForever+0x16>)
  movs r3, #0
 8000716:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000718:	e001      	b.n	800071e <LoopFillZerobss>

0800071a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800071a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800071c:	3204      	adds	r2, #4

0800071e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800071e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000720:	d3fb      	bcc.n	800071a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000722:	f000 f98d 	bl	8000a40 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000726:	f7ff fe2d 	bl	8000384 <main>

0800072a <LoopForever>:

LoopForever:
  b LoopForever
 800072a:	e7fe      	b.n	800072a <LoopForever>
  ldr   r0, =_estack
 800072c:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 8000730:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000734:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000738:	08001694 	.word	0x08001694
  ldr r2, =_sbss
 800073c:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000740:	200001d0 	.word	0x200001d0

08000744 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000744:	e7fe      	b.n	8000744 <ADC_COMP_IRQHandler>
	...

08000748 <std>:
 8000748:	2300      	movs	r3, #0
 800074a:	b510      	push	{r4, lr}
 800074c:	0004      	movs	r4, r0
 800074e:	6003      	str	r3, [r0, #0]
 8000750:	6043      	str	r3, [r0, #4]
 8000752:	6083      	str	r3, [r0, #8]
 8000754:	8181      	strh	r1, [r0, #12]
 8000756:	6643      	str	r3, [r0, #100]	@ 0x64
 8000758:	81c2      	strh	r2, [r0, #14]
 800075a:	6103      	str	r3, [r0, #16]
 800075c:	6143      	str	r3, [r0, #20]
 800075e:	6183      	str	r3, [r0, #24]
 8000760:	0019      	movs	r1, r3
 8000762:	2208      	movs	r2, #8
 8000764:	305c      	adds	r0, #92	@ 0x5c
 8000766:	f000 f90f 	bl	8000988 <memset>
 800076a:	4b0b      	ldr	r3, [pc, #44]	@ (8000798 <std+0x50>)
 800076c:	6224      	str	r4, [r4, #32]
 800076e:	6263      	str	r3, [r4, #36]	@ 0x24
 8000770:	4b0a      	ldr	r3, [pc, #40]	@ (800079c <std+0x54>)
 8000772:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000774:	4b0a      	ldr	r3, [pc, #40]	@ (80007a0 <std+0x58>)
 8000776:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000778:	4b0a      	ldr	r3, [pc, #40]	@ (80007a4 <std+0x5c>)
 800077a:	6323      	str	r3, [r4, #48]	@ 0x30
 800077c:	4b0a      	ldr	r3, [pc, #40]	@ (80007a8 <std+0x60>)
 800077e:	429c      	cmp	r4, r3
 8000780:	d005      	beq.n	800078e <std+0x46>
 8000782:	4b0a      	ldr	r3, [pc, #40]	@ (80007ac <std+0x64>)
 8000784:	429c      	cmp	r4, r3
 8000786:	d002      	beq.n	800078e <std+0x46>
 8000788:	4b09      	ldr	r3, [pc, #36]	@ (80007b0 <std+0x68>)
 800078a:	429c      	cmp	r4, r3
 800078c:	d103      	bne.n	8000796 <std+0x4e>
 800078e:	0020      	movs	r0, r4
 8000790:	3058      	adds	r0, #88	@ 0x58
 8000792:	f000 f979 	bl	8000a88 <__retarget_lock_init_recursive>
 8000796:	bd10      	pop	{r4, pc}
 8000798:	080008f1 	.word	0x080008f1
 800079c:	08000919 	.word	0x08000919
 80007a0:	08000951 	.word	0x08000951
 80007a4:	0800097d 	.word	0x0800097d
 80007a8:	20000084 	.word	0x20000084
 80007ac:	200000ec 	.word	0x200000ec
 80007b0:	20000154 	.word	0x20000154

080007b4 <stdio_exit_handler>:
 80007b4:	b510      	push	{r4, lr}
 80007b6:	4a03      	ldr	r2, [pc, #12]	@ (80007c4 <stdio_exit_handler+0x10>)
 80007b8:	4903      	ldr	r1, [pc, #12]	@ (80007c8 <stdio_exit_handler+0x14>)
 80007ba:	4804      	ldr	r0, [pc, #16]	@ (80007cc <stdio_exit_handler+0x18>)
 80007bc:	f000 f86c 	bl	8000898 <_fwalk_sglue>
 80007c0:	bd10      	pop	{r4, pc}
 80007c2:	46c0      	nop			@ (mov r8, r8)
 80007c4:	20000000 	.word	0x20000000
 80007c8:	08001315 	.word	0x08001315
 80007cc:	20000010 	.word	0x20000010

080007d0 <cleanup_stdio>:
 80007d0:	6841      	ldr	r1, [r0, #4]
 80007d2:	4b0b      	ldr	r3, [pc, #44]	@ (8000800 <cleanup_stdio+0x30>)
 80007d4:	b510      	push	{r4, lr}
 80007d6:	0004      	movs	r4, r0
 80007d8:	4299      	cmp	r1, r3
 80007da:	d001      	beq.n	80007e0 <cleanup_stdio+0x10>
 80007dc:	f000 fd9a 	bl	8001314 <_fflush_r>
 80007e0:	68a1      	ldr	r1, [r4, #8]
 80007e2:	4b08      	ldr	r3, [pc, #32]	@ (8000804 <cleanup_stdio+0x34>)
 80007e4:	4299      	cmp	r1, r3
 80007e6:	d002      	beq.n	80007ee <cleanup_stdio+0x1e>
 80007e8:	0020      	movs	r0, r4
 80007ea:	f000 fd93 	bl	8001314 <_fflush_r>
 80007ee:	68e1      	ldr	r1, [r4, #12]
 80007f0:	4b05      	ldr	r3, [pc, #20]	@ (8000808 <cleanup_stdio+0x38>)
 80007f2:	4299      	cmp	r1, r3
 80007f4:	d002      	beq.n	80007fc <cleanup_stdio+0x2c>
 80007f6:	0020      	movs	r0, r4
 80007f8:	f000 fd8c 	bl	8001314 <_fflush_r>
 80007fc:	bd10      	pop	{r4, pc}
 80007fe:	46c0      	nop			@ (mov r8, r8)
 8000800:	20000084 	.word	0x20000084
 8000804:	200000ec 	.word	0x200000ec
 8000808:	20000154 	.word	0x20000154

0800080c <global_stdio_init.part.0>:
 800080c:	b510      	push	{r4, lr}
 800080e:	4b09      	ldr	r3, [pc, #36]	@ (8000834 <global_stdio_init.part.0+0x28>)
 8000810:	4a09      	ldr	r2, [pc, #36]	@ (8000838 <global_stdio_init.part.0+0x2c>)
 8000812:	2104      	movs	r1, #4
 8000814:	601a      	str	r2, [r3, #0]
 8000816:	4809      	ldr	r0, [pc, #36]	@ (800083c <global_stdio_init.part.0+0x30>)
 8000818:	2200      	movs	r2, #0
 800081a:	f7ff ff95 	bl	8000748 <std>
 800081e:	2201      	movs	r2, #1
 8000820:	2109      	movs	r1, #9
 8000822:	4807      	ldr	r0, [pc, #28]	@ (8000840 <global_stdio_init.part.0+0x34>)
 8000824:	f7ff ff90 	bl	8000748 <std>
 8000828:	2202      	movs	r2, #2
 800082a:	2112      	movs	r1, #18
 800082c:	4805      	ldr	r0, [pc, #20]	@ (8000844 <global_stdio_init.part.0+0x38>)
 800082e:	f7ff ff8b 	bl	8000748 <std>
 8000832:	bd10      	pop	{r4, pc}
 8000834:	200001bc 	.word	0x200001bc
 8000838:	080007b5 	.word	0x080007b5
 800083c:	20000084 	.word	0x20000084
 8000840:	200000ec 	.word	0x200000ec
 8000844:	20000154 	.word	0x20000154

08000848 <__sfp_lock_acquire>:
 8000848:	b510      	push	{r4, lr}
 800084a:	4802      	ldr	r0, [pc, #8]	@ (8000854 <__sfp_lock_acquire+0xc>)
 800084c:	f000 f91d 	bl	8000a8a <__retarget_lock_acquire_recursive>
 8000850:	bd10      	pop	{r4, pc}
 8000852:	46c0      	nop			@ (mov r8, r8)
 8000854:	200001c5 	.word	0x200001c5

08000858 <__sfp_lock_release>:
 8000858:	b510      	push	{r4, lr}
 800085a:	4802      	ldr	r0, [pc, #8]	@ (8000864 <__sfp_lock_release+0xc>)
 800085c:	f000 f916 	bl	8000a8c <__retarget_lock_release_recursive>
 8000860:	bd10      	pop	{r4, pc}
 8000862:	46c0      	nop			@ (mov r8, r8)
 8000864:	200001c5 	.word	0x200001c5

08000868 <__sinit>:
 8000868:	b510      	push	{r4, lr}
 800086a:	0004      	movs	r4, r0
 800086c:	f7ff ffec 	bl	8000848 <__sfp_lock_acquire>
 8000870:	6a23      	ldr	r3, [r4, #32]
 8000872:	2b00      	cmp	r3, #0
 8000874:	d002      	beq.n	800087c <__sinit+0x14>
 8000876:	f7ff ffef 	bl	8000858 <__sfp_lock_release>
 800087a:	bd10      	pop	{r4, pc}
 800087c:	4b04      	ldr	r3, [pc, #16]	@ (8000890 <__sinit+0x28>)
 800087e:	6223      	str	r3, [r4, #32]
 8000880:	4b04      	ldr	r3, [pc, #16]	@ (8000894 <__sinit+0x2c>)
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	2b00      	cmp	r3, #0
 8000886:	d1f6      	bne.n	8000876 <__sinit+0xe>
 8000888:	f7ff ffc0 	bl	800080c <global_stdio_init.part.0>
 800088c:	e7f3      	b.n	8000876 <__sinit+0xe>
 800088e:	46c0      	nop			@ (mov r8, r8)
 8000890:	080007d1 	.word	0x080007d1
 8000894:	200001bc 	.word	0x200001bc

08000898 <_fwalk_sglue>:
 8000898:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800089a:	0014      	movs	r4, r2
 800089c:	2600      	movs	r6, #0
 800089e:	9000      	str	r0, [sp, #0]
 80008a0:	9101      	str	r1, [sp, #4]
 80008a2:	68a5      	ldr	r5, [r4, #8]
 80008a4:	6867      	ldr	r7, [r4, #4]
 80008a6:	3f01      	subs	r7, #1
 80008a8:	d504      	bpl.n	80008b4 <_fwalk_sglue+0x1c>
 80008aa:	6824      	ldr	r4, [r4, #0]
 80008ac:	2c00      	cmp	r4, #0
 80008ae:	d1f8      	bne.n	80008a2 <_fwalk_sglue+0xa>
 80008b0:	0030      	movs	r0, r6
 80008b2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80008b4:	89ab      	ldrh	r3, [r5, #12]
 80008b6:	2b01      	cmp	r3, #1
 80008b8:	d908      	bls.n	80008cc <_fwalk_sglue+0x34>
 80008ba:	220e      	movs	r2, #14
 80008bc:	5eab      	ldrsh	r3, [r5, r2]
 80008be:	3301      	adds	r3, #1
 80008c0:	d004      	beq.n	80008cc <_fwalk_sglue+0x34>
 80008c2:	0029      	movs	r1, r5
 80008c4:	9800      	ldr	r0, [sp, #0]
 80008c6:	9b01      	ldr	r3, [sp, #4]
 80008c8:	4798      	blx	r3
 80008ca:	4306      	orrs	r6, r0
 80008cc:	3568      	adds	r5, #104	@ 0x68
 80008ce:	e7ea      	b.n	80008a6 <_fwalk_sglue+0xe>

080008d0 <iprintf>:
 80008d0:	b40f      	push	{r0, r1, r2, r3}
 80008d2:	b507      	push	{r0, r1, r2, lr}
 80008d4:	4905      	ldr	r1, [pc, #20]	@ (80008ec <iprintf+0x1c>)
 80008d6:	ab04      	add	r3, sp, #16
 80008d8:	6808      	ldr	r0, [r1, #0]
 80008da:	cb04      	ldmia	r3!, {r2}
 80008dc:	6881      	ldr	r1, [r0, #8]
 80008de:	9301      	str	r3, [sp, #4]
 80008e0:	f000 f9fa 	bl	8000cd8 <_vfiprintf_r>
 80008e4:	b003      	add	sp, #12
 80008e6:	bc08      	pop	{r3}
 80008e8:	b004      	add	sp, #16
 80008ea:	4718      	bx	r3
 80008ec:	2000000c 	.word	0x2000000c

080008f0 <__sread>:
 80008f0:	b570      	push	{r4, r5, r6, lr}
 80008f2:	000c      	movs	r4, r1
 80008f4:	250e      	movs	r5, #14
 80008f6:	5f49      	ldrsh	r1, [r1, r5]
 80008f8:	f000 f874 	bl	80009e4 <_read_r>
 80008fc:	2800      	cmp	r0, #0
 80008fe:	db03      	blt.n	8000908 <__sread+0x18>
 8000900:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8000902:	181b      	adds	r3, r3, r0
 8000904:	6563      	str	r3, [r4, #84]	@ 0x54
 8000906:	bd70      	pop	{r4, r5, r6, pc}
 8000908:	89a3      	ldrh	r3, [r4, #12]
 800090a:	4a02      	ldr	r2, [pc, #8]	@ (8000914 <__sread+0x24>)
 800090c:	4013      	ands	r3, r2
 800090e:	81a3      	strh	r3, [r4, #12]
 8000910:	e7f9      	b.n	8000906 <__sread+0x16>
 8000912:	46c0      	nop			@ (mov r8, r8)
 8000914:	ffffefff 	.word	0xffffefff

08000918 <__swrite>:
 8000918:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800091a:	001f      	movs	r7, r3
 800091c:	898b      	ldrh	r3, [r1, #12]
 800091e:	0005      	movs	r5, r0
 8000920:	000c      	movs	r4, r1
 8000922:	0016      	movs	r6, r2
 8000924:	05db      	lsls	r3, r3, #23
 8000926:	d505      	bpl.n	8000934 <__swrite+0x1c>
 8000928:	230e      	movs	r3, #14
 800092a:	5ec9      	ldrsh	r1, [r1, r3]
 800092c:	2200      	movs	r2, #0
 800092e:	2302      	movs	r3, #2
 8000930:	f000 f844 	bl	80009bc <_lseek_r>
 8000934:	89a3      	ldrh	r3, [r4, #12]
 8000936:	4a05      	ldr	r2, [pc, #20]	@ (800094c <__swrite+0x34>)
 8000938:	0028      	movs	r0, r5
 800093a:	4013      	ands	r3, r2
 800093c:	81a3      	strh	r3, [r4, #12]
 800093e:	0032      	movs	r2, r6
 8000940:	230e      	movs	r3, #14
 8000942:	5ee1      	ldrsh	r1, [r4, r3]
 8000944:	003b      	movs	r3, r7
 8000946:	f000 f861 	bl	8000a0c <_write_r>
 800094a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800094c:	ffffefff 	.word	0xffffefff

08000950 <__sseek>:
 8000950:	b570      	push	{r4, r5, r6, lr}
 8000952:	000c      	movs	r4, r1
 8000954:	250e      	movs	r5, #14
 8000956:	5f49      	ldrsh	r1, [r1, r5]
 8000958:	f000 f830 	bl	80009bc <_lseek_r>
 800095c:	89a3      	ldrh	r3, [r4, #12]
 800095e:	1c42      	adds	r2, r0, #1
 8000960:	d103      	bne.n	800096a <__sseek+0x1a>
 8000962:	4a05      	ldr	r2, [pc, #20]	@ (8000978 <__sseek+0x28>)
 8000964:	4013      	ands	r3, r2
 8000966:	81a3      	strh	r3, [r4, #12]
 8000968:	bd70      	pop	{r4, r5, r6, pc}
 800096a:	2280      	movs	r2, #128	@ 0x80
 800096c:	0152      	lsls	r2, r2, #5
 800096e:	4313      	orrs	r3, r2
 8000970:	81a3      	strh	r3, [r4, #12]
 8000972:	6560      	str	r0, [r4, #84]	@ 0x54
 8000974:	e7f8      	b.n	8000968 <__sseek+0x18>
 8000976:	46c0      	nop			@ (mov r8, r8)
 8000978:	ffffefff 	.word	0xffffefff

0800097c <__sclose>:
 800097c:	b510      	push	{r4, lr}
 800097e:	230e      	movs	r3, #14
 8000980:	5ec9      	ldrsh	r1, [r1, r3]
 8000982:	f000 f809 	bl	8000998 <_close_r>
 8000986:	bd10      	pop	{r4, pc}

08000988 <memset>:
 8000988:	0003      	movs	r3, r0
 800098a:	1882      	adds	r2, r0, r2
 800098c:	4293      	cmp	r3, r2
 800098e:	d100      	bne.n	8000992 <memset+0xa>
 8000990:	4770      	bx	lr
 8000992:	7019      	strb	r1, [r3, #0]
 8000994:	3301      	adds	r3, #1
 8000996:	e7f9      	b.n	800098c <memset+0x4>

08000998 <_close_r>:
 8000998:	2300      	movs	r3, #0
 800099a:	b570      	push	{r4, r5, r6, lr}
 800099c:	4d06      	ldr	r5, [pc, #24]	@ (80009b8 <_close_r+0x20>)
 800099e:	0004      	movs	r4, r0
 80009a0:	0008      	movs	r0, r1
 80009a2:	602b      	str	r3, [r5, #0]
 80009a4:	f7ff fd31 	bl	800040a <_close>
 80009a8:	1c43      	adds	r3, r0, #1
 80009aa:	d103      	bne.n	80009b4 <_close_r+0x1c>
 80009ac:	682b      	ldr	r3, [r5, #0]
 80009ae:	2b00      	cmp	r3, #0
 80009b0:	d000      	beq.n	80009b4 <_close_r+0x1c>
 80009b2:	6023      	str	r3, [r4, #0]
 80009b4:	bd70      	pop	{r4, r5, r6, pc}
 80009b6:	46c0      	nop			@ (mov r8, r8)
 80009b8:	200001c0 	.word	0x200001c0

080009bc <_lseek_r>:
 80009bc:	b570      	push	{r4, r5, r6, lr}
 80009be:	0004      	movs	r4, r0
 80009c0:	0008      	movs	r0, r1
 80009c2:	0011      	movs	r1, r2
 80009c4:	001a      	movs	r2, r3
 80009c6:	2300      	movs	r3, #0
 80009c8:	4d05      	ldr	r5, [pc, #20]	@ (80009e0 <_lseek_r+0x24>)
 80009ca:	602b      	str	r3, [r5, #0]
 80009cc:	f7ff fd3e 	bl	800044c <_lseek>
 80009d0:	1c43      	adds	r3, r0, #1
 80009d2:	d103      	bne.n	80009dc <_lseek_r+0x20>
 80009d4:	682b      	ldr	r3, [r5, #0]
 80009d6:	2b00      	cmp	r3, #0
 80009d8:	d000      	beq.n	80009dc <_lseek_r+0x20>
 80009da:	6023      	str	r3, [r4, #0]
 80009dc:	bd70      	pop	{r4, r5, r6, pc}
 80009de:	46c0      	nop			@ (mov r8, r8)
 80009e0:	200001c0 	.word	0x200001c0

080009e4 <_read_r>:
 80009e4:	b570      	push	{r4, r5, r6, lr}
 80009e6:	0004      	movs	r4, r0
 80009e8:	0008      	movs	r0, r1
 80009ea:	0011      	movs	r1, r2
 80009ec:	001a      	movs	r2, r3
 80009ee:	2300      	movs	r3, #0
 80009f0:	4d05      	ldr	r5, [pc, #20]	@ (8000a08 <_read_r+0x24>)
 80009f2:	602b      	str	r3, [r5, #0]
 80009f4:	f7ff fcd0 	bl	8000398 <_read>
 80009f8:	1c43      	adds	r3, r0, #1
 80009fa:	d103      	bne.n	8000a04 <_read_r+0x20>
 80009fc:	682b      	ldr	r3, [r5, #0]
 80009fe:	2b00      	cmp	r3, #0
 8000a00:	d000      	beq.n	8000a04 <_read_r+0x20>
 8000a02:	6023      	str	r3, [r4, #0]
 8000a04:	bd70      	pop	{r4, r5, r6, pc}
 8000a06:	46c0      	nop			@ (mov r8, r8)
 8000a08:	200001c0 	.word	0x200001c0

08000a0c <_write_r>:
 8000a0c:	b570      	push	{r4, r5, r6, lr}
 8000a0e:	0004      	movs	r4, r0
 8000a10:	0008      	movs	r0, r1
 8000a12:	0011      	movs	r1, r2
 8000a14:	001a      	movs	r2, r3
 8000a16:	2300      	movs	r3, #0
 8000a18:	4d05      	ldr	r5, [pc, #20]	@ (8000a30 <_write_r+0x24>)
 8000a1a:	602b      	str	r3, [r5, #0]
 8000a1c:	f7ff fcd9 	bl	80003d2 <_write>
 8000a20:	1c43      	adds	r3, r0, #1
 8000a22:	d103      	bne.n	8000a2c <_write_r+0x20>
 8000a24:	682b      	ldr	r3, [r5, #0]
 8000a26:	2b00      	cmp	r3, #0
 8000a28:	d000      	beq.n	8000a2c <_write_r+0x20>
 8000a2a:	6023      	str	r3, [r4, #0]
 8000a2c:	bd70      	pop	{r4, r5, r6, pc}
 8000a2e:	46c0      	nop			@ (mov r8, r8)
 8000a30:	200001c0 	.word	0x200001c0

08000a34 <__errno>:
 8000a34:	4b01      	ldr	r3, [pc, #4]	@ (8000a3c <__errno+0x8>)
 8000a36:	6818      	ldr	r0, [r3, #0]
 8000a38:	4770      	bx	lr
 8000a3a:	46c0      	nop			@ (mov r8, r8)
 8000a3c:	2000000c 	.word	0x2000000c

08000a40 <__libc_init_array>:
 8000a40:	b570      	push	{r4, r5, r6, lr}
 8000a42:	2600      	movs	r6, #0
 8000a44:	4c0c      	ldr	r4, [pc, #48]	@ (8000a78 <__libc_init_array+0x38>)
 8000a46:	4d0d      	ldr	r5, [pc, #52]	@ (8000a7c <__libc_init_array+0x3c>)
 8000a48:	1b64      	subs	r4, r4, r5
 8000a4a:	10a4      	asrs	r4, r4, #2
 8000a4c:	42a6      	cmp	r6, r4
 8000a4e:	d109      	bne.n	8000a64 <__libc_init_array+0x24>
 8000a50:	2600      	movs	r6, #0
 8000a52:	f000 fdd9 	bl	8001608 <_init>
 8000a56:	4c0a      	ldr	r4, [pc, #40]	@ (8000a80 <__libc_init_array+0x40>)
 8000a58:	4d0a      	ldr	r5, [pc, #40]	@ (8000a84 <__libc_init_array+0x44>)
 8000a5a:	1b64      	subs	r4, r4, r5
 8000a5c:	10a4      	asrs	r4, r4, #2
 8000a5e:	42a6      	cmp	r6, r4
 8000a60:	d105      	bne.n	8000a6e <__libc_init_array+0x2e>
 8000a62:	bd70      	pop	{r4, r5, r6, pc}
 8000a64:	00b3      	lsls	r3, r6, #2
 8000a66:	58eb      	ldr	r3, [r5, r3]
 8000a68:	4798      	blx	r3
 8000a6a:	3601      	adds	r6, #1
 8000a6c:	e7ee      	b.n	8000a4c <__libc_init_array+0xc>
 8000a6e:	00b3      	lsls	r3, r6, #2
 8000a70:	58eb      	ldr	r3, [r5, r3]
 8000a72:	4798      	blx	r3
 8000a74:	3601      	adds	r6, #1
 8000a76:	e7f2      	b.n	8000a5e <__libc_init_array+0x1e>
 8000a78:	0800168c 	.word	0x0800168c
 8000a7c:	0800168c 	.word	0x0800168c
 8000a80:	08001690 	.word	0x08001690
 8000a84:	0800168c 	.word	0x0800168c

08000a88 <__retarget_lock_init_recursive>:
 8000a88:	4770      	bx	lr

08000a8a <__retarget_lock_acquire_recursive>:
 8000a8a:	4770      	bx	lr

08000a8c <__retarget_lock_release_recursive>:
 8000a8c:	4770      	bx	lr
	...

08000a90 <_free_r>:
 8000a90:	b570      	push	{r4, r5, r6, lr}
 8000a92:	0005      	movs	r5, r0
 8000a94:	1e0c      	subs	r4, r1, #0
 8000a96:	d010      	beq.n	8000aba <_free_r+0x2a>
 8000a98:	3c04      	subs	r4, #4
 8000a9a:	6823      	ldr	r3, [r4, #0]
 8000a9c:	2b00      	cmp	r3, #0
 8000a9e:	da00      	bge.n	8000aa2 <_free_r+0x12>
 8000aa0:	18e4      	adds	r4, r4, r3
 8000aa2:	0028      	movs	r0, r5
 8000aa4:	f000 f8e0 	bl	8000c68 <__malloc_lock>
 8000aa8:	4a1d      	ldr	r2, [pc, #116]	@ (8000b20 <_free_r+0x90>)
 8000aaa:	6813      	ldr	r3, [r2, #0]
 8000aac:	2b00      	cmp	r3, #0
 8000aae:	d105      	bne.n	8000abc <_free_r+0x2c>
 8000ab0:	6063      	str	r3, [r4, #4]
 8000ab2:	6014      	str	r4, [r2, #0]
 8000ab4:	0028      	movs	r0, r5
 8000ab6:	f000 f8df 	bl	8000c78 <__malloc_unlock>
 8000aba:	bd70      	pop	{r4, r5, r6, pc}
 8000abc:	42a3      	cmp	r3, r4
 8000abe:	d908      	bls.n	8000ad2 <_free_r+0x42>
 8000ac0:	6820      	ldr	r0, [r4, #0]
 8000ac2:	1821      	adds	r1, r4, r0
 8000ac4:	428b      	cmp	r3, r1
 8000ac6:	d1f3      	bne.n	8000ab0 <_free_r+0x20>
 8000ac8:	6819      	ldr	r1, [r3, #0]
 8000aca:	685b      	ldr	r3, [r3, #4]
 8000acc:	1809      	adds	r1, r1, r0
 8000ace:	6021      	str	r1, [r4, #0]
 8000ad0:	e7ee      	b.n	8000ab0 <_free_r+0x20>
 8000ad2:	001a      	movs	r2, r3
 8000ad4:	685b      	ldr	r3, [r3, #4]
 8000ad6:	2b00      	cmp	r3, #0
 8000ad8:	d001      	beq.n	8000ade <_free_r+0x4e>
 8000ada:	42a3      	cmp	r3, r4
 8000adc:	d9f9      	bls.n	8000ad2 <_free_r+0x42>
 8000ade:	6811      	ldr	r1, [r2, #0]
 8000ae0:	1850      	adds	r0, r2, r1
 8000ae2:	42a0      	cmp	r0, r4
 8000ae4:	d10b      	bne.n	8000afe <_free_r+0x6e>
 8000ae6:	6820      	ldr	r0, [r4, #0]
 8000ae8:	1809      	adds	r1, r1, r0
 8000aea:	1850      	adds	r0, r2, r1
 8000aec:	6011      	str	r1, [r2, #0]
 8000aee:	4283      	cmp	r3, r0
 8000af0:	d1e0      	bne.n	8000ab4 <_free_r+0x24>
 8000af2:	6818      	ldr	r0, [r3, #0]
 8000af4:	685b      	ldr	r3, [r3, #4]
 8000af6:	1841      	adds	r1, r0, r1
 8000af8:	6011      	str	r1, [r2, #0]
 8000afa:	6053      	str	r3, [r2, #4]
 8000afc:	e7da      	b.n	8000ab4 <_free_r+0x24>
 8000afe:	42a0      	cmp	r0, r4
 8000b00:	d902      	bls.n	8000b08 <_free_r+0x78>
 8000b02:	230c      	movs	r3, #12
 8000b04:	602b      	str	r3, [r5, #0]
 8000b06:	e7d5      	b.n	8000ab4 <_free_r+0x24>
 8000b08:	6820      	ldr	r0, [r4, #0]
 8000b0a:	1821      	adds	r1, r4, r0
 8000b0c:	428b      	cmp	r3, r1
 8000b0e:	d103      	bne.n	8000b18 <_free_r+0x88>
 8000b10:	6819      	ldr	r1, [r3, #0]
 8000b12:	685b      	ldr	r3, [r3, #4]
 8000b14:	1809      	adds	r1, r1, r0
 8000b16:	6021      	str	r1, [r4, #0]
 8000b18:	6063      	str	r3, [r4, #4]
 8000b1a:	6054      	str	r4, [r2, #4]
 8000b1c:	e7ca      	b.n	8000ab4 <_free_r+0x24>
 8000b1e:	46c0      	nop			@ (mov r8, r8)
 8000b20:	200001cc 	.word	0x200001cc

08000b24 <sbrk_aligned>:
 8000b24:	b570      	push	{r4, r5, r6, lr}
 8000b26:	4e0f      	ldr	r6, [pc, #60]	@ (8000b64 <sbrk_aligned+0x40>)
 8000b28:	000d      	movs	r5, r1
 8000b2a:	6831      	ldr	r1, [r6, #0]
 8000b2c:	0004      	movs	r4, r0
 8000b2e:	2900      	cmp	r1, #0
 8000b30:	d102      	bne.n	8000b38 <sbrk_aligned+0x14>
 8000b32:	f000 fcbb 	bl	80014ac <_sbrk_r>
 8000b36:	6030      	str	r0, [r6, #0]
 8000b38:	0029      	movs	r1, r5
 8000b3a:	0020      	movs	r0, r4
 8000b3c:	f000 fcb6 	bl	80014ac <_sbrk_r>
 8000b40:	1c43      	adds	r3, r0, #1
 8000b42:	d103      	bne.n	8000b4c <sbrk_aligned+0x28>
 8000b44:	2501      	movs	r5, #1
 8000b46:	426d      	negs	r5, r5
 8000b48:	0028      	movs	r0, r5
 8000b4a:	bd70      	pop	{r4, r5, r6, pc}
 8000b4c:	2303      	movs	r3, #3
 8000b4e:	1cc5      	adds	r5, r0, #3
 8000b50:	439d      	bics	r5, r3
 8000b52:	42a8      	cmp	r0, r5
 8000b54:	d0f8      	beq.n	8000b48 <sbrk_aligned+0x24>
 8000b56:	1a29      	subs	r1, r5, r0
 8000b58:	0020      	movs	r0, r4
 8000b5a:	f000 fca7 	bl	80014ac <_sbrk_r>
 8000b5e:	3001      	adds	r0, #1
 8000b60:	d1f2      	bne.n	8000b48 <sbrk_aligned+0x24>
 8000b62:	e7ef      	b.n	8000b44 <sbrk_aligned+0x20>
 8000b64:	200001c8 	.word	0x200001c8

08000b68 <_malloc_r>:
 8000b68:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000b6a:	2203      	movs	r2, #3
 8000b6c:	1ccb      	adds	r3, r1, #3
 8000b6e:	4393      	bics	r3, r2
 8000b70:	3308      	adds	r3, #8
 8000b72:	0005      	movs	r5, r0
 8000b74:	001f      	movs	r7, r3
 8000b76:	2b0c      	cmp	r3, #12
 8000b78:	d234      	bcs.n	8000be4 <_malloc_r+0x7c>
 8000b7a:	270c      	movs	r7, #12
 8000b7c:	42b9      	cmp	r1, r7
 8000b7e:	d833      	bhi.n	8000be8 <_malloc_r+0x80>
 8000b80:	0028      	movs	r0, r5
 8000b82:	f000 f871 	bl	8000c68 <__malloc_lock>
 8000b86:	4e37      	ldr	r6, [pc, #220]	@ (8000c64 <_malloc_r+0xfc>)
 8000b88:	6833      	ldr	r3, [r6, #0]
 8000b8a:	001c      	movs	r4, r3
 8000b8c:	2c00      	cmp	r4, #0
 8000b8e:	d12f      	bne.n	8000bf0 <_malloc_r+0x88>
 8000b90:	0039      	movs	r1, r7
 8000b92:	0028      	movs	r0, r5
 8000b94:	f7ff ffc6 	bl	8000b24 <sbrk_aligned>
 8000b98:	0004      	movs	r4, r0
 8000b9a:	1c43      	adds	r3, r0, #1
 8000b9c:	d15f      	bne.n	8000c5e <_malloc_r+0xf6>
 8000b9e:	6834      	ldr	r4, [r6, #0]
 8000ba0:	9400      	str	r4, [sp, #0]
 8000ba2:	9b00      	ldr	r3, [sp, #0]
 8000ba4:	2b00      	cmp	r3, #0
 8000ba6:	d14a      	bne.n	8000c3e <_malloc_r+0xd6>
 8000ba8:	2c00      	cmp	r4, #0
 8000baa:	d052      	beq.n	8000c52 <_malloc_r+0xea>
 8000bac:	6823      	ldr	r3, [r4, #0]
 8000bae:	0028      	movs	r0, r5
 8000bb0:	18e3      	adds	r3, r4, r3
 8000bb2:	9900      	ldr	r1, [sp, #0]
 8000bb4:	9301      	str	r3, [sp, #4]
 8000bb6:	f000 fc79 	bl	80014ac <_sbrk_r>
 8000bba:	9b01      	ldr	r3, [sp, #4]
 8000bbc:	4283      	cmp	r3, r0
 8000bbe:	d148      	bne.n	8000c52 <_malloc_r+0xea>
 8000bc0:	6823      	ldr	r3, [r4, #0]
 8000bc2:	0028      	movs	r0, r5
 8000bc4:	1aff      	subs	r7, r7, r3
 8000bc6:	0039      	movs	r1, r7
 8000bc8:	f7ff ffac 	bl	8000b24 <sbrk_aligned>
 8000bcc:	3001      	adds	r0, #1
 8000bce:	d040      	beq.n	8000c52 <_malloc_r+0xea>
 8000bd0:	6823      	ldr	r3, [r4, #0]
 8000bd2:	19db      	adds	r3, r3, r7
 8000bd4:	6023      	str	r3, [r4, #0]
 8000bd6:	6833      	ldr	r3, [r6, #0]
 8000bd8:	685a      	ldr	r2, [r3, #4]
 8000bda:	2a00      	cmp	r2, #0
 8000bdc:	d133      	bne.n	8000c46 <_malloc_r+0xde>
 8000bde:	9b00      	ldr	r3, [sp, #0]
 8000be0:	6033      	str	r3, [r6, #0]
 8000be2:	e019      	b.n	8000c18 <_malloc_r+0xb0>
 8000be4:	2b00      	cmp	r3, #0
 8000be6:	dac9      	bge.n	8000b7c <_malloc_r+0x14>
 8000be8:	230c      	movs	r3, #12
 8000bea:	602b      	str	r3, [r5, #0]
 8000bec:	2000      	movs	r0, #0
 8000bee:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000bf0:	6821      	ldr	r1, [r4, #0]
 8000bf2:	1bc9      	subs	r1, r1, r7
 8000bf4:	d420      	bmi.n	8000c38 <_malloc_r+0xd0>
 8000bf6:	290b      	cmp	r1, #11
 8000bf8:	d90a      	bls.n	8000c10 <_malloc_r+0xa8>
 8000bfa:	19e2      	adds	r2, r4, r7
 8000bfc:	6027      	str	r7, [r4, #0]
 8000bfe:	42a3      	cmp	r3, r4
 8000c00:	d104      	bne.n	8000c0c <_malloc_r+0xa4>
 8000c02:	6032      	str	r2, [r6, #0]
 8000c04:	6863      	ldr	r3, [r4, #4]
 8000c06:	6011      	str	r1, [r2, #0]
 8000c08:	6053      	str	r3, [r2, #4]
 8000c0a:	e005      	b.n	8000c18 <_malloc_r+0xb0>
 8000c0c:	605a      	str	r2, [r3, #4]
 8000c0e:	e7f9      	b.n	8000c04 <_malloc_r+0x9c>
 8000c10:	6862      	ldr	r2, [r4, #4]
 8000c12:	42a3      	cmp	r3, r4
 8000c14:	d10e      	bne.n	8000c34 <_malloc_r+0xcc>
 8000c16:	6032      	str	r2, [r6, #0]
 8000c18:	0028      	movs	r0, r5
 8000c1a:	f000 f82d 	bl	8000c78 <__malloc_unlock>
 8000c1e:	0020      	movs	r0, r4
 8000c20:	2207      	movs	r2, #7
 8000c22:	300b      	adds	r0, #11
 8000c24:	1d23      	adds	r3, r4, #4
 8000c26:	4390      	bics	r0, r2
 8000c28:	1ac2      	subs	r2, r0, r3
 8000c2a:	4298      	cmp	r0, r3
 8000c2c:	d0df      	beq.n	8000bee <_malloc_r+0x86>
 8000c2e:	1a1b      	subs	r3, r3, r0
 8000c30:	50a3      	str	r3, [r4, r2]
 8000c32:	e7dc      	b.n	8000bee <_malloc_r+0x86>
 8000c34:	605a      	str	r2, [r3, #4]
 8000c36:	e7ef      	b.n	8000c18 <_malloc_r+0xb0>
 8000c38:	0023      	movs	r3, r4
 8000c3a:	6864      	ldr	r4, [r4, #4]
 8000c3c:	e7a6      	b.n	8000b8c <_malloc_r+0x24>
 8000c3e:	9c00      	ldr	r4, [sp, #0]
 8000c40:	6863      	ldr	r3, [r4, #4]
 8000c42:	9300      	str	r3, [sp, #0]
 8000c44:	e7ad      	b.n	8000ba2 <_malloc_r+0x3a>
 8000c46:	001a      	movs	r2, r3
 8000c48:	685b      	ldr	r3, [r3, #4]
 8000c4a:	42a3      	cmp	r3, r4
 8000c4c:	d1fb      	bne.n	8000c46 <_malloc_r+0xde>
 8000c4e:	2300      	movs	r3, #0
 8000c50:	e7da      	b.n	8000c08 <_malloc_r+0xa0>
 8000c52:	230c      	movs	r3, #12
 8000c54:	0028      	movs	r0, r5
 8000c56:	602b      	str	r3, [r5, #0]
 8000c58:	f000 f80e 	bl	8000c78 <__malloc_unlock>
 8000c5c:	e7c6      	b.n	8000bec <_malloc_r+0x84>
 8000c5e:	6007      	str	r7, [r0, #0]
 8000c60:	e7da      	b.n	8000c18 <_malloc_r+0xb0>
 8000c62:	46c0      	nop			@ (mov r8, r8)
 8000c64:	200001cc 	.word	0x200001cc

08000c68 <__malloc_lock>:
 8000c68:	b510      	push	{r4, lr}
 8000c6a:	4802      	ldr	r0, [pc, #8]	@ (8000c74 <__malloc_lock+0xc>)
 8000c6c:	f7ff ff0d 	bl	8000a8a <__retarget_lock_acquire_recursive>
 8000c70:	bd10      	pop	{r4, pc}
 8000c72:	46c0      	nop			@ (mov r8, r8)
 8000c74:	200001c4 	.word	0x200001c4

08000c78 <__malloc_unlock>:
 8000c78:	b510      	push	{r4, lr}
 8000c7a:	4802      	ldr	r0, [pc, #8]	@ (8000c84 <__malloc_unlock+0xc>)
 8000c7c:	f7ff ff06 	bl	8000a8c <__retarget_lock_release_recursive>
 8000c80:	bd10      	pop	{r4, pc}
 8000c82:	46c0      	nop			@ (mov r8, r8)
 8000c84:	200001c4 	.word	0x200001c4

08000c88 <__sfputc_r>:
 8000c88:	6893      	ldr	r3, [r2, #8]
 8000c8a:	b510      	push	{r4, lr}
 8000c8c:	3b01      	subs	r3, #1
 8000c8e:	6093      	str	r3, [r2, #8]
 8000c90:	2b00      	cmp	r3, #0
 8000c92:	da04      	bge.n	8000c9e <__sfputc_r+0x16>
 8000c94:	6994      	ldr	r4, [r2, #24]
 8000c96:	42a3      	cmp	r3, r4
 8000c98:	db07      	blt.n	8000caa <__sfputc_r+0x22>
 8000c9a:	290a      	cmp	r1, #10
 8000c9c:	d005      	beq.n	8000caa <__sfputc_r+0x22>
 8000c9e:	6813      	ldr	r3, [r2, #0]
 8000ca0:	1c58      	adds	r0, r3, #1
 8000ca2:	6010      	str	r0, [r2, #0]
 8000ca4:	7019      	strb	r1, [r3, #0]
 8000ca6:	0008      	movs	r0, r1
 8000ca8:	bd10      	pop	{r4, pc}
 8000caa:	f000 fb5e 	bl	800136a <__swbuf_r>
 8000cae:	0001      	movs	r1, r0
 8000cb0:	e7f9      	b.n	8000ca6 <__sfputc_r+0x1e>

08000cb2 <__sfputs_r>:
 8000cb2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cb4:	0006      	movs	r6, r0
 8000cb6:	000f      	movs	r7, r1
 8000cb8:	0014      	movs	r4, r2
 8000cba:	18d5      	adds	r5, r2, r3
 8000cbc:	42ac      	cmp	r4, r5
 8000cbe:	d101      	bne.n	8000cc4 <__sfputs_r+0x12>
 8000cc0:	2000      	movs	r0, #0
 8000cc2:	e007      	b.n	8000cd4 <__sfputs_r+0x22>
 8000cc4:	7821      	ldrb	r1, [r4, #0]
 8000cc6:	003a      	movs	r2, r7
 8000cc8:	0030      	movs	r0, r6
 8000cca:	f7ff ffdd 	bl	8000c88 <__sfputc_r>
 8000cce:	3401      	adds	r4, #1
 8000cd0:	1c43      	adds	r3, r0, #1
 8000cd2:	d1f3      	bne.n	8000cbc <__sfputs_r+0xa>
 8000cd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000cd8 <_vfiprintf_r>:
 8000cd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000cda:	b0a1      	sub	sp, #132	@ 0x84
 8000cdc:	000f      	movs	r7, r1
 8000cde:	0015      	movs	r5, r2
 8000ce0:	001e      	movs	r6, r3
 8000ce2:	9003      	str	r0, [sp, #12]
 8000ce4:	2800      	cmp	r0, #0
 8000ce6:	d004      	beq.n	8000cf2 <_vfiprintf_r+0x1a>
 8000ce8:	6a03      	ldr	r3, [r0, #32]
 8000cea:	2b00      	cmp	r3, #0
 8000cec:	d101      	bne.n	8000cf2 <_vfiprintf_r+0x1a>
 8000cee:	f7ff fdbb 	bl	8000868 <__sinit>
 8000cf2:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8000cf4:	07db      	lsls	r3, r3, #31
 8000cf6:	d405      	bmi.n	8000d04 <_vfiprintf_r+0x2c>
 8000cf8:	89bb      	ldrh	r3, [r7, #12]
 8000cfa:	059b      	lsls	r3, r3, #22
 8000cfc:	d402      	bmi.n	8000d04 <_vfiprintf_r+0x2c>
 8000cfe:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8000d00:	f7ff fec3 	bl	8000a8a <__retarget_lock_acquire_recursive>
 8000d04:	89bb      	ldrh	r3, [r7, #12]
 8000d06:	071b      	lsls	r3, r3, #28
 8000d08:	d502      	bpl.n	8000d10 <_vfiprintf_r+0x38>
 8000d0a:	693b      	ldr	r3, [r7, #16]
 8000d0c:	2b00      	cmp	r3, #0
 8000d0e:	d113      	bne.n	8000d38 <_vfiprintf_r+0x60>
 8000d10:	0039      	movs	r1, r7
 8000d12:	9803      	ldr	r0, [sp, #12]
 8000d14:	f000 fb6c 	bl	80013f0 <__swsetup_r>
 8000d18:	2800      	cmp	r0, #0
 8000d1a:	d00d      	beq.n	8000d38 <_vfiprintf_r+0x60>
 8000d1c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8000d1e:	07db      	lsls	r3, r3, #31
 8000d20:	d503      	bpl.n	8000d2a <_vfiprintf_r+0x52>
 8000d22:	2001      	movs	r0, #1
 8000d24:	4240      	negs	r0, r0
 8000d26:	b021      	add	sp, #132	@ 0x84
 8000d28:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d2a:	89bb      	ldrh	r3, [r7, #12]
 8000d2c:	059b      	lsls	r3, r3, #22
 8000d2e:	d4f8      	bmi.n	8000d22 <_vfiprintf_r+0x4a>
 8000d30:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8000d32:	f7ff feab 	bl	8000a8c <__retarget_lock_release_recursive>
 8000d36:	e7f4      	b.n	8000d22 <_vfiprintf_r+0x4a>
 8000d38:	2300      	movs	r3, #0
 8000d3a:	ac08      	add	r4, sp, #32
 8000d3c:	6163      	str	r3, [r4, #20]
 8000d3e:	3320      	adds	r3, #32
 8000d40:	7663      	strb	r3, [r4, #25]
 8000d42:	3310      	adds	r3, #16
 8000d44:	76a3      	strb	r3, [r4, #26]
 8000d46:	9607      	str	r6, [sp, #28]
 8000d48:	002e      	movs	r6, r5
 8000d4a:	7833      	ldrb	r3, [r6, #0]
 8000d4c:	2b00      	cmp	r3, #0
 8000d4e:	d001      	beq.n	8000d54 <_vfiprintf_r+0x7c>
 8000d50:	2b25      	cmp	r3, #37	@ 0x25
 8000d52:	d148      	bne.n	8000de6 <_vfiprintf_r+0x10e>
 8000d54:	1b73      	subs	r3, r6, r5
 8000d56:	9305      	str	r3, [sp, #20]
 8000d58:	42ae      	cmp	r6, r5
 8000d5a:	d00b      	beq.n	8000d74 <_vfiprintf_r+0x9c>
 8000d5c:	002a      	movs	r2, r5
 8000d5e:	0039      	movs	r1, r7
 8000d60:	9803      	ldr	r0, [sp, #12]
 8000d62:	f7ff ffa6 	bl	8000cb2 <__sfputs_r>
 8000d66:	3001      	adds	r0, #1
 8000d68:	d100      	bne.n	8000d6c <_vfiprintf_r+0x94>
 8000d6a:	e0ae      	b.n	8000eca <_vfiprintf_r+0x1f2>
 8000d6c:	6963      	ldr	r3, [r4, #20]
 8000d6e:	9a05      	ldr	r2, [sp, #20]
 8000d70:	189b      	adds	r3, r3, r2
 8000d72:	6163      	str	r3, [r4, #20]
 8000d74:	7833      	ldrb	r3, [r6, #0]
 8000d76:	2b00      	cmp	r3, #0
 8000d78:	d100      	bne.n	8000d7c <_vfiprintf_r+0xa4>
 8000d7a:	e0a6      	b.n	8000eca <_vfiprintf_r+0x1f2>
 8000d7c:	2201      	movs	r2, #1
 8000d7e:	2300      	movs	r3, #0
 8000d80:	4252      	negs	r2, r2
 8000d82:	6062      	str	r2, [r4, #4]
 8000d84:	a904      	add	r1, sp, #16
 8000d86:	3254      	adds	r2, #84	@ 0x54
 8000d88:	1852      	adds	r2, r2, r1
 8000d8a:	1c75      	adds	r5, r6, #1
 8000d8c:	6023      	str	r3, [r4, #0]
 8000d8e:	60e3      	str	r3, [r4, #12]
 8000d90:	60a3      	str	r3, [r4, #8]
 8000d92:	7013      	strb	r3, [r2, #0]
 8000d94:	65a3      	str	r3, [r4, #88]	@ 0x58
 8000d96:	4b59      	ldr	r3, [pc, #356]	@ (8000efc <_vfiprintf_r+0x224>)
 8000d98:	2205      	movs	r2, #5
 8000d9a:	0018      	movs	r0, r3
 8000d9c:	7829      	ldrb	r1, [r5, #0]
 8000d9e:	9305      	str	r3, [sp, #20]
 8000da0:	f000 fb96 	bl	80014d0 <memchr>
 8000da4:	1c6e      	adds	r6, r5, #1
 8000da6:	2800      	cmp	r0, #0
 8000da8:	d11f      	bne.n	8000dea <_vfiprintf_r+0x112>
 8000daa:	6822      	ldr	r2, [r4, #0]
 8000dac:	06d3      	lsls	r3, r2, #27
 8000dae:	d504      	bpl.n	8000dba <_vfiprintf_r+0xe2>
 8000db0:	2353      	movs	r3, #83	@ 0x53
 8000db2:	a904      	add	r1, sp, #16
 8000db4:	185b      	adds	r3, r3, r1
 8000db6:	2120      	movs	r1, #32
 8000db8:	7019      	strb	r1, [r3, #0]
 8000dba:	0713      	lsls	r3, r2, #28
 8000dbc:	d504      	bpl.n	8000dc8 <_vfiprintf_r+0xf0>
 8000dbe:	2353      	movs	r3, #83	@ 0x53
 8000dc0:	a904      	add	r1, sp, #16
 8000dc2:	185b      	adds	r3, r3, r1
 8000dc4:	212b      	movs	r1, #43	@ 0x2b
 8000dc6:	7019      	strb	r1, [r3, #0]
 8000dc8:	782b      	ldrb	r3, [r5, #0]
 8000dca:	2b2a      	cmp	r3, #42	@ 0x2a
 8000dcc:	d016      	beq.n	8000dfc <_vfiprintf_r+0x124>
 8000dce:	002e      	movs	r6, r5
 8000dd0:	2100      	movs	r1, #0
 8000dd2:	200a      	movs	r0, #10
 8000dd4:	68e3      	ldr	r3, [r4, #12]
 8000dd6:	7832      	ldrb	r2, [r6, #0]
 8000dd8:	1c75      	adds	r5, r6, #1
 8000dda:	3a30      	subs	r2, #48	@ 0x30
 8000ddc:	2a09      	cmp	r2, #9
 8000dde:	d950      	bls.n	8000e82 <_vfiprintf_r+0x1aa>
 8000de0:	2900      	cmp	r1, #0
 8000de2:	d111      	bne.n	8000e08 <_vfiprintf_r+0x130>
 8000de4:	e017      	b.n	8000e16 <_vfiprintf_r+0x13e>
 8000de6:	3601      	adds	r6, #1
 8000de8:	e7af      	b.n	8000d4a <_vfiprintf_r+0x72>
 8000dea:	9b05      	ldr	r3, [sp, #20]
 8000dec:	6822      	ldr	r2, [r4, #0]
 8000dee:	1ac0      	subs	r0, r0, r3
 8000df0:	2301      	movs	r3, #1
 8000df2:	4083      	lsls	r3, r0
 8000df4:	4313      	orrs	r3, r2
 8000df6:	0035      	movs	r5, r6
 8000df8:	6023      	str	r3, [r4, #0]
 8000dfa:	e7cc      	b.n	8000d96 <_vfiprintf_r+0xbe>
 8000dfc:	9b07      	ldr	r3, [sp, #28]
 8000dfe:	1d19      	adds	r1, r3, #4
 8000e00:	681b      	ldr	r3, [r3, #0]
 8000e02:	9107      	str	r1, [sp, #28]
 8000e04:	2b00      	cmp	r3, #0
 8000e06:	db01      	blt.n	8000e0c <_vfiprintf_r+0x134>
 8000e08:	930b      	str	r3, [sp, #44]	@ 0x2c
 8000e0a:	e004      	b.n	8000e16 <_vfiprintf_r+0x13e>
 8000e0c:	425b      	negs	r3, r3
 8000e0e:	60e3      	str	r3, [r4, #12]
 8000e10:	2302      	movs	r3, #2
 8000e12:	4313      	orrs	r3, r2
 8000e14:	6023      	str	r3, [r4, #0]
 8000e16:	7833      	ldrb	r3, [r6, #0]
 8000e18:	2b2e      	cmp	r3, #46	@ 0x2e
 8000e1a:	d10c      	bne.n	8000e36 <_vfiprintf_r+0x15e>
 8000e1c:	7873      	ldrb	r3, [r6, #1]
 8000e1e:	2b2a      	cmp	r3, #42	@ 0x2a
 8000e20:	d134      	bne.n	8000e8c <_vfiprintf_r+0x1b4>
 8000e22:	9b07      	ldr	r3, [sp, #28]
 8000e24:	3602      	adds	r6, #2
 8000e26:	1d1a      	adds	r2, r3, #4
 8000e28:	681b      	ldr	r3, [r3, #0]
 8000e2a:	9207      	str	r2, [sp, #28]
 8000e2c:	2b00      	cmp	r3, #0
 8000e2e:	da01      	bge.n	8000e34 <_vfiprintf_r+0x15c>
 8000e30:	2301      	movs	r3, #1
 8000e32:	425b      	negs	r3, r3
 8000e34:	9309      	str	r3, [sp, #36]	@ 0x24
 8000e36:	4d32      	ldr	r5, [pc, #200]	@ (8000f00 <_vfiprintf_r+0x228>)
 8000e38:	2203      	movs	r2, #3
 8000e3a:	0028      	movs	r0, r5
 8000e3c:	7831      	ldrb	r1, [r6, #0]
 8000e3e:	f000 fb47 	bl	80014d0 <memchr>
 8000e42:	2800      	cmp	r0, #0
 8000e44:	d006      	beq.n	8000e54 <_vfiprintf_r+0x17c>
 8000e46:	2340      	movs	r3, #64	@ 0x40
 8000e48:	1b40      	subs	r0, r0, r5
 8000e4a:	4083      	lsls	r3, r0
 8000e4c:	6822      	ldr	r2, [r4, #0]
 8000e4e:	3601      	adds	r6, #1
 8000e50:	4313      	orrs	r3, r2
 8000e52:	6023      	str	r3, [r4, #0]
 8000e54:	7831      	ldrb	r1, [r6, #0]
 8000e56:	2206      	movs	r2, #6
 8000e58:	482a      	ldr	r0, [pc, #168]	@ (8000f04 <_vfiprintf_r+0x22c>)
 8000e5a:	1c75      	adds	r5, r6, #1
 8000e5c:	7621      	strb	r1, [r4, #24]
 8000e5e:	f000 fb37 	bl	80014d0 <memchr>
 8000e62:	2800      	cmp	r0, #0
 8000e64:	d040      	beq.n	8000ee8 <_vfiprintf_r+0x210>
 8000e66:	4b28      	ldr	r3, [pc, #160]	@ (8000f08 <_vfiprintf_r+0x230>)
 8000e68:	2b00      	cmp	r3, #0
 8000e6a:	d122      	bne.n	8000eb2 <_vfiprintf_r+0x1da>
 8000e6c:	2207      	movs	r2, #7
 8000e6e:	9b07      	ldr	r3, [sp, #28]
 8000e70:	3307      	adds	r3, #7
 8000e72:	4393      	bics	r3, r2
 8000e74:	3308      	adds	r3, #8
 8000e76:	9307      	str	r3, [sp, #28]
 8000e78:	6963      	ldr	r3, [r4, #20]
 8000e7a:	9a04      	ldr	r2, [sp, #16]
 8000e7c:	189b      	adds	r3, r3, r2
 8000e7e:	6163      	str	r3, [r4, #20]
 8000e80:	e762      	b.n	8000d48 <_vfiprintf_r+0x70>
 8000e82:	4343      	muls	r3, r0
 8000e84:	002e      	movs	r6, r5
 8000e86:	2101      	movs	r1, #1
 8000e88:	189b      	adds	r3, r3, r2
 8000e8a:	e7a4      	b.n	8000dd6 <_vfiprintf_r+0xfe>
 8000e8c:	2300      	movs	r3, #0
 8000e8e:	200a      	movs	r0, #10
 8000e90:	0019      	movs	r1, r3
 8000e92:	3601      	adds	r6, #1
 8000e94:	6063      	str	r3, [r4, #4]
 8000e96:	7832      	ldrb	r2, [r6, #0]
 8000e98:	1c75      	adds	r5, r6, #1
 8000e9a:	3a30      	subs	r2, #48	@ 0x30
 8000e9c:	2a09      	cmp	r2, #9
 8000e9e:	d903      	bls.n	8000ea8 <_vfiprintf_r+0x1d0>
 8000ea0:	2b00      	cmp	r3, #0
 8000ea2:	d0c8      	beq.n	8000e36 <_vfiprintf_r+0x15e>
 8000ea4:	9109      	str	r1, [sp, #36]	@ 0x24
 8000ea6:	e7c6      	b.n	8000e36 <_vfiprintf_r+0x15e>
 8000ea8:	4341      	muls	r1, r0
 8000eaa:	002e      	movs	r6, r5
 8000eac:	2301      	movs	r3, #1
 8000eae:	1889      	adds	r1, r1, r2
 8000eb0:	e7f1      	b.n	8000e96 <_vfiprintf_r+0x1be>
 8000eb2:	aa07      	add	r2, sp, #28
 8000eb4:	9200      	str	r2, [sp, #0]
 8000eb6:	0021      	movs	r1, r4
 8000eb8:	003a      	movs	r2, r7
 8000eba:	4b14      	ldr	r3, [pc, #80]	@ (8000f0c <_vfiprintf_r+0x234>)
 8000ebc:	9803      	ldr	r0, [sp, #12]
 8000ebe:	e000      	b.n	8000ec2 <_vfiprintf_r+0x1ea>
 8000ec0:	bf00      	nop
 8000ec2:	9004      	str	r0, [sp, #16]
 8000ec4:	9b04      	ldr	r3, [sp, #16]
 8000ec6:	3301      	adds	r3, #1
 8000ec8:	d1d6      	bne.n	8000e78 <_vfiprintf_r+0x1a0>
 8000eca:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8000ecc:	07db      	lsls	r3, r3, #31
 8000ece:	d405      	bmi.n	8000edc <_vfiprintf_r+0x204>
 8000ed0:	89bb      	ldrh	r3, [r7, #12]
 8000ed2:	059b      	lsls	r3, r3, #22
 8000ed4:	d402      	bmi.n	8000edc <_vfiprintf_r+0x204>
 8000ed6:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8000ed8:	f7ff fdd8 	bl	8000a8c <__retarget_lock_release_recursive>
 8000edc:	89bb      	ldrh	r3, [r7, #12]
 8000ede:	065b      	lsls	r3, r3, #25
 8000ee0:	d500      	bpl.n	8000ee4 <_vfiprintf_r+0x20c>
 8000ee2:	e71e      	b.n	8000d22 <_vfiprintf_r+0x4a>
 8000ee4:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8000ee6:	e71e      	b.n	8000d26 <_vfiprintf_r+0x4e>
 8000ee8:	aa07      	add	r2, sp, #28
 8000eea:	9200      	str	r2, [sp, #0]
 8000eec:	0021      	movs	r1, r4
 8000eee:	003a      	movs	r2, r7
 8000ef0:	4b06      	ldr	r3, [pc, #24]	@ (8000f0c <_vfiprintf_r+0x234>)
 8000ef2:	9803      	ldr	r0, [sp, #12]
 8000ef4:	f000 f87c 	bl	8000ff0 <_printf_i>
 8000ef8:	e7e3      	b.n	8000ec2 <_vfiprintf_r+0x1ea>
 8000efa:	46c0      	nop			@ (mov r8, r8)
 8000efc:	08001657 	.word	0x08001657
 8000f00:	0800165d 	.word	0x0800165d
 8000f04:	08001661 	.word	0x08001661
 8000f08:	00000000 	.word	0x00000000
 8000f0c:	08000cb3 	.word	0x08000cb3

08000f10 <_printf_common>:
 8000f10:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000f12:	0016      	movs	r6, r2
 8000f14:	9301      	str	r3, [sp, #4]
 8000f16:	688a      	ldr	r2, [r1, #8]
 8000f18:	690b      	ldr	r3, [r1, #16]
 8000f1a:	000c      	movs	r4, r1
 8000f1c:	9000      	str	r0, [sp, #0]
 8000f1e:	4293      	cmp	r3, r2
 8000f20:	da00      	bge.n	8000f24 <_printf_common+0x14>
 8000f22:	0013      	movs	r3, r2
 8000f24:	0022      	movs	r2, r4
 8000f26:	6033      	str	r3, [r6, #0]
 8000f28:	3243      	adds	r2, #67	@ 0x43
 8000f2a:	7812      	ldrb	r2, [r2, #0]
 8000f2c:	2a00      	cmp	r2, #0
 8000f2e:	d001      	beq.n	8000f34 <_printf_common+0x24>
 8000f30:	3301      	adds	r3, #1
 8000f32:	6033      	str	r3, [r6, #0]
 8000f34:	6823      	ldr	r3, [r4, #0]
 8000f36:	069b      	lsls	r3, r3, #26
 8000f38:	d502      	bpl.n	8000f40 <_printf_common+0x30>
 8000f3a:	6833      	ldr	r3, [r6, #0]
 8000f3c:	3302      	adds	r3, #2
 8000f3e:	6033      	str	r3, [r6, #0]
 8000f40:	6822      	ldr	r2, [r4, #0]
 8000f42:	2306      	movs	r3, #6
 8000f44:	0015      	movs	r5, r2
 8000f46:	401d      	ands	r5, r3
 8000f48:	421a      	tst	r2, r3
 8000f4a:	d027      	beq.n	8000f9c <_printf_common+0x8c>
 8000f4c:	0023      	movs	r3, r4
 8000f4e:	3343      	adds	r3, #67	@ 0x43
 8000f50:	781b      	ldrb	r3, [r3, #0]
 8000f52:	1e5a      	subs	r2, r3, #1
 8000f54:	4193      	sbcs	r3, r2
 8000f56:	6822      	ldr	r2, [r4, #0]
 8000f58:	0692      	lsls	r2, r2, #26
 8000f5a:	d430      	bmi.n	8000fbe <_printf_common+0xae>
 8000f5c:	0022      	movs	r2, r4
 8000f5e:	9901      	ldr	r1, [sp, #4]
 8000f60:	9800      	ldr	r0, [sp, #0]
 8000f62:	9d08      	ldr	r5, [sp, #32]
 8000f64:	3243      	adds	r2, #67	@ 0x43
 8000f66:	47a8      	blx	r5
 8000f68:	3001      	adds	r0, #1
 8000f6a:	d025      	beq.n	8000fb8 <_printf_common+0xa8>
 8000f6c:	2206      	movs	r2, #6
 8000f6e:	6823      	ldr	r3, [r4, #0]
 8000f70:	2500      	movs	r5, #0
 8000f72:	4013      	ands	r3, r2
 8000f74:	2b04      	cmp	r3, #4
 8000f76:	d105      	bne.n	8000f84 <_printf_common+0x74>
 8000f78:	6833      	ldr	r3, [r6, #0]
 8000f7a:	68e5      	ldr	r5, [r4, #12]
 8000f7c:	1aed      	subs	r5, r5, r3
 8000f7e:	43eb      	mvns	r3, r5
 8000f80:	17db      	asrs	r3, r3, #31
 8000f82:	401d      	ands	r5, r3
 8000f84:	68a3      	ldr	r3, [r4, #8]
 8000f86:	6922      	ldr	r2, [r4, #16]
 8000f88:	4293      	cmp	r3, r2
 8000f8a:	dd01      	ble.n	8000f90 <_printf_common+0x80>
 8000f8c:	1a9b      	subs	r3, r3, r2
 8000f8e:	18ed      	adds	r5, r5, r3
 8000f90:	2600      	movs	r6, #0
 8000f92:	42b5      	cmp	r5, r6
 8000f94:	d120      	bne.n	8000fd8 <_printf_common+0xc8>
 8000f96:	2000      	movs	r0, #0
 8000f98:	e010      	b.n	8000fbc <_printf_common+0xac>
 8000f9a:	3501      	adds	r5, #1
 8000f9c:	68e3      	ldr	r3, [r4, #12]
 8000f9e:	6832      	ldr	r2, [r6, #0]
 8000fa0:	1a9b      	subs	r3, r3, r2
 8000fa2:	42ab      	cmp	r3, r5
 8000fa4:	ddd2      	ble.n	8000f4c <_printf_common+0x3c>
 8000fa6:	0022      	movs	r2, r4
 8000fa8:	2301      	movs	r3, #1
 8000faa:	9901      	ldr	r1, [sp, #4]
 8000fac:	9800      	ldr	r0, [sp, #0]
 8000fae:	9f08      	ldr	r7, [sp, #32]
 8000fb0:	3219      	adds	r2, #25
 8000fb2:	47b8      	blx	r7
 8000fb4:	3001      	adds	r0, #1
 8000fb6:	d1f0      	bne.n	8000f9a <_printf_common+0x8a>
 8000fb8:	2001      	movs	r0, #1
 8000fba:	4240      	negs	r0, r0
 8000fbc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000fbe:	2030      	movs	r0, #48	@ 0x30
 8000fc0:	18e1      	adds	r1, r4, r3
 8000fc2:	3143      	adds	r1, #67	@ 0x43
 8000fc4:	7008      	strb	r0, [r1, #0]
 8000fc6:	0021      	movs	r1, r4
 8000fc8:	1c5a      	adds	r2, r3, #1
 8000fca:	3145      	adds	r1, #69	@ 0x45
 8000fcc:	7809      	ldrb	r1, [r1, #0]
 8000fce:	18a2      	adds	r2, r4, r2
 8000fd0:	3243      	adds	r2, #67	@ 0x43
 8000fd2:	3302      	adds	r3, #2
 8000fd4:	7011      	strb	r1, [r2, #0]
 8000fd6:	e7c1      	b.n	8000f5c <_printf_common+0x4c>
 8000fd8:	0022      	movs	r2, r4
 8000fda:	2301      	movs	r3, #1
 8000fdc:	9901      	ldr	r1, [sp, #4]
 8000fde:	9800      	ldr	r0, [sp, #0]
 8000fe0:	9f08      	ldr	r7, [sp, #32]
 8000fe2:	321a      	adds	r2, #26
 8000fe4:	47b8      	blx	r7
 8000fe6:	3001      	adds	r0, #1
 8000fe8:	d0e6      	beq.n	8000fb8 <_printf_common+0xa8>
 8000fea:	3601      	adds	r6, #1
 8000fec:	e7d1      	b.n	8000f92 <_printf_common+0x82>
	...

08000ff0 <_printf_i>:
 8000ff0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000ff2:	b08b      	sub	sp, #44	@ 0x2c
 8000ff4:	9206      	str	r2, [sp, #24]
 8000ff6:	000a      	movs	r2, r1
 8000ff8:	3243      	adds	r2, #67	@ 0x43
 8000ffa:	9307      	str	r3, [sp, #28]
 8000ffc:	9005      	str	r0, [sp, #20]
 8000ffe:	9203      	str	r2, [sp, #12]
 8001000:	7e0a      	ldrb	r2, [r1, #24]
 8001002:	000c      	movs	r4, r1
 8001004:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8001006:	2a78      	cmp	r2, #120	@ 0x78
 8001008:	d809      	bhi.n	800101e <_printf_i+0x2e>
 800100a:	2a62      	cmp	r2, #98	@ 0x62
 800100c:	d80b      	bhi.n	8001026 <_printf_i+0x36>
 800100e:	2a00      	cmp	r2, #0
 8001010:	d100      	bne.n	8001014 <_printf_i+0x24>
 8001012:	e0ba      	b.n	800118a <_printf_i+0x19a>
 8001014:	497a      	ldr	r1, [pc, #488]	@ (8001200 <_printf_i+0x210>)
 8001016:	9104      	str	r1, [sp, #16]
 8001018:	2a58      	cmp	r2, #88	@ 0x58
 800101a:	d100      	bne.n	800101e <_printf_i+0x2e>
 800101c:	e08e      	b.n	800113c <_printf_i+0x14c>
 800101e:	0025      	movs	r5, r4
 8001020:	3542      	adds	r5, #66	@ 0x42
 8001022:	702a      	strb	r2, [r5, #0]
 8001024:	e022      	b.n	800106c <_printf_i+0x7c>
 8001026:	0010      	movs	r0, r2
 8001028:	3863      	subs	r0, #99	@ 0x63
 800102a:	2815      	cmp	r0, #21
 800102c:	d8f7      	bhi.n	800101e <_printf_i+0x2e>
 800102e:	f7ff f86b 	bl	8000108 <__gnu_thumb1_case_shi>
 8001032:	0016      	.short	0x0016
 8001034:	fff6001f 	.word	0xfff6001f
 8001038:	fff6fff6 	.word	0xfff6fff6
 800103c:	001ffff6 	.word	0x001ffff6
 8001040:	fff6fff6 	.word	0xfff6fff6
 8001044:	fff6fff6 	.word	0xfff6fff6
 8001048:	0036009f 	.word	0x0036009f
 800104c:	fff6007e 	.word	0xfff6007e
 8001050:	00b0fff6 	.word	0x00b0fff6
 8001054:	0036fff6 	.word	0x0036fff6
 8001058:	fff6fff6 	.word	0xfff6fff6
 800105c:	0082      	.short	0x0082
 800105e:	0025      	movs	r5, r4
 8001060:	681a      	ldr	r2, [r3, #0]
 8001062:	3542      	adds	r5, #66	@ 0x42
 8001064:	1d11      	adds	r1, r2, #4
 8001066:	6019      	str	r1, [r3, #0]
 8001068:	6813      	ldr	r3, [r2, #0]
 800106a:	702b      	strb	r3, [r5, #0]
 800106c:	2301      	movs	r3, #1
 800106e:	e09e      	b.n	80011ae <_printf_i+0x1be>
 8001070:	6818      	ldr	r0, [r3, #0]
 8001072:	6809      	ldr	r1, [r1, #0]
 8001074:	1d02      	adds	r2, r0, #4
 8001076:	060d      	lsls	r5, r1, #24
 8001078:	d50b      	bpl.n	8001092 <_printf_i+0xa2>
 800107a:	6806      	ldr	r6, [r0, #0]
 800107c:	601a      	str	r2, [r3, #0]
 800107e:	2e00      	cmp	r6, #0
 8001080:	da03      	bge.n	800108a <_printf_i+0x9a>
 8001082:	232d      	movs	r3, #45	@ 0x2d
 8001084:	9a03      	ldr	r2, [sp, #12]
 8001086:	4276      	negs	r6, r6
 8001088:	7013      	strb	r3, [r2, #0]
 800108a:	4b5d      	ldr	r3, [pc, #372]	@ (8001200 <_printf_i+0x210>)
 800108c:	270a      	movs	r7, #10
 800108e:	9304      	str	r3, [sp, #16]
 8001090:	e018      	b.n	80010c4 <_printf_i+0xd4>
 8001092:	6806      	ldr	r6, [r0, #0]
 8001094:	601a      	str	r2, [r3, #0]
 8001096:	0649      	lsls	r1, r1, #25
 8001098:	d5f1      	bpl.n	800107e <_printf_i+0x8e>
 800109a:	b236      	sxth	r6, r6
 800109c:	e7ef      	b.n	800107e <_printf_i+0x8e>
 800109e:	6808      	ldr	r0, [r1, #0]
 80010a0:	6819      	ldr	r1, [r3, #0]
 80010a2:	c940      	ldmia	r1!, {r6}
 80010a4:	0605      	lsls	r5, r0, #24
 80010a6:	d402      	bmi.n	80010ae <_printf_i+0xbe>
 80010a8:	0640      	lsls	r0, r0, #25
 80010aa:	d500      	bpl.n	80010ae <_printf_i+0xbe>
 80010ac:	b2b6      	uxth	r6, r6
 80010ae:	6019      	str	r1, [r3, #0]
 80010b0:	4b53      	ldr	r3, [pc, #332]	@ (8001200 <_printf_i+0x210>)
 80010b2:	270a      	movs	r7, #10
 80010b4:	9304      	str	r3, [sp, #16]
 80010b6:	2a6f      	cmp	r2, #111	@ 0x6f
 80010b8:	d100      	bne.n	80010bc <_printf_i+0xcc>
 80010ba:	3f02      	subs	r7, #2
 80010bc:	0023      	movs	r3, r4
 80010be:	2200      	movs	r2, #0
 80010c0:	3343      	adds	r3, #67	@ 0x43
 80010c2:	701a      	strb	r2, [r3, #0]
 80010c4:	6863      	ldr	r3, [r4, #4]
 80010c6:	60a3      	str	r3, [r4, #8]
 80010c8:	2b00      	cmp	r3, #0
 80010ca:	db06      	blt.n	80010da <_printf_i+0xea>
 80010cc:	2104      	movs	r1, #4
 80010ce:	6822      	ldr	r2, [r4, #0]
 80010d0:	9d03      	ldr	r5, [sp, #12]
 80010d2:	438a      	bics	r2, r1
 80010d4:	6022      	str	r2, [r4, #0]
 80010d6:	4333      	orrs	r3, r6
 80010d8:	d00c      	beq.n	80010f4 <_printf_i+0x104>
 80010da:	9d03      	ldr	r5, [sp, #12]
 80010dc:	0030      	movs	r0, r6
 80010de:	0039      	movs	r1, r7
 80010e0:	f7ff f8a2 	bl	8000228 <__aeabi_uidivmod>
 80010e4:	9b04      	ldr	r3, [sp, #16]
 80010e6:	3d01      	subs	r5, #1
 80010e8:	5c5b      	ldrb	r3, [r3, r1]
 80010ea:	702b      	strb	r3, [r5, #0]
 80010ec:	0033      	movs	r3, r6
 80010ee:	0006      	movs	r6, r0
 80010f0:	429f      	cmp	r7, r3
 80010f2:	d9f3      	bls.n	80010dc <_printf_i+0xec>
 80010f4:	2f08      	cmp	r7, #8
 80010f6:	d109      	bne.n	800110c <_printf_i+0x11c>
 80010f8:	6823      	ldr	r3, [r4, #0]
 80010fa:	07db      	lsls	r3, r3, #31
 80010fc:	d506      	bpl.n	800110c <_printf_i+0x11c>
 80010fe:	6862      	ldr	r2, [r4, #4]
 8001100:	6923      	ldr	r3, [r4, #16]
 8001102:	429a      	cmp	r2, r3
 8001104:	dc02      	bgt.n	800110c <_printf_i+0x11c>
 8001106:	2330      	movs	r3, #48	@ 0x30
 8001108:	3d01      	subs	r5, #1
 800110a:	702b      	strb	r3, [r5, #0]
 800110c:	9b03      	ldr	r3, [sp, #12]
 800110e:	1b5b      	subs	r3, r3, r5
 8001110:	6123      	str	r3, [r4, #16]
 8001112:	9b07      	ldr	r3, [sp, #28]
 8001114:	0021      	movs	r1, r4
 8001116:	9300      	str	r3, [sp, #0]
 8001118:	9805      	ldr	r0, [sp, #20]
 800111a:	9b06      	ldr	r3, [sp, #24]
 800111c:	aa09      	add	r2, sp, #36	@ 0x24
 800111e:	f7ff fef7 	bl	8000f10 <_printf_common>
 8001122:	3001      	adds	r0, #1
 8001124:	d148      	bne.n	80011b8 <_printf_i+0x1c8>
 8001126:	2001      	movs	r0, #1
 8001128:	4240      	negs	r0, r0
 800112a:	b00b      	add	sp, #44	@ 0x2c
 800112c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800112e:	2220      	movs	r2, #32
 8001130:	6809      	ldr	r1, [r1, #0]
 8001132:	430a      	orrs	r2, r1
 8001134:	6022      	str	r2, [r4, #0]
 8001136:	2278      	movs	r2, #120	@ 0x78
 8001138:	4932      	ldr	r1, [pc, #200]	@ (8001204 <_printf_i+0x214>)
 800113a:	9104      	str	r1, [sp, #16]
 800113c:	0021      	movs	r1, r4
 800113e:	3145      	adds	r1, #69	@ 0x45
 8001140:	700a      	strb	r2, [r1, #0]
 8001142:	6819      	ldr	r1, [r3, #0]
 8001144:	6822      	ldr	r2, [r4, #0]
 8001146:	c940      	ldmia	r1!, {r6}
 8001148:	0610      	lsls	r0, r2, #24
 800114a:	d402      	bmi.n	8001152 <_printf_i+0x162>
 800114c:	0650      	lsls	r0, r2, #25
 800114e:	d500      	bpl.n	8001152 <_printf_i+0x162>
 8001150:	b2b6      	uxth	r6, r6
 8001152:	6019      	str	r1, [r3, #0]
 8001154:	07d3      	lsls	r3, r2, #31
 8001156:	d502      	bpl.n	800115e <_printf_i+0x16e>
 8001158:	2320      	movs	r3, #32
 800115a:	4313      	orrs	r3, r2
 800115c:	6023      	str	r3, [r4, #0]
 800115e:	2e00      	cmp	r6, #0
 8001160:	d001      	beq.n	8001166 <_printf_i+0x176>
 8001162:	2710      	movs	r7, #16
 8001164:	e7aa      	b.n	80010bc <_printf_i+0xcc>
 8001166:	2220      	movs	r2, #32
 8001168:	6823      	ldr	r3, [r4, #0]
 800116a:	4393      	bics	r3, r2
 800116c:	6023      	str	r3, [r4, #0]
 800116e:	e7f8      	b.n	8001162 <_printf_i+0x172>
 8001170:	681a      	ldr	r2, [r3, #0]
 8001172:	680d      	ldr	r5, [r1, #0]
 8001174:	1d10      	adds	r0, r2, #4
 8001176:	6949      	ldr	r1, [r1, #20]
 8001178:	6018      	str	r0, [r3, #0]
 800117a:	6813      	ldr	r3, [r2, #0]
 800117c:	062e      	lsls	r6, r5, #24
 800117e:	d501      	bpl.n	8001184 <_printf_i+0x194>
 8001180:	6019      	str	r1, [r3, #0]
 8001182:	e002      	b.n	800118a <_printf_i+0x19a>
 8001184:	066d      	lsls	r5, r5, #25
 8001186:	d5fb      	bpl.n	8001180 <_printf_i+0x190>
 8001188:	8019      	strh	r1, [r3, #0]
 800118a:	2300      	movs	r3, #0
 800118c:	9d03      	ldr	r5, [sp, #12]
 800118e:	6123      	str	r3, [r4, #16]
 8001190:	e7bf      	b.n	8001112 <_printf_i+0x122>
 8001192:	681a      	ldr	r2, [r3, #0]
 8001194:	1d11      	adds	r1, r2, #4
 8001196:	6019      	str	r1, [r3, #0]
 8001198:	6815      	ldr	r5, [r2, #0]
 800119a:	2100      	movs	r1, #0
 800119c:	0028      	movs	r0, r5
 800119e:	6862      	ldr	r2, [r4, #4]
 80011a0:	f000 f996 	bl	80014d0 <memchr>
 80011a4:	2800      	cmp	r0, #0
 80011a6:	d001      	beq.n	80011ac <_printf_i+0x1bc>
 80011a8:	1b40      	subs	r0, r0, r5
 80011aa:	6060      	str	r0, [r4, #4]
 80011ac:	6863      	ldr	r3, [r4, #4]
 80011ae:	6123      	str	r3, [r4, #16]
 80011b0:	2300      	movs	r3, #0
 80011b2:	9a03      	ldr	r2, [sp, #12]
 80011b4:	7013      	strb	r3, [r2, #0]
 80011b6:	e7ac      	b.n	8001112 <_printf_i+0x122>
 80011b8:	002a      	movs	r2, r5
 80011ba:	6923      	ldr	r3, [r4, #16]
 80011bc:	9906      	ldr	r1, [sp, #24]
 80011be:	9805      	ldr	r0, [sp, #20]
 80011c0:	9d07      	ldr	r5, [sp, #28]
 80011c2:	47a8      	blx	r5
 80011c4:	3001      	adds	r0, #1
 80011c6:	d0ae      	beq.n	8001126 <_printf_i+0x136>
 80011c8:	6823      	ldr	r3, [r4, #0]
 80011ca:	079b      	lsls	r3, r3, #30
 80011cc:	d415      	bmi.n	80011fa <_printf_i+0x20a>
 80011ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80011d0:	68e0      	ldr	r0, [r4, #12]
 80011d2:	4298      	cmp	r0, r3
 80011d4:	daa9      	bge.n	800112a <_printf_i+0x13a>
 80011d6:	0018      	movs	r0, r3
 80011d8:	e7a7      	b.n	800112a <_printf_i+0x13a>
 80011da:	0022      	movs	r2, r4
 80011dc:	2301      	movs	r3, #1
 80011de:	9906      	ldr	r1, [sp, #24]
 80011e0:	9805      	ldr	r0, [sp, #20]
 80011e2:	9e07      	ldr	r6, [sp, #28]
 80011e4:	3219      	adds	r2, #25
 80011e6:	47b0      	blx	r6
 80011e8:	3001      	adds	r0, #1
 80011ea:	d09c      	beq.n	8001126 <_printf_i+0x136>
 80011ec:	3501      	adds	r5, #1
 80011ee:	68e3      	ldr	r3, [r4, #12]
 80011f0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80011f2:	1a9b      	subs	r3, r3, r2
 80011f4:	42ab      	cmp	r3, r5
 80011f6:	dcf0      	bgt.n	80011da <_printf_i+0x1ea>
 80011f8:	e7e9      	b.n	80011ce <_printf_i+0x1de>
 80011fa:	2500      	movs	r5, #0
 80011fc:	e7f7      	b.n	80011ee <_printf_i+0x1fe>
 80011fe:	46c0      	nop			@ (mov r8, r8)
 8001200:	08001668 	.word	0x08001668
 8001204:	08001679 	.word	0x08001679

08001208 <__sflush_r>:
 8001208:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800120a:	220c      	movs	r2, #12
 800120c:	5e8b      	ldrsh	r3, [r1, r2]
 800120e:	0005      	movs	r5, r0
 8001210:	000c      	movs	r4, r1
 8001212:	071a      	lsls	r2, r3, #28
 8001214:	d456      	bmi.n	80012c4 <__sflush_r+0xbc>
 8001216:	684a      	ldr	r2, [r1, #4]
 8001218:	2a00      	cmp	r2, #0
 800121a:	dc02      	bgt.n	8001222 <__sflush_r+0x1a>
 800121c:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 800121e:	2a00      	cmp	r2, #0
 8001220:	dd4e      	ble.n	80012c0 <__sflush_r+0xb8>
 8001222:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8001224:	2f00      	cmp	r7, #0
 8001226:	d04b      	beq.n	80012c0 <__sflush_r+0xb8>
 8001228:	2200      	movs	r2, #0
 800122a:	2080      	movs	r0, #128	@ 0x80
 800122c:	682e      	ldr	r6, [r5, #0]
 800122e:	602a      	str	r2, [r5, #0]
 8001230:	001a      	movs	r2, r3
 8001232:	0140      	lsls	r0, r0, #5
 8001234:	6a21      	ldr	r1, [r4, #32]
 8001236:	4002      	ands	r2, r0
 8001238:	4203      	tst	r3, r0
 800123a:	d033      	beq.n	80012a4 <__sflush_r+0x9c>
 800123c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800123e:	89a3      	ldrh	r3, [r4, #12]
 8001240:	075b      	lsls	r3, r3, #29
 8001242:	d506      	bpl.n	8001252 <__sflush_r+0x4a>
 8001244:	6863      	ldr	r3, [r4, #4]
 8001246:	1ad2      	subs	r2, r2, r3
 8001248:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800124a:	2b00      	cmp	r3, #0
 800124c:	d001      	beq.n	8001252 <__sflush_r+0x4a>
 800124e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001250:	1ad2      	subs	r2, r2, r3
 8001252:	2300      	movs	r3, #0
 8001254:	0028      	movs	r0, r5
 8001256:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8001258:	6a21      	ldr	r1, [r4, #32]
 800125a:	47b8      	blx	r7
 800125c:	89a2      	ldrh	r2, [r4, #12]
 800125e:	1c43      	adds	r3, r0, #1
 8001260:	d106      	bne.n	8001270 <__sflush_r+0x68>
 8001262:	6829      	ldr	r1, [r5, #0]
 8001264:	291d      	cmp	r1, #29
 8001266:	d846      	bhi.n	80012f6 <__sflush_r+0xee>
 8001268:	4b29      	ldr	r3, [pc, #164]	@ (8001310 <__sflush_r+0x108>)
 800126a:	40cb      	lsrs	r3, r1
 800126c:	07db      	lsls	r3, r3, #31
 800126e:	d542      	bpl.n	80012f6 <__sflush_r+0xee>
 8001270:	2300      	movs	r3, #0
 8001272:	6063      	str	r3, [r4, #4]
 8001274:	6923      	ldr	r3, [r4, #16]
 8001276:	6023      	str	r3, [r4, #0]
 8001278:	04d2      	lsls	r2, r2, #19
 800127a:	d505      	bpl.n	8001288 <__sflush_r+0x80>
 800127c:	1c43      	adds	r3, r0, #1
 800127e:	d102      	bne.n	8001286 <__sflush_r+0x7e>
 8001280:	682b      	ldr	r3, [r5, #0]
 8001282:	2b00      	cmp	r3, #0
 8001284:	d100      	bne.n	8001288 <__sflush_r+0x80>
 8001286:	6560      	str	r0, [r4, #84]	@ 0x54
 8001288:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800128a:	602e      	str	r6, [r5, #0]
 800128c:	2900      	cmp	r1, #0
 800128e:	d017      	beq.n	80012c0 <__sflush_r+0xb8>
 8001290:	0023      	movs	r3, r4
 8001292:	3344      	adds	r3, #68	@ 0x44
 8001294:	4299      	cmp	r1, r3
 8001296:	d002      	beq.n	800129e <__sflush_r+0x96>
 8001298:	0028      	movs	r0, r5
 800129a:	f7ff fbf9 	bl	8000a90 <_free_r>
 800129e:	2300      	movs	r3, #0
 80012a0:	6363      	str	r3, [r4, #52]	@ 0x34
 80012a2:	e00d      	b.n	80012c0 <__sflush_r+0xb8>
 80012a4:	2301      	movs	r3, #1
 80012a6:	0028      	movs	r0, r5
 80012a8:	47b8      	blx	r7
 80012aa:	0002      	movs	r2, r0
 80012ac:	1c43      	adds	r3, r0, #1
 80012ae:	d1c6      	bne.n	800123e <__sflush_r+0x36>
 80012b0:	682b      	ldr	r3, [r5, #0]
 80012b2:	2b00      	cmp	r3, #0
 80012b4:	d0c3      	beq.n	800123e <__sflush_r+0x36>
 80012b6:	2b1d      	cmp	r3, #29
 80012b8:	d001      	beq.n	80012be <__sflush_r+0xb6>
 80012ba:	2b16      	cmp	r3, #22
 80012bc:	d11a      	bne.n	80012f4 <__sflush_r+0xec>
 80012be:	602e      	str	r6, [r5, #0]
 80012c0:	2000      	movs	r0, #0
 80012c2:	e01e      	b.n	8001302 <__sflush_r+0xfa>
 80012c4:	690e      	ldr	r6, [r1, #16]
 80012c6:	2e00      	cmp	r6, #0
 80012c8:	d0fa      	beq.n	80012c0 <__sflush_r+0xb8>
 80012ca:	680f      	ldr	r7, [r1, #0]
 80012cc:	600e      	str	r6, [r1, #0]
 80012ce:	1bba      	subs	r2, r7, r6
 80012d0:	9201      	str	r2, [sp, #4]
 80012d2:	2200      	movs	r2, #0
 80012d4:	079b      	lsls	r3, r3, #30
 80012d6:	d100      	bne.n	80012da <__sflush_r+0xd2>
 80012d8:	694a      	ldr	r2, [r1, #20]
 80012da:	60a2      	str	r2, [r4, #8]
 80012dc:	9b01      	ldr	r3, [sp, #4]
 80012de:	2b00      	cmp	r3, #0
 80012e0:	ddee      	ble.n	80012c0 <__sflush_r+0xb8>
 80012e2:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80012e4:	0032      	movs	r2, r6
 80012e6:	001f      	movs	r7, r3
 80012e8:	0028      	movs	r0, r5
 80012ea:	9b01      	ldr	r3, [sp, #4]
 80012ec:	6a21      	ldr	r1, [r4, #32]
 80012ee:	47b8      	blx	r7
 80012f0:	2800      	cmp	r0, #0
 80012f2:	dc07      	bgt.n	8001304 <__sflush_r+0xfc>
 80012f4:	89a2      	ldrh	r2, [r4, #12]
 80012f6:	2340      	movs	r3, #64	@ 0x40
 80012f8:	2001      	movs	r0, #1
 80012fa:	4313      	orrs	r3, r2
 80012fc:	b21b      	sxth	r3, r3
 80012fe:	81a3      	strh	r3, [r4, #12]
 8001300:	4240      	negs	r0, r0
 8001302:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8001304:	9b01      	ldr	r3, [sp, #4]
 8001306:	1836      	adds	r6, r6, r0
 8001308:	1a1b      	subs	r3, r3, r0
 800130a:	9301      	str	r3, [sp, #4]
 800130c:	e7e6      	b.n	80012dc <__sflush_r+0xd4>
 800130e:	46c0      	nop			@ (mov r8, r8)
 8001310:	20400001 	.word	0x20400001

08001314 <_fflush_r>:
 8001314:	690b      	ldr	r3, [r1, #16]
 8001316:	b570      	push	{r4, r5, r6, lr}
 8001318:	0005      	movs	r5, r0
 800131a:	000c      	movs	r4, r1
 800131c:	2b00      	cmp	r3, #0
 800131e:	d102      	bne.n	8001326 <_fflush_r+0x12>
 8001320:	2500      	movs	r5, #0
 8001322:	0028      	movs	r0, r5
 8001324:	bd70      	pop	{r4, r5, r6, pc}
 8001326:	2800      	cmp	r0, #0
 8001328:	d004      	beq.n	8001334 <_fflush_r+0x20>
 800132a:	6a03      	ldr	r3, [r0, #32]
 800132c:	2b00      	cmp	r3, #0
 800132e:	d101      	bne.n	8001334 <_fflush_r+0x20>
 8001330:	f7ff fa9a 	bl	8000868 <__sinit>
 8001334:	220c      	movs	r2, #12
 8001336:	5ea3      	ldrsh	r3, [r4, r2]
 8001338:	2b00      	cmp	r3, #0
 800133a:	d0f1      	beq.n	8001320 <_fflush_r+0xc>
 800133c:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800133e:	07d2      	lsls	r2, r2, #31
 8001340:	d404      	bmi.n	800134c <_fflush_r+0x38>
 8001342:	059b      	lsls	r3, r3, #22
 8001344:	d402      	bmi.n	800134c <_fflush_r+0x38>
 8001346:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001348:	f7ff fb9f 	bl	8000a8a <__retarget_lock_acquire_recursive>
 800134c:	0028      	movs	r0, r5
 800134e:	0021      	movs	r1, r4
 8001350:	f7ff ff5a 	bl	8001208 <__sflush_r>
 8001354:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001356:	0005      	movs	r5, r0
 8001358:	07db      	lsls	r3, r3, #31
 800135a:	d4e2      	bmi.n	8001322 <_fflush_r+0xe>
 800135c:	89a3      	ldrh	r3, [r4, #12]
 800135e:	059b      	lsls	r3, r3, #22
 8001360:	d4df      	bmi.n	8001322 <_fflush_r+0xe>
 8001362:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001364:	f7ff fb92 	bl	8000a8c <__retarget_lock_release_recursive>
 8001368:	e7db      	b.n	8001322 <_fflush_r+0xe>

0800136a <__swbuf_r>:
 800136a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800136c:	0006      	movs	r6, r0
 800136e:	000d      	movs	r5, r1
 8001370:	0014      	movs	r4, r2
 8001372:	2800      	cmp	r0, #0
 8001374:	d004      	beq.n	8001380 <__swbuf_r+0x16>
 8001376:	6a03      	ldr	r3, [r0, #32]
 8001378:	2b00      	cmp	r3, #0
 800137a:	d101      	bne.n	8001380 <__swbuf_r+0x16>
 800137c:	f7ff fa74 	bl	8000868 <__sinit>
 8001380:	69a3      	ldr	r3, [r4, #24]
 8001382:	60a3      	str	r3, [r4, #8]
 8001384:	89a3      	ldrh	r3, [r4, #12]
 8001386:	071b      	lsls	r3, r3, #28
 8001388:	d502      	bpl.n	8001390 <__swbuf_r+0x26>
 800138a:	6923      	ldr	r3, [r4, #16]
 800138c:	2b00      	cmp	r3, #0
 800138e:	d109      	bne.n	80013a4 <__swbuf_r+0x3a>
 8001390:	0021      	movs	r1, r4
 8001392:	0030      	movs	r0, r6
 8001394:	f000 f82c 	bl	80013f0 <__swsetup_r>
 8001398:	2800      	cmp	r0, #0
 800139a:	d003      	beq.n	80013a4 <__swbuf_r+0x3a>
 800139c:	2501      	movs	r5, #1
 800139e:	426d      	negs	r5, r5
 80013a0:	0028      	movs	r0, r5
 80013a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80013a4:	6923      	ldr	r3, [r4, #16]
 80013a6:	6820      	ldr	r0, [r4, #0]
 80013a8:	b2ef      	uxtb	r7, r5
 80013aa:	1ac0      	subs	r0, r0, r3
 80013ac:	6963      	ldr	r3, [r4, #20]
 80013ae:	b2ed      	uxtb	r5, r5
 80013b0:	4283      	cmp	r3, r0
 80013b2:	dc05      	bgt.n	80013c0 <__swbuf_r+0x56>
 80013b4:	0021      	movs	r1, r4
 80013b6:	0030      	movs	r0, r6
 80013b8:	f7ff ffac 	bl	8001314 <_fflush_r>
 80013bc:	2800      	cmp	r0, #0
 80013be:	d1ed      	bne.n	800139c <__swbuf_r+0x32>
 80013c0:	68a3      	ldr	r3, [r4, #8]
 80013c2:	3001      	adds	r0, #1
 80013c4:	3b01      	subs	r3, #1
 80013c6:	60a3      	str	r3, [r4, #8]
 80013c8:	6823      	ldr	r3, [r4, #0]
 80013ca:	1c5a      	adds	r2, r3, #1
 80013cc:	6022      	str	r2, [r4, #0]
 80013ce:	701f      	strb	r7, [r3, #0]
 80013d0:	6963      	ldr	r3, [r4, #20]
 80013d2:	4283      	cmp	r3, r0
 80013d4:	d004      	beq.n	80013e0 <__swbuf_r+0x76>
 80013d6:	89a3      	ldrh	r3, [r4, #12]
 80013d8:	07db      	lsls	r3, r3, #31
 80013da:	d5e1      	bpl.n	80013a0 <__swbuf_r+0x36>
 80013dc:	2d0a      	cmp	r5, #10
 80013de:	d1df      	bne.n	80013a0 <__swbuf_r+0x36>
 80013e0:	0021      	movs	r1, r4
 80013e2:	0030      	movs	r0, r6
 80013e4:	f7ff ff96 	bl	8001314 <_fflush_r>
 80013e8:	2800      	cmp	r0, #0
 80013ea:	d0d9      	beq.n	80013a0 <__swbuf_r+0x36>
 80013ec:	e7d6      	b.n	800139c <__swbuf_r+0x32>
	...

080013f0 <__swsetup_r>:
 80013f0:	4b2d      	ldr	r3, [pc, #180]	@ (80014a8 <__swsetup_r+0xb8>)
 80013f2:	b570      	push	{r4, r5, r6, lr}
 80013f4:	0005      	movs	r5, r0
 80013f6:	6818      	ldr	r0, [r3, #0]
 80013f8:	000c      	movs	r4, r1
 80013fa:	2800      	cmp	r0, #0
 80013fc:	d004      	beq.n	8001408 <__swsetup_r+0x18>
 80013fe:	6a03      	ldr	r3, [r0, #32]
 8001400:	2b00      	cmp	r3, #0
 8001402:	d101      	bne.n	8001408 <__swsetup_r+0x18>
 8001404:	f7ff fa30 	bl	8000868 <__sinit>
 8001408:	220c      	movs	r2, #12
 800140a:	5ea3      	ldrsh	r3, [r4, r2]
 800140c:	071a      	lsls	r2, r3, #28
 800140e:	d423      	bmi.n	8001458 <__swsetup_r+0x68>
 8001410:	06da      	lsls	r2, r3, #27
 8001412:	d407      	bmi.n	8001424 <__swsetup_r+0x34>
 8001414:	2209      	movs	r2, #9
 8001416:	602a      	str	r2, [r5, #0]
 8001418:	2240      	movs	r2, #64	@ 0x40
 800141a:	2001      	movs	r0, #1
 800141c:	4313      	orrs	r3, r2
 800141e:	81a3      	strh	r3, [r4, #12]
 8001420:	4240      	negs	r0, r0
 8001422:	e03a      	b.n	800149a <__swsetup_r+0xaa>
 8001424:	075b      	lsls	r3, r3, #29
 8001426:	d513      	bpl.n	8001450 <__swsetup_r+0x60>
 8001428:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800142a:	2900      	cmp	r1, #0
 800142c:	d008      	beq.n	8001440 <__swsetup_r+0x50>
 800142e:	0023      	movs	r3, r4
 8001430:	3344      	adds	r3, #68	@ 0x44
 8001432:	4299      	cmp	r1, r3
 8001434:	d002      	beq.n	800143c <__swsetup_r+0x4c>
 8001436:	0028      	movs	r0, r5
 8001438:	f7ff fb2a 	bl	8000a90 <_free_r>
 800143c:	2300      	movs	r3, #0
 800143e:	6363      	str	r3, [r4, #52]	@ 0x34
 8001440:	2224      	movs	r2, #36	@ 0x24
 8001442:	89a3      	ldrh	r3, [r4, #12]
 8001444:	4393      	bics	r3, r2
 8001446:	81a3      	strh	r3, [r4, #12]
 8001448:	2300      	movs	r3, #0
 800144a:	6063      	str	r3, [r4, #4]
 800144c:	6923      	ldr	r3, [r4, #16]
 800144e:	6023      	str	r3, [r4, #0]
 8001450:	2308      	movs	r3, #8
 8001452:	89a2      	ldrh	r2, [r4, #12]
 8001454:	4313      	orrs	r3, r2
 8001456:	81a3      	strh	r3, [r4, #12]
 8001458:	6923      	ldr	r3, [r4, #16]
 800145a:	2b00      	cmp	r3, #0
 800145c:	d10b      	bne.n	8001476 <__swsetup_r+0x86>
 800145e:	21a0      	movs	r1, #160	@ 0xa0
 8001460:	2280      	movs	r2, #128	@ 0x80
 8001462:	89a3      	ldrh	r3, [r4, #12]
 8001464:	0089      	lsls	r1, r1, #2
 8001466:	0092      	lsls	r2, r2, #2
 8001468:	400b      	ands	r3, r1
 800146a:	4293      	cmp	r3, r2
 800146c:	d003      	beq.n	8001476 <__swsetup_r+0x86>
 800146e:	0021      	movs	r1, r4
 8001470:	0028      	movs	r0, r5
 8001472:	f000 f863 	bl	800153c <__smakebuf_r>
 8001476:	220c      	movs	r2, #12
 8001478:	5ea3      	ldrsh	r3, [r4, r2]
 800147a:	2101      	movs	r1, #1
 800147c:	001a      	movs	r2, r3
 800147e:	400a      	ands	r2, r1
 8001480:	420b      	tst	r3, r1
 8001482:	d00b      	beq.n	800149c <__swsetup_r+0xac>
 8001484:	2200      	movs	r2, #0
 8001486:	60a2      	str	r2, [r4, #8]
 8001488:	6962      	ldr	r2, [r4, #20]
 800148a:	4252      	negs	r2, r2
 800148c:	61a2      	str	r2, [r4, #24]
 800148e:	2000      	movs	r0, #0
 8001490:	6922      	ldr	r2, [r4, #16]
 8001492:	4282      	cmp	r2, r0
 8001494:	d101      	bne.n	800149a <__swsetup_r+0xaa>
 8001496:	061a      	lsls	r2, r3, #24
 8001498:	d4be      	bmi.n	8001418 <__swsetup_r+0x28>
 800149a:	bd70      	pop	{r4, r5, r6, pc}
 800149c:	0799      	lsls	r1, r3, #30
 800149e:	d400      	bmi.n	80014a2 <__swsetup_r+0xb2>
 80014a0:	6962      	ldr	r2, [r4, #20]
 80014a2:	60a2      	str	r2, [r4, #8]
 80014a4:	e7f3      	b.n	800148e <__swsetup_r+0x9e>
 80014a6:	46c0      	nop			@ (mov r8, r8)
 80014a8:	2000000c 	.word	0x2000000c

080014ac <_sbrk_r>:
 80014ac:	2300      	movs	r3, #0
 80014ae:	b570      	push	{r4, r5, r6, lr}
 80014b0:	4d06      	ldr	r5, [pc, #24]	@ (80014cc <_sbrk_r+0x20>)
 80014b2:	0004      	movs	r4, r0
 80014b4:	0008      	movs	r0, r1
 80014b6:	602b      	str	r3, [r5, #0]
 80014b8:	f7fe ffd4 	bl	8000464 <_sbrk>
 80014bc:	1c43      	adds	r3, r0, #1
 80014be:	d103      	bne.n	80014c8 <_sbrk_r+0x1c>
 80014c0:	682b      	ldr	r3, [r5, #0]
 80014c2:	2b00      	cmp	r3, #0
 80014c4:	d000      	beq.n	80014c8 <_sbrk_r+0x1c>
 80014c6:	6023      	str	r3, [r4, #0]
 80014c8:	bd70      	pop	{r4, r5, r6, pc}
 80014ca:	46c0      	nop			@ (mov r8, r8)
 80014cc:	200001c0 	.word	0x200001c0

080014d0 <memchr>:
 80014d0:	b2c9      	uxtb	r1, r1
 80014d2:	1882      	adds	r2, r0, r2
 80014d4:	4290      	cmp	r0, r2
 80014d6:	d101      	bne.n	80014dc <memchr+0xc>
 80014d8:	2000      	movs	r0, #0
 80014da:	4770      	bx	lr
 80014dc:	7803      	ldrb	r3, [r0, #0]
 80014de:	428b      	cmp	r3, r1
 80014e0:	d0fb      	beq.n	80014da <memchr+0xa>
 80014e2:	3001      	adds	r0, #1
 80014e4:	e7f6      	b.n	80014d4 <memchr+0x4>
	...

080014e8 <__swhatbuf_r>:
 80014e8:	b570      	push	{r4, r5, r6, lr}
 80014ea:	000e      	movs	r6, r1
 80014ec:	001d      	movs	r5, r3
 80014ee:	230e      	movs	r3, #14
 80014f0:	5ec9      	ldrsh	r1, [r1, r3]
 80014f2:	0014      	movs	r4, r2
 80014f4:	b096      	sub	sp, #88	@ 0x58
 80014f6:	2900      	cmp	r1, #0
 80014f8:	da0c      	bge.n	8001514 <__swhatbuf_r+0x2c>
 80014fa:	89b2      	ldrh	r2, [r6, #12]
 80014fc:	2380      	movs	r3, #128	@ 0x80
 80014fe:	0011      	movs	r1, r2
 8001500:	4019      	ands	r1, r3
 8001502:	421a      	tst	r2, r3
 8001504:	d114      	bne.n	8001530 <__swhatbuf_r+0x48>
 8001506:	2380      	movs	r3, #128	@ 0x80
 8001508:	00db      	lsls	r3, r3, #3
 800150a:	2000      	movs	r0, #0
 800150c:	6029      	str	r1, [r5, #0]
 800150e:	6023      	str	r3, [r4, #0]
 8001510:	b016      	add	sp, #88	@ 0x58
 8001512:	bd70      	pop	{r4, r5, r6, pc}
 8001514:	466a      	mov	r2, sp
 8001516:	f000 f853 	bl	80015c0 <_fstat_r>
 800151a:	2800      	cmp	r0, #0
 800151c:	dbed      	blt.n	80014fa <__swhatbuf_r+0x12>
 800151e:	23f0      	movs	r3, #240	@ 0xf0
 8001520:	9901      	ldr	r1, [sp, #4]
 8001522:	021b      	lsls	r3, r3, #8
 8001524:	4019      	ands	r1, r3
 8001526:	4b04      	ldr	r3, [pc, #16]	@ (8001538 <__swhatbuf_r+0x50>)
 8001528:	18c9      	adds	r1, r1, r3
 800152a:	424b      	negs	r3, r1
 800152c:	4159      	adcs	r1, r3
 800152e:	e7ea      	b.n	8001506 <__swhatbuf_r+0x1e>
 8001530:	2100      	movs	r1, #0
 8001532:	2340      	movs	r3, #64	@ 0x40
 8001534:	e7e9      	b.n	800150a <__swhatbuf_r+0x22>
 8001536:	46c0      	nop			@ (mov r8, r8)
 8001538:	ffffe000 	.word	0xffffe000

0800153c <__smakebuf_r>:
 800153c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800153e:	2602      	movs	r6, #2
 8001540:	898b      	ldrh	r3, [r1, #12]
 8001542:	0005      	movs	r5, r0
 8001544:	000c      	movs	r4, r1
 8001546:	b085      	sub	sp, #20
 8001548:	4233      	tst	r3, r6
 800154a:	d007      	beq.n	800155c <__smakebuf_r+0x20>
 800154c:	0023      	movs	r3, r4
 800154e:	3347      	adds	r3, #71	@ 0x47
 8001550:	6023      	str	r3, [r4, #0]
 8001552:	6123      	str	r3, [r4, #16]
 8001554:	2301      	movs	r3, #1
 8001556:	6163      	str	r3, [r4, #20]
 8001558:	b005      	add	sp, #20
 800155a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800155c:	ab03      	add	r3, sp, #12
 800155e:	aa02      	add	r2, sp, #8
 8001560:	f7ff ffc2 	bl	80014e8 <__swhatbuf_r>
 8001564:	9f02      	ldr	r7, [sp, #8]
 8001566:	9001      	str	r0, [sp, #4]
 8001568:	0039      	movs	r1, r7
 800156a:	0028      	movs	r0, r5
 800156c:	f7ff fafc 	bl	8000b68 <_malloc_r>
 8001570:	2800      	cmp	r0, #0
 8001572:	d108      	bne.n	8001586 <__smakebuf_r+0x4a>
 8001574:	220c      	movs	r2, #12
 8001576:	5ea3      	ldrsh	r3, [r4, r2]
 8001578:	059a      	lsls	r2, r3, #22
 800157a:	d4ed      	bmi.n	8001558 <__smakebuf_r+0x1c>
 800157c:	2203      	movs	r2, #3
 800157e:	4393      	bics	r3, r2
 8001580:	431e      	orrs	r6, r3
 8001582:	81a6      	strh	r6, [r4, #12]
 8001584:	e7e2      	b.n	800154c <__smakebuf_r+0x10>
 8001586:	2380      	movs	r3, #128	@ 0x80
 8001588:	89a2      	ldrh	r2, [r4, #12]
 800158a:	6020      	str	r0, [r4, #0]
 800158c:	4313      	orrs	r3, r2
 800158e:	81a3      	strh	r3, [r4, #12]
 8001590:	9b03      	ldr	r3, [sp, #12]
 8001592:	6120      	str	r0, [r4, #16]
 8001594:	6167      	str	r7, [r4, #20]
 8001596:	2b00      	cmp	r3, #0
 8001598:	d00c      	beq.n	80015b4 <__smakebuf_r+0x78>
 800159a:	0028      	movs	r0, r5
 800159c:	230e      	movs	r3, #14
 800159e:	5ee1      	ldrsh	r1, [r4, r3]
 80015a0:	f000 f820 	bl	80015e4 <_isatty_r>
 80015a4:	2800      	cmp	r0, #0
 80015a6:	d005      	beq.n	80015b4 <__smakebuf_r+0x78>
 80015a8:	2303      	movs	r3, #3
 80015aa:	89a2      	ldrh	r2, [r4, #12]
 80015ac:	439a      	bics	r2, r3
 80015ae:	3b02      	subs	r3, #2
 80015b0:	4313      	orrs	r3, r2
 80015b2:	81a3      	strh	r3, [r4, #12]
 80015b4:	89a3      	ldrh	r3, [r4, #12]
 80015b6:	9a01      	ldr	r2, [sp, #4]
 80015b8:	4313      	orrs	r3, r2
 80015ba:	81a3      	strh	r3, [r4, #12]
 80015bc:	e7cc      	b.n	8001558 <__smakebuf_r+0x1c>
	...

080015c0 <_fstat_r>:
 80015c0:	2300      	movs	r3, #0
 80015c2:	b570      	push	{r4, r5, r6, lr}
 80015c4:	4d06      	ldr	r5, [pc, #24]	@ (80015e0 <_fstat_r+0x20>)
 80015c6:	0004      	movs	r4, r0
 80015c8:	0008      	movs	r0, r1
 80015ca:	0011      	movs	r1, r2
 80015cc:	602b      	str	r3, [r5, #0]
 80015ce:	f7fe ff26 	bl	800041e <_fstat>
 80015d2:	1c43      	adds	r3, r0, #1
 80015d4:	d103      	bne.n	80015de <_fstat_r+0x1e>
 80015d6:	682b      	ldr	r3, [r5, #0]
 80015d8:	2b00      	cmp	r3, #0
 80015da:	d000      	beq.n	80015de <_fstat_r+0x1e>
 80015dc:	6023      	str	r3, [r4, #0]
 80015de:	bd70      	pop	{r4, r5, r6, pc}
 80015e0:	200001c0 	.word	0x200001c0

080015e4 <_isatty_r>:
 80015e4:	2300      	movs	r3, #0
 80015e6:	b570      	push	{r4, r5, r6, lr}
 80015e8:	4d06      	ldr	r5, [pc, #24]	@ (8001604 <_isatty_r+0x20>)
 80015ea:	0004      	movs	r4, r0
 80015ec:	0008      	movs	r0, r1
 80015ee:	602b      	str	r3, [r5, #0]
 80015f0:	f7fe ff23 	bl	800043a <_isatty>
 80015f4:	1c43      	adds	r3, r0, #1
 80015f6:	d103      	bne.n	8001600 <_isatty_r+0x1c>
 80015f8:	682b      	ldr	r3, [r5, #0]
 80015fa:	2b00      	cmp	r3, #0
 80015fc:	d000      	beq.n	8001600 <_isatty_r+0x1c>
 80015fe:	6023      	str	r3, [r4, #0]
 8001600:	bd70      	pop	{r4, r5, r6, pc}
 8001602:	46c0      	nop			@ (mov r8, r8)
 8001604:	200001c0 	.word	0x200001c0

08001608 <_init>:
 8001608:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800160a:	46c0      	nop			@ (mov r8, r8)
 800160c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800160e:	bc08      	pop	{r3}
 8001610:	469e      	mov	lr, r3
 8001612:	4770      	bx	lr

08001614 <_fini>:
 8001614:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001616:	46c0      	nop			@ (mov r8, r8)
 8001618:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800161a:	bc08      	pop	{r3}
 800161c:	469e      	mov	lr, r3
 800161e:	4770      	bx	lr
