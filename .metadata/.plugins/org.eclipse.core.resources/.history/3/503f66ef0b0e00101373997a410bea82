
6_Bootloader-1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001470  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000006c  08001530  08001530  00002530  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800159c  0800159c  0000305c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  0800159c  0800159c  0000305c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  0800159c  0800159c  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800159c  0800159c  0000259c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080015a0  080015a0  000025a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  080015a4  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000174  2000005c  08001600  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001d0  08001600  000031d0  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000f1c  00000000  00000000  00003084  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000677  00000000  00000000  00003fa0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000198  00000000  00000000  00004618  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000115  00000000  00000000  000047b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002018  00000000  00000000  000048c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001ec4  00000000  00000000  000068dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000602ba  00000000  00000000  000087a1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00068a5b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000be8  00000000  00000000  00068aa0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000070  00000000  00000000  00069688  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	2000005c 	.word	0x2000005c
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08001518 	.word	0x08001518

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000060 	.word	0x20000060
 8000104:	08001518 	.word	0x08001518

08000108 <__gnu_thumb1_case_shi>:
 8000108:	b403      	push	{r0, r1}
 800010a:	4671      	mov	r1, lr
 800010c:	0849      	lsrs	r1, r1, #1
 800010e:	0040      	lsls	r0, r0, #1
 8000110:	0049      	lsls	r1, r1, #1
 8000112:	5e09      	ldrsh	r1, [r1, r0]
 8000114:	0049      	lsls	r1, r1, #1
 8000116:	448e      	add	lr, r1
 8000118:	bc03      	pop	{r0, r1}
 800011a:	4770      	bx	lr

0800011c <__udivsi3>:
 800011c:	2200      	movs	r2, #0
 800011e:	0843      	lsrs	r3, r0, #1
 8000120:	428b      	cmp	r3, r1
 8000122:	d374      	bcc.n	800020e <__udivsi3+0xf2>
 8000124:	0903      	lsrs	r3, r0, #4
 8000126:	428b      	cmp	r3, r1
 8000128:	d35f      	bcc.n	80001ea <__udivsi3+0xce>
 800012a:	0a03      	lsrs	r3, r0, #8
 800012c:	428b      	cmp	r3, r1
 800012e:	d344      	bcc.n	80001ba <__udivsi3+0x9e>
 8000130:	0b03      	lsrs	r3, r0, #12
 8000132:	428b      	cmp	r3, r1
 8000134:	d328      	bcc.n	8000188 <__udivsi3+0x6c>
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d30d      	bcc.n	8000158 <__udivsi3+0x3c>
 800013c:	22ff      	movs	r2, #255	@ 0xff
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	ba12      	rev	r2, r2
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d302      	bcc.n	800014e <__udivsi3+0x32>
 8000148:	1212      	asrs	r2, r2, #8
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	d065      	beq.n	800021a <__udivsi3+0xfe>
 800014e:	0b03      	lsrs	r3, r0, #12
 8000150:	428b      	cmp	r3, r1
 8000152:	d319      	bcc.n	8000188 <__udivsi3+0x6c>
 8000154:	e000      	b.n	8000158 <__udivsi3+0x3c>
 8000156:	0a09      	lsrs	r1, r1, #8
 8000158:	0bc3      	lsrs	r3, r0, #15
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x46>
 800015e:	03cb      	lsls	r3, r1, #15
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b83      	lsrs	r3, r0, #14
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x52>
 800016a:	038b      	lsls	r3, r1, #14
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b43      	lsrs	r3, r0, #13
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x5e>
 8000176:	034b      	lsls	r3, r1, #13
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b03      	lsrs	r3, r0, #12
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x6a>
 8000182:	030b      	lsls	r3, r1, #12
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0ac3      	lsrs	r3, r0, #11
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x76>
 800018e:	02cb      	lsls	r3, r1, #11
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a83      	lsrs	r3, r0, #10
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x82>
 800019a:	028b      	lsls	r3, r1, #10
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a43      	lsrs	r3, r0, #9
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x8e>
 80001a6:	024b      	lsls	r3, r1, #9
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a03      	lsrs	r3, r0, #8
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x9a>
 80001b2:	020b      	lsls	r3, r1, #8
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	d2cd      	bcs.n	8000156 <__udivsi3+0x3a>
 80001ba:	09c3      	lsrs	r3, r0, #7
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xa8>
 80001c0:	01cb      	lsls	r3, r1, #7
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0983      	lsrs	r3, r0, #6
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xb4>
 80001cc:	018b      	lsls	r3, r1, #6
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0943      	lsrs	r3, r0, #5
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xc0>
 80001d8:	014b      	lsls	r3, r1, #5
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0903      	lsrs	r3, r0, #4
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xcc>
 80001e4:	010b      	lsls	r3, r1, #4
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	08c3      	lsrs	r3, r0, #3
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xd8>
 80001f0:	00cb      	lsls	r3, r1, #3
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0883      	lsrs	r3, r0, #2
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xe4>
 80001fc:	008b      	lsls	r3, r1, #2
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0843      	lsrs	r3, r0, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xf0>
 8000208:	004b      	lsls	r3, r1, #1
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	1a41      	subs	r1, r0, r1
 8000210:	d200      	bcs.n	8000214 <__udivsi3+0xf8>
 8000212:	4601      	mov	r1, r0
 8000214:	4152      	adcs	r2, r2
 8000216:	4610      	mov	r0, r2
 8000218:	4770      	bx	lr
 800021a:	e7ff      	b.n	800021c <__udivsi3+0x100>
 800021c:	b501      	push	{r0, lr}
 800021e:	2000      	movs	r0, #0
 8000220:	f000 f806 	bl	8000230 <__aeabi_idiv0>
 8000224:	bd02      	pop	{r1, pc}
 8000226:	46c0      	nop			@ (mov r8, r8)

08000228 <__aeabi_uidivmod>:
 8000228:	2900      	cmp	r1, #0
 800022a:	d0f7      	beq.n	800021c <__udivsi3+0x100>
 800022c:	e776      	b.n	800011c <__udivsi3>
 800022e:	4770      	bx	lr

08000230 <__aeabi_idiv0>:
 8000230:	4770      	bx	lr
 8000232:	46c0      	nop			@ (mov r8, r8)

08000234 <jmp_to_default_app>:
//#define MEM_CHECK_V1
#define MEM_CHECK_V2
typedef void(*func_ptr)(void);
//20004000
void jmp_to_default_app(void)
{
 8000234:	b580      	push	{r7, lr}
 8000236:	b084      	sub	sp, #16
 8000238:	af00      	add	r7, sp, #0
	uint32_t app_start_address;
	func_ptr jump_to_app;
	printf("Bootloader started....\n\r");
 800023a:	4b12      	ldr	r3, [pc, #72]	@ (8000284 <jmp_to_default_app+0x50>)
 800023c:	0018      	movs	r0, r3
 800023e:	f000 facf 	bl	80007e0 <iprintf>
	delay(300);
 8000242:	2396      	movs	r3, #150	@ 0x96
 8000244:	005b      	lsls	r3, r3, #1
 8000246:	0018      	movs	r0, r3
 8000248:	f000 f8ca 	bl	80003e0 <delay>
#ifdef MEM_CHECK_V1
	if(((*(uint32_t*)APPLICATION_ADDRESS) & MSP_VERIFY_MASK) == 0x20004000)
#endif

#ifdef MEM_CHECK_V2
	if((*(uint32_t*)APPLICATION_ADDRESS) != EMPTY_MEM)
 800024c:	4b0e      	ldr	r3, [pc, #56]	@ (8000288 <jmp_to_default_app+0x54>)
 800024e:	681b      	ldr	r3, [r3, #0]
 8000250:	3301      	adds	r3, #1
 8000252:	d00e      	beq.n	8000272 <jmp_to_default_app+0x3e>
#endif
	{
		//The compiler needs to know that 0x08008004 is a memory address storing a uint32_t value.
		//Without casting, the compiler would not know how to read from that address correctly.
		app_start_address = *(uint32_t*)(APPLICATION_ADDRESS+4);
 8000254:	4b0d      	ldr	r3, [pc, #52]	@ (800028c <jmp_to_default_app+0x58>)
 8000256:	681b      	ldr	r3, [r3, #0]
 8000258:	60fb      	str	r3, [r7, #12]
		// converts this raw address into a callable function pointer.
		jump_to_app= (func_ptr)app_start_address;
 800025a:	68fb      	ldr	r3, [r7, #12]
 800025c:	60bb      	str	r3, [r7, #8]
		/*init main stack ptr*/
		__set_MSP(*(uint32_t*)APPLICATION_ADDRESS);
 800025e:	4b0a      	ldr	r3, [pc, #40]	@ (8000288 <jmp_to_default_app+0x54>)
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	607b      	str	r3, [r7, #4]
  \details Assigns the given value to the Main Stack Pointer (MSP).
  \param [in]    topOfMainStack  Main Stack Pointer value to set
 */
__STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
{
  __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 8000264:	687b      	ldr	r3, [r7, #4]
 8000266:	f383 8808 	msr	MSP, r3
}
 800026a:	46c0      	nop			@ (mov r8, r8)
		/*Jump to app()*/
		jump_to_app();//jumps to 0x08008000
 800026c:	68bb      	ldr	r3, [r7, #8]
 800026e:	4798      	blx	r3
	}else
	{
		printf("No application found....\n\r");
	}
}
 8000270:	e003      	b.n	800027a <jmp_to_default_app+0x46>
		printf("No application found....\n\r");
 8000272:	4b07      	ldr	r3, [pc, #28]	@ (8000290 <jmp_to_default_app+0x5c>)
 8000274:	0018      	movs	r0, r3
 8000276:	f000 fab3 	bl	80007e0 <iprintf>
}
 800027a:	46c0      	nop			@ (mov r8, r8)
 800027c:	46bd      	mov	sp, r7
 800027e:	b004      	add	sp, #16
 8000280:	bd80      	pop	{r7, pc}
 8000282:	46c0      	nop			@ (mov r8, r8)
 8000284:	08001530 	.word	0x08001530
 8000288:	08008000 	.word	0x08008000
 800028c:	08008004 	.word	0x08008004
 8000290:	0800154c 	.word	0x0800154c

08000294 <main>:


int main()
{
 8000294:	b580      	push	{r7, lr}
 8000296:	af00      	add	r7, sp, #0
//	RCC->AHBENR |= GPIOCEN;
//	/*Set PC6 to output mode*/
//	GPIOC->MODER |=(1U<<12);
//	GPIOC->MODER &=~(1U<<13);
	/*Initialise  debug UART*/
	debug_uart_init();
 8000298:	f000 f916 	bl	80004c8 <debug_uart_init>
	/*initialise timebase*/
	timebase_init();
 800029c:	f000 f8de 	bl	800045c <timebase_init>
	/*init led*/
	//led_init();
	/*Init push button*/
	//button_init();

	jmp_to_default_app();
 80002a0:	f7ff ffc8 	bl	8000234 <jmp_to_default_app>
	while(1){
 80002a4:	46c0      	nop			@ (mov r8, r8)
 80002a6:	e7fd      	b.n	80002a4 <main+0x10>

080002a8 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002a8:	b580      	push	{r7, lr}
 80002aa:	b086      	sub	sp, #24
 80002ac:	af00      	add	r7, sp, #0
 80002ae:	60f8      	str	r0, [r7, #12]
 80002b0:	60b9      	str	r1, [r7, #8]
 80002b2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002b4:	2300      	movs	r3, #0
 80002b6:	617b      	str	r3, [r7, #20]
 80002b8:	e00a      	b.n	80002d0 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80002ba:	e000      	b.n	80002be <_read+0x16>
 80002bc:	bf00      	nop
 80002be:	0001      	movs	r1, r0
 80002c0:	68bb      	ldr	r3, [r7, #8]
 80002c2:	1c5a      	adds	r2, r3, #1
 80002c4:	60ba      	str	r2, [r7, #8]
 80002c6:	b2ca      	uxtb	r2, r1
 80002c8:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002ca:	697b      	ldr	r3, [r7, #20]
 80002cc:	3301      	adds	r3, #1
 80002ce:	617b      	str	r3, [r7, #20]
 80002d0:	697a      	ldr	r2, [r7, #20]
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	429a      	cmp	r2, r3
 80002d6:	dbf0      	blt.n	80002ba <_read+0x12>
  }

  return len;
 80002d8:	687b      	ldr	r3, [r7, #4]
}
 80002da:	0018      	movs	r0, r3
 80002dc:	46bd      	mov	sp, r7
 80002de:	b006      	add	sp, #24
 80002e0:	bd80      	pop	{r7, pc}

080002e2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80002e2:	b580      	push	{r7, lr}
 80002e4:	b086      	sub	sp, #24
 80002e6:	af00      	add	r7, sp, #0
 80002e8:	60f8      	str	r0, [r7, #12]
 80002ea:	60b9      	str	r1, [r7, #8]
 80002ec:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002ee:	2300      	movs	r3, #0
 80002f0:	617b      	str	r3, [r7, #20]
 80002f2:	e009      	b.n	8000308 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80002f4:	68bb      	ldr	r3, [r7, #8]
 80002f6:	1c5a      	adds	r2, r3, #1
 80002f8:	60ba      	str	r2, [r7, #8]
 80002fa:	781b      	ldrb	r3, [r3, #0]
 80002fc:	0018      	movs	r0, r3
 80002fe:	f000 f8d6 	bl	80004ae <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000302:	697b      	ldr	r3, [r7, #20]
 8000304:	3301      	adds	r3, #1
 8000306:	617b      	str	r3, [r7, #20]
 8000308:	697a      	ldr	r2, [r7, #20]
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	429a      	cmp	r2, r3
 800030e:	dbf1      	blt.n	80002f4 <_write+0x12>
  }
  return len;
 8000310:	687b      	ldr	r3, [r7, #4]
}
 8000312:	0018      	movs	r0, r3
 8000314:	46bd      	mov	sp, r7
 8000316:	b006      	add	sp, #24
 8000318:	bd80      	pop	{r7, pc}

0800031a <_close>:

int _close(int file)
{
 800031a:	b580      	push	{r7, lr}
 800031c:	b082      	sub	sp, #8
 800031e:	af00      	add	r7, sp, #0
 8000320:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000322:	2301      	movs	r3, #1
 8000324:	425b      	negs	r3, r3
}
 8000326:	0018      	movs	r0, r3
 8000328:	46bd      	mov	sp, r7
 800032a:	b002      	add	sp, #8
 800032c:	bd80      	pop	{r7, pc}

0800032e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800032e:	b580      	push	{r7, lr}
 8000330:	b082      	sub	sp, #8
 8000332:	af00      	add	r7, sp, #0
 8000334:	6078      	str	r0, [r7, #4]
 8000336:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000338:	683b      	ldr	r3, [r7, #0]
 800033a:	2280      	movs	r2, #128	@ 0x80
 800033c:	0192      	lsls	r2, r2, #6
 800033e:	605a      	str	r2, [r3, #4]
  return 0;
 8000340:	2300      	movs	r3, #0
}
 8000342:	0018      	movs	r0, r3
 8000344:	46bd      	mov	sp, r7
 8000346:	b002      	add	sp, #8
 8000348:	bd80      	pop	{r7, pc}

0800034a <_isatty>:

int _isatty(int file)
{
 800034a:	b580      	push	{r7, lr}
 800034c:	b082      	sub	sp, #8
 800034e:	af00      	add	r7, sp, #0
 8000350:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000352:	2301      	movs	r3, #1
}
 8000354:	0018      	movs	r0, r3
 8000356:	46bd      	mov	sp, r7
 8000358:	b002      	add	sp, #8
 800035a:	bd80      	pop	{r7, pc}

0800035c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800035c:	b580      	push	{r7, lr}
 800035e:	b084      	sub	sp, #16
 8000360:	af00      	add	r7, sp, #0
 8000362:	60f8      	str	r0, [r7, #12]
 8000364:	60b9      	str	r1, [r7, #8]
 8000366:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000368:	2300      	movs	r3, #0
}
 800036a:	0018      	movs	r0, r3
 800036c:	46bd      	mov	sp, r7
 800036e:	b004      	add	sp, #16
 8000370:	bd80      	pop	{r7, pc}
	...

08000374 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000374:	b580      	push	{r7, lr}
 8000376:	b086      	sub	sp, #24
 8000378:	af00      	add	r7, sp, #0
 800037a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800037c:	4a14      	ldr	r2, [pc, #80]	@ (80003d0 <_sbrk+0x5c>)
 800037e:	4b15      	ldr	r3, [pc, #84]	@ (80003d4 <_sbrk+0x60>)
 8000380:	1ad3      	subs	r3, r2, r3
 8000382:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000384:	697b      	ldr	r3, [r7, #20]
 8000386:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000388:	4b13      	ldr	r3, [pc, #76]	@ (80003d8 <_sbrk+0x64>)
 800038a:	681b      	ldr	r3, [r3, #0]
 800038c:	2b00      	cmp	r3, #0
 800038e:	d102      	bne.n	8000396 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000390:	4b11      	ldr	r3, [pc, #68]	@ (80003d8 <_sbrk+0x64>)
 8000392:	4a12      	ldr	r2, [pc, #72]	@ (80003dc <_sbrk+0x68>)
 8000394:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000396:	4b10      	ldr	r3, [pc, #64]	@ (80003d8 <_sbrk+0x64>)
 8000398:	681a      	ldr	r2, [r3, #0]
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	18d3      	adds	r3, r2, r3
 800039e:	693a      	ldr	r2, [r7, #16]
 80003a0:	429a      	cmp	r2, r3
 80003a2:	d207      	bcs.n	80003b4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003a4:	f000 face 	bl	8000944 <__errno>
 80003a8:	0003      	movs	r3, r0
 80003aa:	220c      	movs	r2, #12
 80003ac:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003ae:	2301      	movs	r3, #1
 80003b0:	425b      	negs	r3, r3
 80003b2:	e009      	b.n	80003c8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003b4:	4b08      	ldr	r3, [pc, #32]	@ (80003d8 <_sbrk+0x64>)
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003ba:	4b07      	ldr	r3, [pc, #28]	@ (80003d8 <_sbrk+0x64>)
 80003bc:	681a      	ldr	r2, [r3, #0]
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	18d2      	adds	r2, r2, r3
 80003c2:	4b05      	ldr	r3, [pc, #20]	@ (80003d8 <_sbrk+0x64>)
 80003c4:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 80003c6:	68fb      	ldr	r3, [r7, #12]
}
 80003c8:	0018      	movs	r0, r3
 80003ca:	46bd      	mov	sp, r7
 80003cc:	b006      	add	sp, #24
 80003ce:	bd80      	pop	{r7, pc}
 80003d0:	20004000 	.word	0x20004000
 80003d4:	00000400 	.word	0x00000400
 80003d8:	20000078 	.word	0x20000078
 80003dc:	200001d0 	.word	0x200001d0

080003e0 <delay>:
volatile uint32_t g_curr_tick;
volatile uint32_t g_curr_tick_p;
/*Delay in seconds*/

void delay(uint32_t delay)
{
 80003e0:	b580      	push	{r7, lr}
 80003e2:	b084      	sub	sp, #16
 80003e4:	af00      	add	r7, sp, #0
 80003e6:	6078      	str	r0, [r7, #4]
	uint32_t tickstart=get_tick();
 80003e8:	f000 f818 	bl	800041c <get_tick>
 80003ec:	0003      	movs	r3, r0
 80003ee:	60bb      	str	r3, [r7, #8]
	uint32_t wait = delay;
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	60fb      	str	r3, [r7, #12]
	if(wait<MAX_DELAY){
 80003f4:	68fb      	ldr	r3, [r7, #12]
 80003f6:	3301      	adds	r3, #1
 80003f8:	d002      	beq.n	8000400 <delay+0x20>
		wait+=(uint32_t)TICK_FREQ;
 80003fa:	68fb      	ldr	r3, [r7, #12]
 80003fc:	3301      	adds	r3, #1
 80003fe:	60fb      	str	r3, [r7, #12]
	}
	while((get_tick()-tickstart)<wait){}
 8000400:	46c0      	nop			@ (mov r8, r8)
 8000402:	f000 f80b 	bl	800041c <get_tick>
 8000406:	0002      	movs	r2, r0
 8000408:	68bb      	ldr	r3, [r7, #8]
 800040a:	1ad3      	subs	r3, r2, r3
 800040c:	68fa      	ldr	r2, [r7, #12]
 800040e:	429a      	cmp	r2, r3
 8000410:	d8f7      	bhi.n	8000402 <delay+0x22>
}
 8000412:	46c0      	nop			@ (mov r8, r8)
 8000414:	46c0      	nop			@ (mov r8, r8)
 8000416:	46bd      	mov	sp, r7
 8000418:	b004      	add	sp, #16
 800041a:	bd80      	pop	{r7, pc}

0800041c <get_tick>:
uint32_t get_tick(void)
{
 800041c:	b580      	push	{r7, lr}
 800041e:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 8000420:	b672      	cpsid	i
}
 8000422:	46c0      	nop			@ (mov r8, r8)
	__disable_irq();
	g_curr_tick_p = g_curr_tick;
 8000424:	4b05      	ldr	r3, [pc, #20]	@ (800043c <get_tick+0x20>)
 8000426:	681a      	ldr	r2, [r3, #0]
 8000428:	4b05      	ldr	r3, [pc, #20]	@ (8000440 <get_tick+0x24>)
 800042a:	601a      	str	r2, [r3, #0]
  __ASM volatile ("cpsie i" : : : "memory");
 800042c:	b662      	cpsie	i
}
 800042e:	46c0      	nop			@ (mov r8, r8)
	__enable_irq();

	return g_curr_tick_p;
 8000430:	4b03      	ldr	r3, [pc, #12]	@ (8000440 <get_tick+0x24>)
 8000432:	681b      	ldr	r3, [r3, #0]
}
 8000434:	0018      	movs	r0, r3
 8000436:	46bd      	mov	sp, r7
 8000438:	bd80      	pop	{r7, pc}
 800043a:	46c0      	nop			@ (mov r8, r8)
 800043c:	2000007c 	.word	0x2000007c
 8000440:	20000080 	.word	0x20000080

08000444 <tick_increment>:


static void tick_increment(void)
{
 8000444:	b580      	push	{r7, lr}
 8000446:	af00      	add	r7, sp, #0
	g_curr_tick += TICK_FREQ;
 8000448:	4b03      	ldr	r3, [pc, #12]	@ (8000458 <tick_increment+0x14>)
 800044a:	681b      	ldr	r3, [r3, #0]
 800044c:	1c5a      	adds	r2, r3, #1
 800044e:	4b02      	ldr	r3, [pc, #8]	@ (8000458 <tick_increment+0x14>)
 8000450:	601a      	str	r2, [r3, #0]
}
 8000452:	46c0      	nop			@ (mov r8, r8)
 8000454:	46bd      	mov	sp, r7
 8000456:	bd80      	pop	{r7, pc}
 8000458:	2000007c 	.word	0x2000007c

0800045c <timebase_init>:
void timebase_init(void)
{
 800045c:	b580      	push	{r7, lr}
 800045e:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 8000460:	b672      	cpsid	i
}
 8000462:	46c0      	nop			@ (mov r8, r8)
	/*Disable global interrupts*/
	__disable_irq();
	/*Load the timer num of clock cycles per second*/
	SysTick->LOAD = ONE_MSEC_LOAD-1;//Total time=Number of ticks×Time per tick = 7999999 x 125ns=1sec
 8000464:	4b0c      	ldr	r3, [pc, #48]	@ (8000498 <timebase_init+0x3c>)
 8000466:	4a0d      	ldr	r2, [pc, #52]	@ (800049c <timebase_init+0x40>)
 8000468:	605a      	str	r2, [r3, #4]
	//if SysTick->LOAD is set to the same value as the system clock frequency i.e interrupt occurs every 1 sec
	/*Clear systick current val reg*/
	SysTick->VAL=0;
 800046a:	4b0b      	ldr	r3, [pc, #44]	@ (8000498 <timebase_init+0x3c>)
 800046c:	2200      	movs	r2, #0
 800046e:	609a      	str	r2, [r3, #8]
	/*Select internal clock source*/
	SysTick->CTRL=CTRL_CLKSRC;
 8000470:	4b09      	ldr	r3, [pc, #36]	@ (8000498 <timebase_init+0x3c>)
 8000472:	2204      	movs	r2, #4
 8000474:	601a      	str	r2, [r3, #0]
	/*enable interrupt*/
	SysTick->CTRL |= CTRL_TICKINT;
 8000476:	4b08      	ldr	r3, [pc, #32]	@ (8000498 <timebase_init+0x3c>)
 8000478:	681a      	ldr	r2, [r3, #0]
 800047a:	4b07      	ldr	r3, [pc, #28]	@ (8000498 <timebase_init+0x3c>)
 800047c:	2102      	movs	r1, #2
 800047e:	430a      	orrs	r2, r1
 8000480:	601a      	str	r2, [r3, #0]
	/*Enable systick*/
	SysTick->CTRL |= CTRL_ENABLE;
 8000482:	4b05      	ldr	r3, [pc, #20]	@ (8000498 <timebase_init+0x3c>)
 8000484:	681a      	ldr	r2, [r3, #0]
 8000486:	4b04      	ldr	r3, [pc, #16]	@ (8000498 <timebase_init+0x3c>)
 8000488:	2101      	movs	r1, #1
 800048a:	430a      	orrs	r2, r1
 800048c:	601a      	str	r2, [r3, #0]
  __ASM volatile ("cpsie i" : : : "memory");
 800048e:	b662      	cpsie	i
}
 8000490:	46c0      	nop			@ (mov r8, r8)
	/*Enable global interrupt*/
	__enable_irq();
}
 8000492:	46c0      	nop			@ (mov r8, r8)
 8000494:	46bd      	mov	sp, r7
 8000496:	bd80      	pop	{r7, pc}
 8000498:	e000e010 	.word	0xe000e010
 800049c:	00001f3f 	.word	0x00001f3f

080004a0 <SysTick_Handler>:

void SysTick_Handler(void){
 80004a0:	b580      	push	{r7, lr}
 80004a2:	af00      	add	r7, sp, #0
	tick_increment();
 80004a4:	f7ff ffce 	bl	8000444 <tick_increment>
}
 80004a8:	46c0      	nop			@ (mov r8, r8)
 80004aa:	46bd      	mov	sp, r7
 80004ac:	bd80      	pop	{r7, pc}

080004ae <__io_putchar>:
#define SR_TXE				(1U<<7)
static void uart_set_baud_rate(uint32_t periph_clk,uint32_t baudrate);
static void uart_write(int ch);
static uint16_t compute_uart_bd(uint32_t periph_clk,uint32_t baudrate);
int __io_putchar(int ch)
{
 80004ae:	b580      	push	{r7, lr}
 80004b0:	b082      	sub	sp, #8
 80004b2:	af00      	add	r7, sp, #0
 80004b4:	6078      	str	r0, [r7, #4]
	uart_write(ch);
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	0018      	movs	r0, r3
 80004ba:	f000 f861 	bl	8000580 <uart_write>
	return ch;
 80004be:	687b      	ldr	r3, [r7, #4]
}
 80004c0:	0018      	movs	r0, r3
 80004c2:	46bd      	mov	sp, r7
 80004c4:	b002      	add	sp, #8
 80004c6:	bd80      	pop	{r7, pc}

080004c8 <debug_uart_init>:

void debug_uart_init(void){
 80004c8:	b580      	push	{r7, lr}
 80004ca:	af00      	add	r7, sp, #0
	/*Enable clock access to GPIOA*/
	RCC->AHBENR |= GPIOAEN;
 80004cc:	4b28      	ldr	r3, [pc, #160]	@ (8000570 <debug_uart_init+0xa8>)
 80004ce:	695a      	ldr	r2, [r3, #20]
 80004d0:	4b27      	ldr	r3, [pc, #156]	@ (8000570 <debug_uart_init+0xa8>)
 80004d2:	2180      	movs	r1, #128	@ 0x80
 80004d4:	0289      	lsls	r1, r1, #10
 80004d6:	430a      	orrs	r2, r1
 80004d8:	615a      	str	r2, [r3, #20]
	/*Set the mode of PA9 and PA10 to AF mode*/
	GPIOA->MODER &= ~(1U<<18);
 80004da:	2390      	movs	r3, #144	@ 0x90
 80004dc:	05db      	lsls	r3, r3, #23
 80004de:	681a      	ldr	r2, [r3, #0]
 80004e0:	2390      	movs	r3, #144	@ 0x90
 80004e2:	05db      	lsls	r3, r3, #23
 80004e4:	4923      	ldr	r1, [pc, #140]	@ (8000574 <debug_uart_init+0xac>)
 80004e6:	400a      	ands	r2, r1
 80004e8:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |= (1U<<19);
 80004ea:	2390      	movs	r3, #144	@ 0x90
 80004ec:	05db      	lsls	r3, r3, #23
 80004ee:	681a      	ldr	r2, [r3, #0]
 80004f0:	2390      	movs	r3, #144	@ 0x90
 80004f2:	05db      	lsls	r3, r3, #23
 80004f4:	2180      	movs	r1, #128	@ 0x80
 80004f6:	0309      	lsls	r1, r1, #12
 80004f8:	430a      	orrs	r2, r1
 80004fa:	601a      	str	r2, [r3, #0]
	/*Set AF type to AF1(USART1_TX/RX)*/
	GPIOA->AFR[1] |= (1U<<4);
 80004fc:	2390      	movs	r3, #144	@ 0x90
 80004fe:	05db      	lsls	r3, r3, #23
 8000500:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000502:	2390      	movs	r3, #144	@ 0x90
 8000504:	05db      	lsls	r3, r3, #23
 8000506:	2110      	movs	r1, #16
 8000508:	430a      	orrs	r2, r1
 800050a:	625a      	str	r2, [r3, #36]	@ 0x24
	GPIOA->AFR[1] &= ~(1U<<5);
 800050c:	2390      	movs	r3, #144	@ 0x90
 800050e:	05db      	lsls	r3, r3, #23
 8000510:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000512:	2390      	movs	r3, #144	@ 0x90
 8000514:	05db      	lsls	r3, r3, #23
 8000516:	2120      	movs	r1, #32
 8000518:	438a      	bics	r2, r1
 800051a:	625a      	str	r2, [r3, #36]	@ 0x24
	GPIOA->AFR[1] &= ~(1U<<6);
 800051c:	2390      	movs	r3, #144	@ 0x90
 800051e:	05db      	lsls	r3, r3, #23
 8000520:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000522:	2390      	movs	r3, #144	@ 0x90
 8000524:	05db      	lsls	r3, r3, #23
 8000526:	2140      	movs	r1, #64	@ 0x40
 8000528:	438a      	bics	r2, r1
 800052a:	625a      	str	r2, [r3, #36]	@ 0x24
	GPIOA->AFR[1] &= ~(1U<<7);
 800052c:	2390      	movs	r3, #144	@ 0x90
 800052e:	05db      	lsls	r3, r3, #23
 8000530:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000532:	2390      	movs	r3, #144	@ 0x90
 8000534:	05db      	lsls	r3, r3, #23
 8000536:	2180      	movs	r1, #128	@ 0x80
 8000538:	438a      	bics	r2, r1
 800053a:	625a      	str	r2, [r3, #36]	@ 0x24


	/*Enable clock access to USART1*/
	RCC->APB2ENR |= UART1EN;
 800053c:	4b0c      	ldr	r3, [pc, #48]	@ (8000570 <debug_uart_init+0xa8>)
 800053e:	699a      	ldr	r2, [r3, #24]
 8000540:	4b0b      	ldr	r3, [pc, #44]	@ (8000570 <debug_uart_init+0xa8>)
 8000542:	2180      	movs	r1, #128	@ 0x80
 8000544:	01c9      	lsls	r1, r1, #7
 8000546:	430a      	orrs	r2, r1
 8000548:	619a      	str	r2, [r3, #24]
	/*Configure uart baud rate*/
	uart_set_baud_rate(APB2_CLK,DBG_UART_BAUDRATE);
 800054a:	23e1      	movs	r3, #225	@ 0xe1
 800054c:	025b      	lsls	r3, r3, #9
 800054e:	4a0a      	ldr	r2, [pc, #40]	@ (8000578 <debug_uart_init+0xb0>)
 8000550:	0019      	movs	r1, r3
 8000552:	0010      	movs	r0, r2
 8000554:	f000 f840 	bl	80005d8 <uart_set_baud_rate>
	/*Configure transfer direction*/
	USART1->CR1 = CR1_TE;
 8000558:	4b08      	ldr	r3, [pc, #32]	@ (800057c <debug_uart_init+0xb4>)
 800055a:	2208      	movs	r2, #8
 800055c:	601a      	str	r2, [r3, #0]
	/*Enable UART module*/
	USART1->CR1 |= CR1_UE;//just update value of bit 0
 800055e:	4b07      	ldr	r3, [pc, #28]	@ (800057c <debug_uart_init+0xb4>)
 8000560:	681a      	ldr	r2, [r3, #0]
 8000562:	4b06      	ldr	r3, [pc, #24]	@ (800057c <debug_uart_init+0xb4>)
 8000564:	2101      	movs	r1, #1
 8000566:	430a      	orrs	r2, r1
 8000568:	601a      	str	r2, [r3, #0]

}
 800056a:	46c0      	nop			@ (mov r8, r8)
 800056c:	46bd      	mov	sp, r7
 800056e:	bd80      	pop	{r7, pc}
 8000570:	40021000 	.word	0x40021000
 8000574:	fffbffff 	.word	0xfffbffff
 8000578:	007a1200 	.word	0x007a1200
 800057c:	40013800 	.word	0x40013800

08000580 <uart_write>:

static void uart_write(int ch)
{
 8000580:	b580      	push	{r7, lr}
 8000582:	b082      	sub	sp, #8
 8000584:	af00      	add	r7, sp, #0
 8000586:	6078      	str	r0, [r7, #4]
	/*Make sure tx data reg is empty*/
	while(!(USART1->ISR & SR_TXE));
 8000588:	46c0      	nop			@ (mov r8, r8)
 800058a:	4b08      	ldr	r3, [pc, #32]	@ (80005ac <uart_write+0x2c>)
 800058c:	69db      	ldr	r3, [r3, #28]
 800058e:	2280      	movs	r2, #128	@ 0x80
 8000590:	4013      	ands	r3, r2
 8000592:	d0fa      	beq.n	800058a <uart_write+0xa>
	/*Write to transmit data reg*/
	USART1->TDR = (ch & 0xFF);
 8000594:	687b      	ldr	r3, [r7, #4]
 8000596:	b29b      	uxth	r3, r3
 8000598:	4a04      	ldr	r2, [pc, #16]	@ (80005ac <uart_write+0x2c>)
 800059a:	21ff      	movs	r1, #255	@ 0xff
 800059c:	400b      	ands	r3, r1
 800059e:	b29b      	uxth	r3, r3
 80005a0:	8513      	strh	r3, [r2, #40]	@ 0x28
}
 80005a2:	46c0      	nop			@ (mov r8, r8)
 80005a4:	46bd      	mov	sp, r7
 80005a6:	b002      	add	sp, #8
 80005a8:	bd80      	pop	{r7, pc}
 80005aa:	46c0      	nop			@ (mov r8, r8)
 80005ac:	40013800 	.word	0x40013800

080005b0 <compute_uart_bd>:

static uint16_t compute_uart_bd(uint32_t periph_clk,uint32_t baudrate)
{
 80005b0:	b580      	push	{r7, lr}
 80005b2:	b082      	sub	sp, #8
 80005b4:	af00      	add	r7, sp, #0
 80005b6:	6078      	str	r0, [r7, #4]
 80005b8:	6039      	str	r1, [r7, #0]
	return ((periph_clk + (baudrate/2U))/baudrate);//round off technineuq
 80005ba:	683b      	ldr	r3, [r7, #0]
 80005bc:	085a      	lsrs	r2, r3, #1
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	18d3      	adds	r3, r2, r3
 80005c2:	6839      	ldr	r1, [r7, #0]
 80005c4:	0018      	movs	r0, r3
 80005c6:	f7ff fda9 	bl	800011c <__udivsi3>
 80005ca:	0003      	movs	r3, r0
 80005cc:	b29b      	uxth	r3, r3
}
 80005ce:	0018      	movs	r0, r3
 80005d0:	46bd      	mov	sp, r7
 80005d2:	b002      	add	sp, #8
 80005d4:	bd80      	pop	{r7, pc}
	...

080005d8 <uart_set_baud_rate>:

static void uart_set_baud_rate(uint32_t periph_clk,uint32_t baudrate)
{
 80005d8:	b580      	push	{r7, lr}
 80005da:	b082      	sub	sp, #8
 80005dc:	af00      	add	r7, sp, #0
 80005de:	6078      	str	r0, [r7, #4]
 80005e0:	6039      	str	r1, [r7, #0]
	USART1->BRR = compute_uart_bd(periph_clk,baudrate);
 80005e2:	683a      	ldr	r2, [r7, #0]
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	0011      	movs	r1, r2
 80005e8:	0018      	movs	r0, r3
 80005ea:	f7ff ffe1 	bl	80005b0 <compute_uart_bd>
 80005ee:	0003      	movs	r3, r0
 80005f0:	001a      	movs	r2, r3
 80005f2:	4b03      	ldr	r3, [pc, #12]	@ (8000600 <uart_set_baud_rate+0x28>)
 80005f4:	60da      	str	r2, [r3, #12]
}
 80005f6:	46c0      	nop			@ (mov r8, r8)
 80005f8:	46bd      	mov	sp, r7
 80005fa:	b002      	add	sp, #8
 80005fc:	bd80      	pop	{r7, pc}
 80005fe:	46c0      	nop			@ (mov r8, r8)
 8000600:	40013800 	.word	0x40013800

08000604 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000604:	480d      	ldr	r0, [pc, #52]	@ (800063c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000606:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000608:	e000      	b.n	800060c <Reset_Handler+0x8>
 800060a:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800060c:	480c      	ldr	r0, [pc, #48]	@ (8000640 <LoopForever+0x6>)
  ldr r1, =_edata
 800060e:	490d      	ldr	r1, [pc, #52]	@ (8000644 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000610:	4a0d      	ldr	r2, [pc, #52]	@ (8000648 <LoopForever+0xe>)
  movs r3, #0
 8000612:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000614:	e002      	b.n	800061c <LoopCopyDataInit>

08000616 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000616:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000618:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800061a:	3304      	adds	r3, #4

0800061c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800061c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800061e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000620:	d3f9      	bcc.n	8000616 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000622:	4a0a      	ldr	r2, [pc, #40]	@ (800064c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000624:	4c0a      	ldr	r4, [pc, #40]	@ (8000650 <LoopForever+0x16>)
  movs r3, #0
 8000626:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000628:	e001      	b.n	800062e <LoopFillZerobss>

0800062a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800062a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800062c:	3204      	adds	r2, #4

0800062e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800062e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000630:	d3fb      	bcc.n	800062a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000632:	f000 f98d 	bl	8000950 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000636:	f7ff fe2d 	bl	8000294 <main>

0800063a <LoopForever>:

LoopForever:
  b LoopForever
 800063a:	e7fe      	b.n	800063a <LoopForever>
  ldr   r0, =_estack
 800063c:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 8000640:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000644:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000648:	080015a4 	.word	0x080015a4
  ldr r2, =_sbss
 800064c:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000650:	200001d0 	.word	0x200001d0

08000654 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000654:	e7fe      	b.n	8000654 <ADC_COMP_IRQHandler>
	...

08000658 <std>:
 8000658:	2300      	movs	r3, #0
 800065a:	b510      	push	{r4, lr}
 800065c:	0004      	movs	r4, r0
 800065e:	6003      	str	r3, [r0, #0]
 8000660:	6043      	str	r3, [r0, #4]
 8000662:	6083      	str	r3, [r0, #8]
 8000664:	8181      	strh	r1, [r0, #12]
 8000666:	6643      	str	r3, [r0, #100]	@ 0x64
 8000668:	81c2      	strh	r2, [r0, #14]
 800066a:	6103      	str	r3, [r0, #16]
 800066c:	6143      	str	r3, [r0, #20]
 800066e:	6183      	str	r3, [r0, #24]
 8000670:	0019      	movs	r1, r3
 8000672:	2208      	movs	r2, #8
 8000674:	305c      	adds	r0, #92	@ 0x5c
 8000676:	f000 f90f 	bl	8000898 <memset>
 800067a:	4b0b      	ldr	r3, [pc, #44]	@ (80006a8 <std+0x50>)
 800067c:	6224      	str	r4, [r4, #32]
 800067e:	6263      	str	r3, [r4, #36]	@ 0x24
 8000680:	4b0a      	ldr	r3, [pc, #40]	@ (80006ac <std+0x54>)
 8000682:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000684:	4b0a      	ldr	r3, [pc, #40]	@ (80006b0 <std+0x58>)
 8000686:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000688:	4b0a      	ldr	r3, [pc, #40]	@ (80006b4 <std+0x5c>)
 800068a:	6323      	str	r3, [r4, #48]	@ 0x30
 800068c:	4b0a      	ldr	r3, [pc, #40]	@ (80006b8 <std+0x60>)
 800068e:	429c      	cmp	r4, r3
 8000690:	d005      	beq.n	800069e <std+0x46>
 8000692:	4b0a      	ldr	r3, [pc, #40]	@ (80006bc <std+0x64>)
 8000694:	429c      	cmp	r4, r3
 8000696:	d002      	beq.n	800069e <std+0x46>
 8000698:	4b09      	ldr	r3, [pc, #36]	@ (80006c0 <std+0x68>)
 800069a:	429c      	cmp	r4, r3
 800069c:	d103      	bne.n	80006a6 <std+0x4e>
 800069e:	0020      	movs	r0, r4
 80006a0:	3058      	adds	r0, #88	@ 0x58
 80006a2:	f000 f979 	bl	8000998 <__retarget_lock_init_recursive>
 80006a6:	bd10      	pop	{r4, pc}
 80006a8:	08000801 	.word	0x08000801
 80006ac:	08000829 	.word	0x08000829
 80006b0:	08000861 	.word	0x08000861
 80006b4:	0800088d 	.word	0x0800088d
 80006b8:	20000084 	.word	0x20000084
 80006bc:	200000ec 	.word	0x200000ec
 80006c0:	20000154 	.word	0x20000154

080006c4 <stdio_exit_handler>:
 80006c4:	b510      	push	{r4, lr}
 80006c6:	4a03      	ldr	r2, [pc, #12]	@ (80006d4 <stdio_exit_handler+0x10>)
 80006c8:	4903      	ldr	r1, [pc, #12]	@ (80006d8 <stdio_exit_handler+0x14>)
 80006ca:	4804      	ldr	r0, [pc, #16]	@ (80006dc <stdio_exit_handler+0x18>)
 80006cc:	f000 f86c 	bl	80007a8 <_fwalk_sglue>
 80006d0:	bd10      	pop	{r4, pc}
 80006d2:	46c0      	nop			@ (mov r8, r8)
 80006d4:	20000000 	.word	0x20000000
 80006d8:	08001225 	.word	0x08001225
 80006dc:	20000010 	.word	0x20000010

080006e0 <cleanup_stdio>:
 80006e0:	6841      	ldr	r1, [r0, #4]
 80006e2:	4b0b      	ldr	r3, [pc, #44]	@ (8000710 <cleanup_stdio+0x30>)
 80006e4:	b510      	push	{r4, lr}
 80006e6:	0004      	movs	r4, r0
 80006e8:	4299      	cmp	r1, r3
 80006ea:	d001      	beq.n	80006f0 <cleanup_stdio+0x10>
 80006ec:	f000 fd9a 	bl	8001224 <_fflush_r>
 80006f0:	68a1      	ldr	r1, [r4, #8]
 80006f2:	4b08      	ldr	r3, [pc, #32]	@ (8000714 <cleanup_stdio+0x34>)
 80006f4:	4299      	cmp	r1, r3
 80006f6:	d002      	beq.n	80006fe <cleanup_stdio+0x1e>
 80006f8:	0020      	movs	r0, r4
 80006fa:	f000 fd93 	bl	8001224 <_fflush_r>
 80006fe:	68e1      	ldr	r1, [r4, #12]
 8000700:	4b05      	ldr	r3, [pc, #20]	@ (8000718 <cleanup_stdio+0x38>)
 8000702:	4299      	cmp	r1, r3
 8000704:	d002      	beq.n	800070c <cleanup_stdio+0x2c>
 8000706:	0020      	movs	r0, r4
 8000708:	f000 fd8c 	bl	8001224 <_fflush_r>
 800070c:	bd10      	pop	{r4, pc}
 800070e:	46c0      	nop			@ (mov r8, r8)
 8000710:	20000084 	.word	0x20000084
 8000714:	200000ec 	.word	0x200000ec
 8000718:	20000154 	.word	0x20000154

0800071c <global_stdio_init.part.0>:
 800071c:	b510      	push	{r4, lr}
 800071e:	4b09      	ldr	r3, [pc, #36]	@ (8000744 <global_stdio_init.part.0+0x28>)
 8000720:	4a09      	ldr	r2, [pc, #36]	@ (8000748 <global_stdio_init.part.0+0x2c>)
 8000722:	2104      	movs	r1, #4
 8000724:	601a      	str	r2, [r3, #0]
 8000726:	4809      	ldr	r0, [pc, #36]	@ (800074c <global_stdio_init.part.0+0x30>)
 8000728:	2200      	movs	r2, #0
 800072a:	f7ff ff95 	bl	8000658 <std>
 800072e:	2201      	movs	r2, #1
 8000730:	2109      	movs	r1, #9
 8000732:	4807      	ldr	r0, [pc, #28]	@ (8000750 <global_stdio_init.part.0+0x34>)
 8000734:	f7ff ff90 	bl	8000658 <std>
 8000738:	2202      	movs	r2, #2
 800073a:	2112      	movs	r1, #18
 800073c:	4805      	ldr	r0, [pc, #20]	@ (8000754 <global_stdio_init.part.0+0x38>)
 800073e:	f7ff ff8b 	bl	8000658 <std>
 8000742:	bd10      	pop	{r4, pc}
 8000744:	200001bc 	.word	0x200001bc
 8000748:	080006c5 	.word	0x080006c5
 800074c:	20000084 	.word	0x20000084
 8000750:	200000ec 	.word	0x200000ec
 8000754:	20000154 	.word	0x20000154

08000758 <__sfp_lock_acquire>:
 8000758:	b510      	push	{r4, lr}
 800075a:	4802      	ldr	r0, [pc, #8]	@ (8000764 <__sfp_lock_acquire+0xc>)
 800075c:	f000 f91d 	bl	800099a <__retarget_lock_acquire_recursive>
 8000760:	bd10      	pop	{r4, pc}
 8000762:	46c0      	nop			@ (mov r8, r8)
 8000764:	200001c5 	.word	0x200001c5

08000768 <__sfp_lock_release>:
 8000768:	b510      	push	{r4, lr}
 800076a:	4802      	ldr	r0, [pc, #8]	@ (8000774 <__sfp_lock_release+0xc>)
 800076c:	f000 f916 	bl	800099c <__retarget_lock_release_recursive>
 8000770:	bd10      	pop	{r4, pc}
 8000772:	46c0      	nop			@ (mov r8, r8)
 8000774:	200001c5 	.word	0x200001c5

08000778 <__sinit>:
 8000778:	b510      	push	{r4, lr}
 800077a:	0004      	movs	r4, r0
 800077c:	f7ff ffec 	bl	8000758 <__sfp_lock_acquire>
 8000780:	6a23      	ldr	r3, [r4, #32]
 8000782:	2b00      	cmp	r3, #0
 8000784:	d002      	beq.n	800078c <__sinit+0x14>
 8000786:	f7ff ffef 	bl	8000768 <__sfp_lock_release>
 800078a:	bd10      	pop	{r4, pc}
 800078c:	4b04      	ldr	r3, [pc, #16]	@ (80007a0 <__sinit+0x28>)
 800078e:	6223      	str	r3, [r4, #32]
 8000790:	4b04      	ldr	r3, [pc, #16]	@ (80007a4 <__sinit+0x2c>)
 8000792:	681b      	ldr	r3, [r3, #0]
 8000794:	2b00      	cmp	r3, #0
 8000796:	d1f6      	bne.n	8000786 <__sinit+0xe>
 8000798:	f7ff ffc0 	bl	800071c <global_stdio_init.part.0>
 800079c:	e7f3      	b.n	8000786 <__sinit+0xe>
 800079e:	46c0      	nop			@ (mov r8, r8)
 80007a0:	080006e1 	.word	0x080006e1
 80007a4:	200001bc 	.word	0x200001bc

080007a8 <_fwalk_sglue>:
 80007a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80007aa:	0014      	movs	r4, r2
 80007ac:	2600      	movs	r6, #0
 80007ae:	9000      	str	r0, [sp, #0]
 80007b0:	9101      	str	r1, [sp, #4]
 80007b2:	68a5      	ldr	r5, [r4, #8]
 80007b4:	6867      	ldr	r7, [r4, #4]
 80007b6:	3f01      	subs	r7, #1
 80007b8:	d504      	bpl.n	80007c4 <_fwalk_sglue+0x1c>
 80007ba:	6824      	ldr	r4, [r4, #0]
 80007bc:	2c00      	cmp	r4, #0
 80007be:	d1f8      	bne.n	80007b2 <_fwalk_sglue+0xa>
 80007c0:	0030      	movs	r0, r6
 80007c2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80007c4:	89ab      	ldrh	r3, [r5, #12]
 80007c6:	2b01      	cmp	r3, #1
 80007c8:	d908      	bls.n	80007dc <_fwalk_sglue+0x34>
 80007ca:	220e      	movs	r2, #14
 80007cc:	5eab      	ldrsh	r3, [r5, r2]
 80007ce:	3301      	adds	r3, #1
 80007d0:	d004      	beq.n	80007dc <_fwalk_sglue+0x34>
 80007d2:	0029      	movs	r1, r5
 80007d4:	9800      	ldr	r0, [sp, #0]
 80007d6:	9b01      	ldr	r3, [sp, #4]
 80007d8:	4798      	blx	r3
 80007da:	4306      	orrs	r6, r0
 80007dc:	3568      	adds	r5, #104	@ 0x68
 80007de:	e7ea      	b.n	80007b6 <_fwalk_sglue+0xe>

080007e0 <iprintf>:
 80007e0:	b40f      	push	{r0, r1, r2, r3}
 80007e2:	b507      	push	{r0, r1, r2, lr}
 80007e4:	4905      	ldr	r1, [pc, #20]	@ (80007fc <iprintf+0x1c>)
 80007e6:	ab04      	add	r3, sp, #16
 80007e8:	6808      	ldr	r0, [r1, #0]
 80007ea:	cb04      	ldmia	r3!, {r2}
 80007ec:	6881      	ldr	r1, [r0, #8]
 80007ee:	9301      	str	r3, [sp, #4]
 80007f0:	f000 f9fa 	bl	8000be8 <_vfiprintf_r>
 80007f4:	b003      	add	sp, #12
 80007f6:	bc08      	pop	{r3}
 80007f8:	b004      	add	sp, #16
 80007fa:	4718      	bx	r3
 80007fc:	2000000c 	.word	0x2000000c

08000800 <__sread>:
 8000800:	b570      	push	{r4, r5, r6, lr}
 8000802:	000c      	movs	r4, r1
 8000804:	250e      	movs	r5, #14
 8000806:	5f49      	ldrsh	r1, [r1, r5]
 8000808:	f000 f874 	bl	80008f4 <_read_r>
 800080c:	2800      	cmp	r0, #0
 800080e:	db03      	blt.n	8000818 <__sread+0x18>
 8000810:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8000812:	181b      	adds	r3, r3, r0
 8000814:	6563      	str	r3, [r4, #84]	@ 0x54
 8000816:	bd70      	pop	{r4, r5, r6, pc}
 8000818:	89a3      	ldrh	r3, [r4, #12]
 800081a:	4a02      	ldr	r2, [pc, #8]	@ (8000824 <__sread+0x24>)
 800081c:	4013      	ands	r3, r2
 800081e:	81a3      	strh	r3, [r4, #12]
 8000820:	e7f9      	b.n	8000816 <__sread+0x16>
 8000822:	46c0      	nop			@ (mov r8, r8)
 8000824:	ffffefff 	.word	0xffffefff

08000828 <__swrite>:
 8000828:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800082a:	001f      	movs	r7, r3
 800082c:	898b      	ldrh	r3, [r1, #12]
 800082e:	0005      	movs	r5, r0
 8000830:	000c      	movs	r4, r1
 8000832:	0016      	movs	r6, r2
 8000834:	05db      	lsls	r3, r3, #23
 8000836:	d505      	bpl.n	8000844 <__swrite+0x1c>
 8000838:	230e      	movs	r3, #14
 800083a:	5ec9      	ldrsh	r1, [r1, r3]
 800083c:	2200      	movs	r2, #0
 800083e:	2302      	movs	r3, #2
 8000840:	f000 f844 	bl	80008cc <_lseek_r>
 8000844:	89a3      	ldrh	r3, [r4, #12]
 8000846:	4a05      	ldr	r2, [pc, #20]	@ (800085c <__swrite+0x34>)
 8000848:	0028      	movs	r0, r5
 800084a:	4013      	ands	r3, r2
 800084c:	81a3      	strh	r3, [r4, #12]
 800084e:	0032      	movs	r2, r6
 8000850:	230e      	movs	r3, #14
 8000852:	5ee1      	ldrsh	r1, [r4, r3]
 8000854:	003b      	movs	r3, r7
 8000856:	f000 f861 	bl	800091c <_write_r>
 800085a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800085c:	ffffefff 	.word	0xffffefff

08000860 <__sseek>:
 8000860:	b570      	push	{r4, r5, r6, lr}
 8000862:	000c      	movs	r4, r1
 8000864:	250e      	movs	r5, #14
 8000866:	5f49      	ldrsh	r1, [r1, r5]
 8000868:	f000 f830 	bl	80008cc <_lseek_r>
 800086c:	89a3      	ldrh	r3, [r4, #12]
 800086e:	1c42      	adds	r2, r0, #1
 8000870:	d103      	bne.n	800087a <__sseek+0x1a>
 8000872:	4a05      	ldr	r2, [pc, #20]	@ (8000888 <__sseek+0x28>)
 8000874:	4013      	ands	r3, r2
 8000876:	81a3      	strh	r3, [r4, #12]
 8000878:	bd70      	pop	{r4, r5, r6, pc}
 800087a:	2280      	movs	r2, #128	@ 0x80
 800087c:	0152      	lsls	r2, r2, #5
 800087e:	4313      	orrs	r3, r2
 8000880:	81a3      	strh	r3, [r4, #12]
 8000882:	6560      	str	r0, [r4, #84]	@ 0x54
 8000884:	e7f8      	b.n	8000878 <__sseek+0x18>
 8000886:	46c0      	nop			@ (mov r8, r8)
 8000888:	ffffefff 	.word	0xffffefff

0800088c <__sclose>:
 800088c:	b510      	push	{r4, lr}
 800088e:	230e      	movs	r3, #14
 8000890:	5ec9      	ldrsh	r1, [r1, r3]
 8000892:	f000 f809 	bl	80008a8 <_close_r>
 8000896:	bd10      	pop	{r4, pc}

08000898 <memset>:
 8000898:	0003      	movs	r3, r0
 800089a:	1882      	adds	r2, r0, r2
 800089c:	4293      	cmp	r3, r2
 800089e:	d100      	bne.n	80008a2 <memset+0xa>
 80008a0:	4770      	bx	lr
 80008a2:	7019      	strb	r1, [r3, #0]
 80008a4:	3301      	adds	r3, #1
 80008a6:	e7f9      	b.n	800089c <memset+0x4>

080008a8 <_close_r>:
 80008a8:	2300      	movs	r3, #0
 80008aa:	b570      	push	{r4, r5, r6, lr}
 80008ac:	4d06      	ldr	r5, [pc, #24]	@ (80008c8 <_close_r+0x20>)
 80008ae:	0004      	movs	r4, r0
 80008b0:	0008      	movs	r0, r1
 80008b2:	602b      	str	r3, [r5, #0]
 80008b4:	f7ff fd31 	bl	800031a <_close>
 80008b8:	1c43      	adds	r3, r0, #1
 80008ba:	d103      	bne.n	80008c4 <_close_r+0x1c>
 80008bc:	682b      	ldr	r3, [r5, #0]
 80008be:	2b00      	cmp	r3, #0
 80008c0:	d000      	beq.n	80008c4 <_close_r+0x1c>
 80008c2:	6023      	str	r3, [r4, #0]
 80008c4:	bd70      	pop	{r4, r5, r6, pc}
 80008c6:	46c0      	nop			@ (mov r8, r8)
 80008c8:	200001c0 	.word	0x200001c0

080008cc <_lseek_r>:
 80008cc:	b570      	push	{r4, r5, r6, lr}
 80008ce:	0004      	movs	r4, r0
 80008d0:	0008      	movs	r0, r1
 80008d2:	0011      	movs	r1, r2
 80008d4:	001a      	movs	r2, r3
 80008d6:	2300      	movs	r3, #0
 80008d8:	4d05      	ldr	r5, [pc, #20]	@ (80008f0 <_lseek_r+0x24>)
 80008da:	602b      	str	r3, [r5, #0]
 80008dc:	f7ff fd3e 	bl	800035c <_lseek>
 80008e0:	1c43      	adds	r3, r0, #1
 80008e2:	d103      	bne.n	80008ec <_lseek_r+0x20>
 80008e4:	682b      	ldr	r3, [r5, #0]
 80008e6:	2b00      	cmp	r3, #0
 80008e8:	d000      	beq.n	80008ec <_lseek_r+0x20>
 80008ea:	6023      	str	r3, [r4, #0]
 80008ec:	bd70      	pop	{r4, r5, r6, pc}
 80008ee:	46c0      	nop			@ (mov r8, r8)
 80008f0:	200001c0 	.word	0x200001c0

080008f4 <_read_r>:
 80008f4:	b570      	push	{r4, r5, r6, lr}
 80008f6:	0004      	movs	r4, r0
 80008f8:	0008      	movs	r0, r1
 80008fa:	0011      	movs	r1, r2
 80008fc:	001a      	movs	r2, r3
 80008fe:	2300      	movs	r3, #0
 8000900:	4d05      	ldr	r5, [pc, #20]	@ (8000918 <_read_r+0x24>)
 8000902:	602b      	str	r3, [r5, #0]
 8000904:	f7ff fcd0 	bl	80002a8 <_read>
 8000908:	1c43      	adds	r3, r0, #1
 800090a:	d103      	bne.n	8000914 <_read_r+0x20>
 800090c:	682b      	ldr	r3, [r5, #0]
 800090e:	2b00      	cmp	r3, #0
 8000910:	d000      	beq.n	8000914 <_read_r+0x20>
 8000912:	6023      	str	r3, [r4, #0]
 8000914:	bd70      	pop	{r4, r5, r6, pc}
 8000916:	46c0      	nop			@ (mov r8, r8)
 8000918:	200001c0 	.word	0x200001c0

0800091c <_write_r>:
 800091c:	b570      	push	{r4, r5, r6, lr}
 800091e:	0004      	movs	r4, r0
 8000920:	0008      	movs	r0, r1
 8000922:	0011      	movs	r1, r2
 8000924:	001a      	movs	r2, r3
 8000926:	2300      	movs	r3, #0
 8000928:	4d05      	ldr	r5, [pc, #20]	@ (8000940 <_write_r+0x24>)
 800092a:	602b      	str	r3, [r5, #0]
 800092c:	f7ff fcd9 	bl	80002e2 <_write>
 8000930:	1c43      	adds	r3, r0, #1
 8000932:	d103      	bne.n	800093c <_write_r+0x20>
 8000934:	682b      	ldr	r3, [r5, #0]
 8000936:	2b00      	cmp	r3, #0
 8000938:	d000      	beq.n	800093c <_write_r+0x20>
 800093a:	6023      	str	r3, [r4, #0]
 800093c:	bd70      	pop	{r4, r5, r6, pc}
 800093e:	46c0      	nop			@ (mov r8, r8)
 8000940:	200001c0 	.word	0x200001c0

08000944 <__errno>:
 8000944:	4b01      	ldr	r3, [pc, #4]	@ (800094c <__errno+0x8>)
 8000946:	6818      	ldr	r0, [r3, #0]
 8000948:	4770      	bx	lr
 800094a:	46c0      	nop			@ (mov r8, r8)
 800094c:	2000000c 	.word	0x2000000c

08000950 <__libc_init_array>:
 8000950:	b570      	push	{r4, r5, r6, lr}
 8000952:	2600      	movs	r6, #0
 8000954:	4c0c      	ldr	r4, [pc, #48]	@ (8000988 <__libc_init_array+0x38>)
 8000956:	4d0d      	ldr	r5, [pc, #52]	@ (800098c <__libc_init_array+0x3c>)
 8000958:	1b64      	subs	r4, r4, r5
 800095a:	10a4      	asrs	r4, r4, #2
 800095c:	42a6      	cmp	r6, r4
 800095e:	d109      	bne.n	8000974 <__libc_init_array+0x24>
 8000960:	2600      	movs	r6, #0
 8000962:	f000 fdd9 	bl	8001518 <_init>
 8000966:	4c0a      	ldr	r4, [pc, #40]	@ (8000990 <__libc_init_array+0x40>)
 8000968:	4d0a      	ldr	r5, [pc, #40]	@ (8000994 <__libc_init_array+0x44>)
 800096a:	1b64      	subs	r4, r4, r5
 800096c:	10a4      	asrs	r4, r4, #2
 800096e:	42a6      	cmp	r6, r4
 8000970:	d105      	bne.n	800097e <__libc_init_array+0x2e>
 8000972:	bd70      	pop	{r4, r5, r6, pc}
 8000974:	00b3      	lsls	r3, r6, #2
 8000976:	58eb      	ldr	r3, [r5, r3]
 8000978:	4798      	blx	r3
 800097a:	3601      	adds	r6, #1
 800097c:	e7ee      	b.n	800095c <__libc_init_array+0xc>
 800097e:	00b3      	lsls	r3, r6, #2
 8000980:	58eb      	ldr	r3, [r5, r3]
 8000982:	4798      	blx	r3
 8000984:	3601      	adds	r6, #1
 8000986:	e7f2      	b.n	800096e <__libc_init_array+0x1e>
 8000988:	0800159c 	.word	0x0800159c
 800098c:	0800159c 	.word	0x0800159c
 8000990:	080015a0 	.word	0x080015a0
 8000994:	0800159c 	.word	0x0800159c

08000998 <__retarget_lock_init_recursive>:
 8000998:	4770      	bx	lr

0800099a <__retarget_lock_acquire_recursive>:
 800099a:	4770      	bx	lr

0800099c <__retarget_lock_release_recursive>:
 800099c:	4770      	bx	lr
	...

080009a0 <_free_r>:
 80009a0:	b570      	push	{r4, r5, r6, lr}
 80009a2:	0005      	movs	r5, r0
 80009a4:	1e0c      	subs	r4, r1, #0
 80009a6:	d010      	beq.n	80009ca <_free_r+0x2a>
 80009a8:	3c04      	subs	r4, #4
 80009aa:	6823      	ldr	r3, [r4, #0]
 80009ac:	2b00      	cmp	r3, #0
 80009ae:	da00      	bge.n	80009b2 <_free_r+0x12>
 80009b0:	18e4      	adds	r4, r4, r3
 80009b2:	0028      	movs	r0, r5
 80009b4:	f000 f8e0 	bl	8000b78 <__malloc_lock>
 80009b8:	4a1d      	ldr	r2, [pc, #116]	@ (8000a30 <_free_r+0x90>)
 80009ba:	6813      	ldr	r3, [r2, #0]
 80009bc:	2b00      	cmp	r3, #0
 80009be:	d105      	bne.n	80009cc <_free_r+0x2c>
 80009c0:	6063      	str	r3, [r4, #4]
 80009c2:	6014      	str	r4, [r2, #0]
 80009c4:	0028      	movs	r0, r5
 80009c6:	f000 f8df 	bl	8000b88 <__malloc_unlock>
 80009ca:	bd70      	pop	{r4, r5, r6, pc}
 80009cc:	42a3      	cmp	r3, r4
 80009ce:	d908      	bls.n	80009e2 <_free_r+0x42>
 80009d0:	6820      	ldr	r0, [r4, #0]
 80009d2:	1821      	adds	r1, r4, r0
 80009d4:	428b      	cmp	r3, r1
 80009d6:	d1f3      	bne.n	80009c0 <_free_r+0x20>
 80009d8:	6819      	ldr	r1, [r3, #0]
 80009da:	685b      	ldr	r3, [r3, #4]
 80009dc:	1809      	adds	r1, r1, r0
 80009de:	6021      	str	r1, [r4, #0]
 80009e0:	e7ee      	b.n	80009c0 <_free_r+0x20>
 80009e2:	001a      	movs	r2, r3
 80009e4:	685b      	ldr	r3, [r3, #4]
 80009e6:	2b00      	cmp	r3, #0
 80009e8:	d001      	beq.n	80009ee <_free_r+0x4e>
 80009ea:	42a3      	cmp	r3, r4
 80009ec:	d9f9      	bls.n	80009e2 <_free_r+0x42>
 80009ee:	6811      	ldr	r1, [r2, #0]
 80009f0:	1850      	adds	r0, r2, r1
 80009f2:	42a0      	cmp	r0, r4
 80009f4:	d10b      	bne.n	8000a0e <_free_r+0x6e>
 80009f6:	6820      	ldr	r0, [r4, #0]
 80009f8:	1809      	adds	r1, r1, r0
 80009fa:	1850      	adds	r0, r2, r1
 80009fc:	6011      	str	r1, [r2, #0]
 80009fe:	4283      	cmp	r3, r0
 8000a00:	d1e0      	bne.n	80009c4 <_free_r+0x24>
 8000a02:	6818      	ldr	r0, [r3, #0]
 8000a04:	685b      	ldr	r3, [r3, #4]
 8000a06:	1841      	adds	r1, r0, r1
 8000a08:	6011      	str	r1, [r2, #0]
 8000a0a:	6053      	str	r3, [r2, #4]
 8000a0c:	e7da      	b.n	80009c4 <_free_r+0x24>
 8000a0e:	42a0      	cmp	r0, r4
 8000a10:	d902      	bls.n	8000a18 <_free_r+0x78>
 8000a12:	230c      	movs	r3, #12
 8000a14:	602b      	str	r3, [r5, #0]
 8000a16:	e7d5      	b.n	80009c4 <_free_r+0x24>
 8000a18:	6820      	ldr	r0, [r4, #0]
 8000a1a:	1821      	adds	r1, r4, r0
 8000a1c:	428b      	cmp	r3, r1
 8000a1e:	d103      	bne.n	8000a28 <_free_r+0x88>
 8000a20:	6819      	ldr	r1, [r3, #0]
 8000a22:	685b      	ldr	r3, [r3, #4]
 8000a24:	1809      	adds	r1, r1, r0
 8000a26:	6021      	str	r1, [r4, #0]
 8000a28:	6063      	str	r3, [r4, #4]
 8000a2a:	6054      	str	r4, [r2, #4]
 8000a2c:	e7ca      	b.n	80009c4 <_free_r+0x24>
 8000a2e:	46c0      	nop			@ (mov r8, r8)
 8000a30:	200001cc 	.word	0x200001cc

08000a34 <sbrk_aligned>:
 8000a34:	b570      	push	{r4, r5, r6, lr}
 8000a36:	4e0f      	ldr	r6, [pc, #60]	@ (8000a74 <sbrk_aligned+0x40>)
 8000a38:	000d      	movs	r5, r1
 8000a3a:	6831      	ldr	r1, [r6, #0]
 8000a3c:	0004      	movs	r4, r0
 8000a3e:	2900      	cmp	r1, #0
 8000a40:	d102      	bne.n	8000a48 <sbrk_aligned+0x14>
 8000a42:	f000 fcbb 	bl	80013bc <_sbrk_r>
 8000a46:	6030      	str	r0, [r6, #0]
 8000a48:	0029      	movs	r1, r5
 8000a4a:	0020      	movs	r0, r4
 8000a4c:	f000 fcb6 	bl	80013bc <_sbrk_r>
 8000a50:	1c43      	adds	r3, r0, #1
 8000a52:	d103      	bne.n	8000a5c <sbrk_aligned+0x28>
 8000a54:	2501      	movs	r5, #1
 8000a56:	426d      	negs	r5, r5
 8000a58:	0028      	movs	r0, r5
 8000a5a:	bd70      	pop	{r4, r5, r6, pc}
 8000a5c:	2303      	movs	r3, #3
 8000a5e:	1cc5      	adds	r5, r0, #3
 8000a60:	439d      	bics	r5, r3
 8000a62:	42a8      	cmp	r0, r5
 8000a64:	d0f8      	beq.n	8000a58 <sbrk_aligned+0x24>
 8000a66:	1a29      	subs	r1, r5, r0
 8000a68:	0020      	movs	r0, r4
 8000a6a:	f000 fca7 	bl	80013bc <_sbrk_r>
 8000a6e:	3001      	adds	r0, #1
 8000a70:	d1f2      	bne.n	8000a58 <sbrk_aligned+0x24>
 8000a72:	e7ef      	b.n	8000a54 <sbrk_aligned+0x20>
 8000a74:	200001c8 	.word	0x200001c8

08000a78 <_malloc_r>:
 8000a78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000a7a:	2203      	movs	r2, #3
 8000a7c:	1ccb      	adds	r3, r1, #3
 8000a7e:	4393      	bics	r3, r2
 8000a80:	3308      	adds	r3, #8
 8000a82:	0005      	movs	r5, r0
 8000a84:	001f      	movs	r7, r3
 8000a86:	2b0c      	cmp	r3, #12
 8000a88:	d234      	bcs.n	8000af4 <_malloc_r+0x7c>
 8000a8a:	270c      	movs	r7, #12
 8000a8c:	42b9      	cmp	r1, r7
 8000a8e:	d833      	bhi.n	8000af8 <_malloc_r+0x80>
 8000a90:	0028      	movs	r0, r5
 8000a92:	f000 f871 	bl	8000b78 <__malloc_lock>
 8000a96:	4e37      	ldr	r6, [pc, #220]	@ (8000b74 <_malloc_r+0xfc>)
 8000a98:	6833      	ldr	r3, [r6, #0]
 8000a9a:	001c      	movs	r4, r3
 8000a9c:	2c00      	cmp	r4, #0
 8000a9e:	d12f      	bne.n	8000b00 <_malloc_r+0x88>
 8000aa0:	0039      	movs	r1, r7
 8000aa2:	0028      	movs	r0, r5
 8000aa4:	f7ff ffc6 	bl	8000a34 <sbrk_aligned>
 8000aa8:	0004      	movs	r4, r0
 8000aaa:	1c43      	adds	r3, r0, #1
 8000aac:	d15f      	bne.n	8000b6e <_malloc_r+0xf6>
 8000aae:	6834      	ldr	r4, [r6, #0]
 8000ab0:	9400      	str	r4, [sp, #0]
 8000ab2:	9b00      	ldr	r3, [sp, #0]
 8000ab4:	2b00      	cmp	r3, #0
 8000ab6:	d14a      	bne.n	8000b4e <_malloc_r+0xd6>
 8000ab8:	2c00      	cmp	r4, #0
 8000aba:	d052      	beq.n	8000b62 <_malloc_r+0xea>
 8000abc:	6823      	ldr	r3, [r4, #0]
 8000abe:	0028      	movs	r0, r5
 8000ac0:	18e3      	adds	r3, r4, r3
 8000ac2:	9900      	ldr	r1, [sp, #0]
 8000ac4:	9301      	str	r3, [sp, #4]
 8000ac6:	f000 fc79 	bl	80013bc <_sbrk_r>
 8000aca:	9b01      	ldr	r3, [sp, #4]
 8000acc:	4283      	cmp	r3, r0
 8000ace:	d148      	bne.n	8000b62 <_malloc_r+0xea>
 8000ad0:	6823      	ldr	r3, [r4, #0]
 8000ad2:	0028      	movs	r0, r5
 8000ad4:	1aff      	subs	r7, r7, r3
 8000ad6:	0039      	movs	r1, r7
 8000ad8:	f7ff ffac 	bl	8000a34 <sbrk_aligned>
 8000adc:	3001      	adds	r0, #1
 8000ade:	d040      	beq.n	8000b62 <_malloc_r+0xea>
 8000ae0:	6823      	ldr	r3, [r4, #0]
 8000ae2:	19db      	adds	r3, r3, r7
 8000ae4:	6023      	str	r3, [r4, #0]
 8000ae6:	6833      	ldr	r3, [r6, #0]
 8000ae8:	685a      	ldr	r2, [r3, #4]
 8000aea:	2a00      	cmp	r2, #0
 8000aec:	d133      	bne.n	8000b56 <_malloc_r+0xde>
 8000aee:	9b00      	ldr	r3, [sp, #0]
 8000af0:	6033      	str	r3, [r6, #0]
 8000af2:	e019      	b.n	8000b28 <_malloc_r+0xb0>
 8000af4:	2b00      	cmp	r3, #0
 8000af6:	dac9      	bge.n	8000a8c <_malloc_r+0x14>
 8000af8:	230c      	movs	r3, #12
 8000afa:	602b      	str	r3, [r5, #0]
 8000afc:	2000      	movs	r0, #0
 8000afe:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000b00:	6821      	ldr	r1, [r4, #0]
 8000b02:	1bc9      	subs	r1, r1, r7
 8000b04:	d420      	bmi.n	8000b48 <_malloc_r+0xd0>
 8000b06:	290b      	cmp	r1, #11
 8000b08:	d90a      	bls.n	8000b20 <_malloc_r+0xa8>
 8000b0a:	19e2      	adds	r2, r4, r7
 8000b0c:	6027      	str	r7, [r4, #0]
 8000b0e:	42a3      	cmp	r3, r4
 8000b10:	d104      	bne.n	8000b1c <_malloc_r+0xa4>
 8000b12:	6032      	str	r2, [r6, #0]
 8000b14:	6863      	ldr	r3, [r4, #4]
 8000b16:	6011      	str	r1, [r2, #0]
 8000b18:	6053      	str	r3, [r2, #4]
 8000b1a:	e005      	b.n	8000b28 <_malloc_r+0xb0>
 8000b1c:	605a      	str	r2, [r3, #4]
 8000b1e:	e7f9      	b.n	8000b14 <_malloc_r+0x9c>
 8000b20:	6862      	ldr	r2, [r4, #4]
 8000b22:	42a3      	cmp	r3, r4
 8000b24:	d10e      	bne.n	8000b44 <_malloc_r+0xcc>
 8000b26:	6032      	str	r2, [r6, #0]
 8000b28:	0028      	movs	r0, r5
 8000b2a:	f000 f82d 	bl	8000b88 <__malloc_unlock>
 8000b2e:	0020      	movs	r0, r4
 8000b30:	2207      	movs	r2, #7
 8000b32:	300b      	adds	r0, #11
 8000b34:	1d23      	adds	r3, r4, #4
 8000b36:	4390      	bics	r0, r2
 8000b38:	1ac2      	subs	r2, r0, r3
 8000b3a:	4298      	cmp	r0, r3
 8000b3c:	d0df      	beq.n	8000afe <_malloc_r+0x86>
 8000b3e:	1a1b      	subs	r3, r3, r0
 8000b40:	50a3      	str	r3, [r4, r2]
 8000b42:	e7dc      	b.n	8000afe <_malloc_r+0x86>
 8000b44:	605a      	str	r2, [r3, #4]
 8000b46:	e7ef      	b.n	8000b28 <_malloc_r+0xb0>
 8000b48:	0023      	movs	r3, r4
 8000b4a:	6864      	ldr	r4, [r4, #4]
 8000b4c:	e7a6      	b.n	8000a9c <_malloc_r+0x24>
 8000b4e:	9c00      	ldr	r4, [sp, #0]
 8000b50:	6863      	ldr	r3, [r4, #4]
 8000b52:	9300      	str	r3, [sp, #0]
 8000b54:	e7ad      	b.n	8000ab2 <_malloc_r+0x3a>
 8000b56:	001a      	movs	r2, r3
 8000b58:	685b      	ldr	r3, [r3, #4]
 8000b5a:	42a3      	cmp	r3, r4
 8000b5c:	d1fb      	bne.n	8000b56 <_malloc_r+0xde>
 8000b5e:	2300      	movs	r3, #0
 8000b60:	e7da      	b.n	8000b18 <_malloc_r+0xa0>
 8000b62:	230c      	movs	r3, #12
 8000b64:	0028      	movs	r0, r5
 8000b66:	602b      	str	r3, [r5, #0]
 8000b68:	f000 f80e 	bl	8000b88 <__malloc_unlock>
 8000b6c:	e7c6      	b.n	8000afc <_malloc_r+0x84>
 8000b6e:	6007      	str	r7, [r0, #0]
 8000b70:	e7da      	b.n	8000b28 <_malloc_r+0xb0>
 8000b72:	46c0      	nop			@ (mov r8, r8)
 8000b74:	200001cc 	.word	0x200001cc

08000b78 <__malloc_lock>:
 8000b78:	b510      	push	{r4, lr}
 8000b7a:	4802      	ldr	r0, [pc, #8]	@ (8000b84 <__malloc_lock+0xc>)
 8000b7c:	f7ff ff0d 	bl	800099a <__retarget_lock_acquire_recursive>
 8000b80:	bd10      	pop	{r4, pc}
 8000b82:	46c0      	nop			@ (mov r8, r8)
 8000b84:	200001c4 	.word	0x200001c4

08000b88 <__malloc_unlock>:
 8000b88:	b510      	push	{r4, lr}
 8000b8a:	4802      	ldr	r0, [pc, #8]	@ (8000b94 <__malloc_unlock+0xc>)
 8000b8c:	f7ff ff06 	bl	800099c <__retarget_lock_release_recursive>
 8000b90:	bd10      	pop	{r4, pc}
 8000b92:	46c0      	nop			@ (mov r8, r8)
 8000b94:	200001c4 	.word	0x200001c4

08000b98 <__sfputc_r>:
 8000b98:	6893      	ldr	r3, [r2, #8]
 8000b9a:	b510      	push	{r4, lr}
 8000b9c:	3b01      	subs	r3, #1
 8000b9e:	6093      	str	r3, [r2, #8]
 8000ba0:	2b00      	cmp	r3, #0
 8000ba2:	da04      	bge.n	8000bae <__sfputc_r+0x16>
 8000ba4:	6994      	ldr	r4, [r2, #24]
 8000ba6:	42a3      	cmp	r3, r4
 8000ba8:	db07      	blt.n	8000bba <__sfputc_r+0x22>
 8000baa:	290a      	cmp	r1, #10
 8000bac:	d005      	beq.n	8000bba <__sfputc_r+0x22>
 8000bae:	6813      	ldr	r3, [r2, #0]
 8000bb0:	1c58      	adds	r0, r3, #1
 8000bb2:	6010      	str	r0, [r2, #0]
 8000bb4:	7019      	strb	r1, [r3, #0]
 8000bb6:	0008      	movs	r0, r1
 8000bb8:	bd10      	pop	{r4, pc}
 8000bba:	f000 fb5e 	bl	800127a <__swbuf_r>
 8000bbe:	0001      	movs	r1, r0
 8000bc0:	e7f9      	b.n	8000bb6 <__sfputc_r+0x1e>

08000bc2 <__sfputs_r>:
 8000bc2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bc4:	0006      	movs	r6, r0
 8000bc6:	000f      	movs	r7, r1
 8000bc8:	0014      	movs	r4, r2
 8000bca:	18d5      	adds	r5, r2, r3
 8000bcc:	42ac      	cmp	r4, r5
 8000bce:	d101      	bne.n	8000bd4 <__sfputs_r+0x12>
 8000bd0:	2000      	movs	r0, #0
 8000bd2:	e007      	b.n	8000be4 <__sfputs_r+0x22>
 8000bd4:	7821      	ldrb	r1, [r4, #0]
 8000bd6:	003a      	movs	r2, r7
 8000bd8:	0030      	movs	r0, r6
 8000bda:	f7ff ffdd 	bl	8000b98 <__sfputc_r>
 8000bde:	3401      	adds	r4, #1
 8000be0:	1c43      	adds	r3, r0, #1
 8000be2:	d1f3      	bne.n	8000bcc <__sfputs_r+0xa>
 8000be4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000be8 <_vfiprintf_r>:
 8000be8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000bea:	b0a1      	sub	sp, #132	@ 0x84
 8000bec:	000f      	movs	r7, r1
 8000bee:	0015      	movs	r5, r2
 8000bf0:	001e      	movs	r6, r3
 8000bf2:	9003      	str	r0, [sp, #12]
 8000bf4:	2800      	cmp	r0, #0
 8000bf6:	d004      	beq.n	8000c02 <_vfiprintf_r+0x1a>
 8000bf8:	6a03      	ldr	r3, [r0, #32]
 8000bfa:	2b00      	cmp	r3, #0
 8000bfc:	d101      	bne.n	8000c02 <_vfiprintf_r+0x1a>
 8000bfe:	f7ff fdbb 	bl	8000778 <__sinit>
 8000c02:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8000c04:	07db      	lsls	r3, r3, #31
 8000c06:	d405      	bmi.n	8000c14 <_vfiprintf_r+0x2c>
 8000c08:	89bb      	ldrh	r3, [r7, #12]
 8000c0a:	059b      	lsls	r3, r3, #22
 8000c0c:	d402      	bmi.n	8000c14 <_vfiprintf_r+0x2c>
 8000c0e:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8000c10:	f7ff fec3 	bl	800099a <__retarget_lock_acquire_recursive>
 8000c14:	89bb      	ldrh	r3, [r7, #12]
 8000c16:	071b      	lsls	r3, r3, #28
 8000c18:	d502      	bpl.n	8000c20 <_vfiprintf_r+0x38>
 8000c1a:	693b      	ldr	r3, [r7, #16]
 8000c1c:	2b00      	cmp	r3, #0
 8000c1e:	d113      	bne.n	8000c48 <_vfiprintf_r+0x60>
 8000c20:	0039      	movs	r1, r7
 8000c22:	9803      	ldr	r0, [sp, #12]
 8000c24:	f000 fb6c 	bl	8001300 <__swsetup_r>
 8000c28:	2800      	cmp	r0, #0
 8000c2a:	d00d      	beq.n	8000c48 <_vfiprintf_r+0x60>
 8000c2c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8000c2e:	07db      	lsls	r3, r3, #31
 8000c30:	d503      	bpl.n	8000c3a <_vfiprintf_r+0x52>
 8000c32:	2001      	movs	r0, #1
 8000c34:	4240      	negs	r0, r0
 8000c36:	b021      	add	sp, #132	@ 0x84
 8000c38:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c3a:	89bb      	ldrh	r3, [r7, #12]
 8000c3c:	059b      	lsls	r3, r3, #22
 8000c3e:	d4f8      	bmi.n	8000c32 <_vfiprintf_r+0x4a>
 8000c40:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8000c42:	f7ff feab 	bl	800099c <__retarget_lock_release_recursive>
 8000c46:	e7f4      	b.n	8000c32 <_vfiprintf_r+0x4a>
 8000c48:	2300      	movs	r3, #0
 8000c4a:	ac08      	add	r4, sp, #32
 8000c4c:	6163      	str	r3, [r4, #20]
 8000c4e:	3320      	adds	r3, #32
 8000c50:	7663      	strb	r3, [r4, #25]
 8000c52:	3310      	adds	r3, #16
 8000c54:	76a3      	strb	r3, [r4, #26]
 8000c56:	9607      	str	r6, [sp, #28]
 8000c58:	002e      	movs	r6, r5
 8000c5a:	7833      	ldrb	r3, [r6, #0]
 8000c5c:	2b00      	cmp	r3, #0
 8000c5e:	d001      	beq.n	8000c64 <_vfiprintf_r+0x7c>
 8000c60:	2b25      	cmp	r3, #37	@ 0x25
 8000c62:	d148      	bne.n	8000cf6 <_vfiprintf_r+0x10e>
 8000c64:	1b73      	subs	r3, r6, r5
 8000c66:	9305      	str	r3, [sp, #20]
 8000c68:	42ae      	cmp	r6, r5
 8000c6a:	d00b      	beq.n	8000c84 <_vfiprintf_r+0x9c>
 8000c6c:	002a      	movs	r2, r5
 8000c6e:	0039      	movs	r1, r7
 8000c70:	9803      	ldr	r0, [sp, #12]
 8000c72:	f7ff ffa6 	bl	8000bc2 <__sfputs_r>
 8000c76:	3001      	adds	r0, #1
 8000c78:	d100      	bne.n	8000c7c <_vfiprintf_r+0x94>
 8000c7a:	e0ae      	b.n	8000dda <_vfiprintf_r+0x1f2>
 8000c7c:	6963      	ldr	r3, [r4, #20]
 8000c7e:	9a05      	ldr	r2, [sp, #20]
 8000c80:	189b      	adds	r3, r3, r2
 8000c82:	6163      	str	r3, [r4, #20]
 8000c84:	7833      	ldrb	r3, [r6, #0]
 8000c86:	2b00      	cmp	r3, #0
 8000c88:	d100      	bne.n	8000c8c <_vfiprintf_r+0xa4>
 8000c8a:	e0a6      	b.n	8000dda <_vfiprintf_r+0x1f2>
 8000c8c:	2201      	movs	r2, #1
 8000c8e:	2300      	movs	r3, #0
 8000c90:	4252      	negs	r2, r2
 8000c92:	6062      	str	r2, [r4, #4]
 8000c94:	a904      	add	r1, sp, #16
 8000c96:	3254      	adds	r2, #84	@ 0x54
 8000c98:	1852      	adds	r2, r2, r1
 8000c9a:	1c75      	adds	r5, r6, #1
 8000c9c:	6023      	str	r3, [r4, #0]
 8000c9e:	60e3      	str	r3, [r4, #12]
 8000ca0:	60a3      	str	r3, [r4, #8]
 8000ca2:	7013      	strb	r3, [r2, #0]
 8000ca4:	65a3      	str	r3, [r4, #88]	@ 0x58
 8000ca6:	4b59      	ldr	r3, [pc, #356]	@ (8000e0c <_vfiprintf_r+0x224>)
 8000ca8:	2205      	movs	r2, #5
 8000caa:	0018      	movs	r0, r3
 8000cac:	7829      	ldrb	r1, [r5, #0]
 8000cae:	9305      	str	r3, [sp, #20]
 8000cb0:	f000 fb96 	bl	80013e0 <memchr>
 8000cb4:	1c6e      	adds	r6, r5, #1
 8000cb6:	2800      	cmp	r0, #0
 8000cb8:	d11f      	bne.n	8000cfa <_vfiprintf_r+0x112>
 8000cba:	6822      	ldr	r2, [r4, #0]
 8000cbc:	06d3      	lsls	r3, r2, #27
 8000cbe:	d504      	bpl.n	8000cca <_vfiprintf_r+0xe2>
 8000cc0:	2353      	movs	r3, #83	@ 0x53
 8000cc2:	a904      	add	r1, sp, #16
 8000cc4:	185b      	adds	r3, r3, r1
 8000cc6:	2120      	movs	r1, #32
 8000cc8:	7019      	strb	r1, [r3, #0]
 8000cca:	0713      	lsls	r3, r2, #28
 8000ccc:	d504      	bpl.n	8000cd8 <_vfiprintf_r+0xf0>
 8000cce:	2353      	movs	r3, #83	@ 0x53
 8000cd0:	a904      	add	r1, sp, #16
 8000cd2:	185b      	adds	r3, r3, r1
 8000cd4:	212b      	movs	r1, #43	@ 0x2b
 8000cd6:	7019      	strb	r1, [r3, #0]
 8000cd8:	782b      	ldrb	r3, [r5, #0]
 8000cda:	2b2a      	cmp	r3, #42	@ 0x2a
 8000cdc:	d016      	beq.n	8000d0c <_vfiprintf_r+0x124>
 8000cde:	002e      	movs	r6, r5
 8000ce0:	2100      	movs	r1, #0
 8000ce2:	200a      	movs	r0, #10
 8000ce4:	68e3      	ldr	r3, [r4, #12]
 8000ce6:	7832      	ldrb	r2, [r6, #0]
 8000ce8:	1c75      	adds	r5, r6, #1
 8000cea:	3a30      	subs	r2, #48	@ 0x30
 8000cec:	2a09      	cmp	r2, #9
 8000cee:	d950      	bls.n	8000d92 <_vfiprintf_r+0x1aa>
 8000cf0:	2900      	cmp	r1, #0
 8000cf2:	d111      	bne.n	8000d18 <_vfiprintf_r+0x130>
 8000cf4:	e017      	b.n	8000d26 <_vfiprintf_r+0x13e>
 8000cf6:	3601      	adds	r6, #1
 8000cf8:	e7af      	b.n	8000c5a <_vfiprintf_r+0x72>
 8000cfa:	9b05      	ldr	r3, [sp, #20]
 8000cfc:	6822      	ldr	r2, [r4, #0]
 8000cfe:	1ac0      	subs	r0, r0, r3
 8000d00:	2301      	movs	r3, #1
 8000d02:	4083      	lsls	r3, r0
 8000d04:	4313      	orrs	r3, r2
 8000d06:	0035      	movs	r5, r6
 8000d08:	6023      	str	r3, [r4, #0]
 8000d0a:	e7cc      	b.n	8000ca6 <_vfiprintf_r+0xbe>
 8000d0c:	9b07      	ldr	r3, [sp, #28]
 8000d0e:	1d19      	adds	r1, r3, #4
 8000d10:	681b      	ldr	r3, [r3, #0]
 8000d12:	9107      	str	r1, [sp, #28]
 8000d14:	2b00      	cmp	r3, #0
 8000d16:	db01      	blt.n	8000d1c <_vfiprintf_r+0x134>
 8000d18:	930b      	str	r3, [sp, #44]	@ 0x2c
 8000d1a:	e004      	b.n	8000d26 <_vfiprintf_r+0x13e>
 8000d1c:	425b      	negs	r3, r3
 8000d1e:	60e3      	str	r3, [r4, #12]
 8000d20:	2302      	movs	r3, #2
 8000d22:	4313      	orrs	r3, r2
 8000d24:	6023      	str	r3, [r4, #0]
 8000d26:	7833      	ldrb	r3, [r6, #0]
 8000d28:	2b2e      	cmp	r3, #46	@ 0x2e
 8000d2a:	d10c      	bne.n	8000d46 <_vfiprintf_r+0x15e>
 8000d2c:	7873      	ldrb	r3, [r6, #1]
 8000d2e:	2b2a      	cmp	r3, #42	@ 0x2a
 8000d30:	d134      	bne.n	8000d9c <_vfiprintf_r+0x1b4>
 8000d32:	9b07      	ldr	r3, [sp, #28]
 8000d34:	3602      	adds	r6, #2
 8000d36:	1d1a      	adds	r2, r3, #4
 8000d38:	681b      	ldr	r3, [r3, #0]
 8000d3a:	9207      	str	r2, [sp, #28]
 8000d3c:	2b00      	cmp	r3, #0
 8000d3e:	da01      	bge.n	8000d44 <_vfiprintf_r+0x15c>
 8000d40:	2301      	movs	r3, #1
 8000d42:	425b      	negs	r3, r3
 8000d44:	9309      	str	r3, [sp, #36]	@ 0x24
 8000d46:	4d32      	ldr	r5, [pc, #200]	@ (8000e10 <_vfiprintf_r+0x228>)
 8000d48:	2203      	movs	r2, #3
 8000d4a:	0028      	movs	r0, r5
 8000d4c:	7831      	ldrb	r1, [r6, #0]
 8000d4e:	f000 fb47 	bl	80013e0 <memchr>
 8000d52:	2800      	cmp	r0, #0
 8000d54:	d006      	beq.n	8000d64 <_vfiprintf_r+0x17c>
 8000d56:	2340      	movs	r3, #64	@ 0x40
 8000d58:	1b40      	subs	r0, r0, r5
 8000d5a:	4083      	lsls	r3, r0
 8000d5c:	6822      	ldr	r2, [r4, #0]
 8000d5e:	3601      	adds	r6, #1
 8000d60:	4313      	orrs	r3, r2
 8000d62:	6023      	str	r3, [r4, #0]
 8000d64:	7831      	ldrb	r1, [r6, #0]
 8000d66:	2206      	movs	r2, #6
 8000d68:	482a      	ldr	r0, [pc, #168]	@ (8000e14 <_vfiprintf_r+0x22c>)
 8000d6a:	1c75      	adds	r5, r6, #1
 8000d6c:	7621      	strb	r1, [r4, #24]
 8000d6e:	f000 fb37 	bl	80013e0 <memchr>
 8000d72:	2800      	cmp	r0, #0
 8000d74:	d040      	beq.n	8000df8 <_vfiprintf_r+0x210>
 8000d76:	4b28      	ldr	r3, [pc, #160]	@ (8000e18 <_vfiprintf_r+0x230>)
 8000d78:	2b00      	cmp	r3, #0
 8000d7a:	d122      	bne.n	8000dc2 <_vfiprintf_r+0x1da>
 8000d7c:	2207      	movs	r2, #7
 8000d7e:	9b07      	ldr	r3, [sp, #28]
 8000d80:	3307      	adds	r3, #7
 8000d82:	4393      	bics	r3, r2
 8000d84:	3308      	adds	r3, #8
 8000d86:	9307      	str	r3, [sp, #28]
 8000d88:	6963      	ldr	r3, [r4, #20]
 8000d8a:	9a04      	ldr	r2, [sp, #16]
 8000d8c:	189b      	adds	r3, r3, r2
 8000d8e:	6163      	str	r3, [r4, #20]
 8000d90:	e762      	b.n	8000c58 <_vfiprintf_r+0x70>
 8000d92:	4343      	muls	r3, r0
 8000d94:	002e      	movs	r6, r5
 8000d96:	2101      	movs	r1, #1
 8000d98:	189b      	adds	r3, r3, r2
 8000d9a:	e7a4      	b.n	8000ce6 <_vfiprintf_r+0xfe>
 8000d9c:	2300      	movs	r3, #0
 8000d9e:	200a      	movs	r0, #10
 8000da0:	0019      	movs	r1, r3
 8000da2:	3601      	adds	r6, #1
 8000da4:	6063      	str	r3, [r4, #4]
 8000da6:	7832      	ldrb	r2, [r6, #0]
 8000da8:	1c75      	adds	r5, r6, #1
 8000daa:	3a30      	subs	r2, #48	@ 0x30
 8000dac:	2a09      	cmp	r2, #9
 8000dae:	d903      	bls.n	8000db8 <_vfiprintf_r+0x1d0>
 8000db0:	2b00      	cmp	r3, #0
 8000db2:	d0c8      	beq.n	8000d46 <_vfiprintf_r+0x15e>
 8000db4:	9109      	str	r1, [sp, #36]	@ 0x24
 8000db6:	e7c6      	b.n	8000d46 <_vfiprintf_r+0x15e>
 8000db8:	4341      	muls	r1, r0
 8000dba:	002e      	movs	r6, r5
 8000dbc:	2301      	movs	r3, #1
 8000dbe:	1889      	adds	r1, r1, r2
 8000dc0:	e7f1      	b.n	8000da6 <_vfiprintf_r+0x1be>
 8000dc2:	aa07      	add	r2, sp, #28
 8000dc4:	9200      	str	r2, [sp, #0]
 8000dc6:	0021      	movs	r1, r4
 8000dc8:	003a      	movs	r2, r7
 8000dca:	4b14      	ldr	r3, [pc, #80]	@ (8000e1c <_vfiprintf_r+0x234>)
 8000dcc:	9803      	ldr	r0, [sp, #12]
 8000dce:	e000      	b.n	8000dd2 <_vfiprintf_r+0x1ea>
 8000dd0:	bf00      	nop
 8000dd2:	9004      	str	r0, [sp, #16]
 8000dd4:	9b04      	ldr	r3, [sp, #16]
 8000dd6:	3301      	adds	r3, #1
 8000dd8:	d1d6      	bne.n	8000d88 <_vfiprintf_r+0x1a0>
 8000dda:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8000ddc:	07db      	lsls	r3, r3, #31
 8000dde:	d405      	bmi.n	8000dec <_vfiprintf_r+0x204>
 8000de0:	89bb      	ldrh	r3, [r7, #12]
 8000de2:	059b      	lsls	r3, r3, #22
 8000de4:	d402      	bmi.n	8000dec <_vfiprintf_r+0x204>
 8000de6:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8000de8:	f7ff fdd8 	bl	800099c <__retarget_lock_release_recursive>
 8000dec:	89bb      	ldrh	r3, [r7, #12]
 8000dee:	065b      	lsls	r3, r3, #25
 8000df0:	d500      	bpl.n	8000df4 <_vfiprintf_r+0x20c>
 8000df2:	e71e      	b.n	8000c32 <_vfiprintf_r+0x4a>
 8000df4:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8000df6:	e71e      	b.n	8000c36 <_vfiprintf_r+0x4e>
 8000df8:	aa07      	add	r2, sp, #28
 8000dfa:	9200      	str	r2, [sp, #0]
 8000dfc:	0021      	movs	r1, r4
 8000dfe:	003a      	movs	r2, r7
 8000e00:	4b06      	ldr	r3, [pc, #24]	@ (8000e1c <_vfiprintf_r+0x234>)
 8000e02:	9803      	ldr	r0, [sp, #12]
 8000e04:	f000 f87c 	bl	8000f00 <_printf_i>
 8000e08:	e7e3      	b.n	8000dd2 <_vfiprintf_r+0x1ea>
 8000e0a:	46c0      	nop			@ (mov r8, r8)
 8000e0c:	08001567 	.word	0x08001567
 8000e10:	0800156d 	.word	0x0800156d
 8000e14:	08001571 	.word	0x08001571
 8000e18:	00000000 	.word	0x00000000
 8000e1c:	08000bc3 	.word	0x08000bc3

08000e20 <_printf_common>:
 8000e20:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000e22:	0016      	movs	r6, r2
 8000e24:	9301      	str	r3, [sp, #4]
 8000e26:	688a      	ldr	r2, [r1, #8]
 8000e28:	690b      	ldr	r3, [r1, #16]
 8000e2a:	000c      	movs	r4, r1
 8000e2c:	9000      	str	r0, [sp, #0]
 8000e2e:	4293      	cmp	r3, r2
 8000e30:	da00      	bge.n	8000e34 <_printf_common+0x14>
 8000e32:	0013      	movs	r3, r2
 8000e34:	0022      	movs	r2, r4
 8000e36:	6033      	str	r3, [r6, #0]
 8000e38:	3243      	adds	r2, #67	@ 0x43
 8000e3a:	7812      	ldrb	r2, [r2, #0]
 8000e3c:	2a00      	cmp	r2, #0
 8000e3e:	d001      	beq.n	8000e44 <_printf_common+0x24>
 8000e40:	3301      	adds	r3, #1
 8000e42:	6033      	str	r3, [r6, #0]
 8000e44:	6823      	ldr	r3, [r4, #0]
 8000e46:	069b      	lsls	r3, r3, #26
 8000e48:	d502      	bpl.n	8000e50 <_printf_common+0x30>
 8000e4a:	6833      	ldr	r3, [r6, #0]
 8000e4c:	3302      	adds	r3, #2
 8000e4e:	6033      	str	r3, [r6, #0]
 8000e50:	6822      	ldr	r2, [r4, #0]
 8000e52:	2306      	movs	r3, #6
 8000e54:	0015      	movs	r5, r2
 8000e56:	401d      	ands	r5, r3
 8000e58:	421a      	tst	r2, r3
 8000e5a:	d027      	beq.n	8000eac <_printf_common+0x8c>
 8000e5c:	0023      	movs	r3, r4
 8000e5e:	3343      	adds	r3, #67	@ 0x43
 8000e60:	781b      	ldrb	r3, [r3, #0]
 8000e62:	1e5a      	subs	r2, r3, #1
 8000e64:	4193      	sbcs	r3, r2
 8000e66:	6822      	ldr	r2, [r4, #0]
 8000e68:	0692      	lsls	r2, r2, #26
 8000e6a:	d430      	bmi.n	8000ece <_printf_common+0xae>
 8000e6c:	0022      	movs	r2, r4
 8000e6e:	9901      	ldr	r1, [sp, #4]
 8000e70:	9800      	ldr	r0, [sp, #0]
 8000e72:	9d08      	ldr	r5, [sp, #32]
 8000e74:	3243      	adds	r2, #67	@ 0x43
 8000e76:	47a8      	blx	r5
 8000e78:	3001      	adds	r0, #1
 8000e7a:	d025      	beq.n	8000ec8 <_printf_common+0xa8>
 8000e7c:	2206      	movs	r2, #6
 8000e7e:	6823      	ldr	r3, [r4, #0]
 8000e80:	2500      	movs	r5, #0
 8000e82:	4013      	ands	r3, r2
 8000e84:	2b04      	cmp	r3, #4
 8000e86:	d105      	bne.n	8000e94 <_printf_common+0x74>
 8000e88:	6833      	ldr	r3, [r6, #0]
 8000e8a:	68e5      	ldr	r5, [r4, #12]
 8000e8c:	1aed      	subs	r5, r5, r3
 8000e8e:	43eb      	mvns	r3, r5
 8000e90:	17db      	asrs	r3, r3, #31
 8000e92:	401d      	ands	r5, r3
 8000e94:	68a3      	ldr	r3, [r4, #8]
 8000e96:	6922      	ldr	r2, [r4, #16]
 8000e98:	4293      	cmp	r3, r2
 8000e9a:	dd01      	ble.n	8000ea0 <_printf_common+0x80>
 8000e9c:	1a9b      	subs	r3, r3, r2
 8000e9e:	18ed      	adds	r5, r5, r3
 8000ea0:	2600      	movs	r6, #0
 8000ea2:	42b5      	cmp	r5, r6
 8000ea4:	d120      	bne.n	8000ee8 <_printf_common+0xc8>
 8000ea6:	2000      	movs	r0, #0
 8000ea8:	e010      	b.n	8000ecc <_printf_common+0xac>
 8000eaa:	3501      	adds	r5, #1
 8000eac:	68e3      	ldr	r3, [r4, #12]
 8000eae:	6832      	ldr	r2, [r6, #0]
 8000eb0:	1a9b      	subs	r3, r3, r2
 8000eb2:	42ab      	cmp	r3, r5
 8000eb4:	ddd2      	ble.n	8000e5c <_printf_common+0x3c>
 8000eb6:	0022      	movs	r2, r4
 8000eb8:	2301      	movs	r3, #1
 8000eba:	9901      	ldr	r1, [sp, #4]
 8000ebc:	9800      	ldr	r0, [sp, #0]
 8000ebe:	9f08      	ldr	r7, [sp, #32]
 8000ec0:	3219      	adds	r2, #25
 8000ec2:	47b8      	blx	r7
 8000ec4:	3001      	adds	r0, #1
 8000ec6:	d1f0      	bne.n	8000eaa <_printf_common+0x8a>
 8000ec8:	2001      	movs	r0, #1
 8000eca:	4240      	negs	r0, r0
 8000ecc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000ece:	2030      	movs	r0, #48	@ 0x30
 8000ed0:	18e1      	adds	r1, r4, r3
 8000ed2:	3143      	adds	r1, #67	@ 0x43
 8000ed4:	7008      	strb	r0, [r1, #0]
 8000ed6:	0021      	movs	r1, r4
 8000ed8:	1c5a      	adds	r2, r3, #1
 8000eda:	3145      	adds	r1, #69	@ 0x45
 8000edc:	7809      	ldrb	r1, [r1, #0]
 8000ede:	18a2      	adds	r2, r4, r2
 8000ee0:	3243      	adds	r2, #67	@ 0x43
 8000ee2:	3302      	adds	r3, #2
 8000ee4:	7011      	strb	r1, [r2, #0]
 8000ee6:	e7c1      	b.n	8000e6c <_printf_common+0x4c>
 8000ee8:	0022      	movs	r2, r4
 8000eea:	2301      	movs	r3, #1
 8000eec:	9901      	ldr	r1, [sp, #4]
 8000eee:	9800      	ldr	r0, [sp, #0]
 8000ef0:	9f08      	ldr	r7, [sp, #32]
 8000ef2:	321a      	adds	r2, #26
 8000ef4:	47b8      	blx	r7
 8000ef6:	3001      	adds	r0, #1
 8000ef8:	d0e6      	beq.n	8000ec8 <_printf_common+0xa8>
 8000efa:	3601      	adds	r6, #1
 8000efc:	e7d1      	b.n	8000ea2 <_printf_common+0x82>
	...

08000f00 <_printf_i>:
 8000f00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000f02:	b08b      	sub	sp, #44	@ 0x2c
 8000f04:	9206      	str	r2, [sp, #24]
 8000f06:	000a      	movs	r2, r1
 8000f08:	3243      	adds	r2, #67	@ 0x43
 8000f0a:	9307      	str	r3, [sp, #28]
 8000f0c:	9005      	str	r0, [sp, #20]
 8000f0e:	9203      	str	r2, [sp, #12]
 8000f10:	7e0a      	ldrb	r2, [r1, #24]
 8000f12:	000c      	movs	r4, r1
 8000f14:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8000f16:	2a78      	cmp	r2, #120	@ 0x78
 8000f18:	d809      	bhi.n	8000f2e <_printf_i+0x2e>
 8000f1a:	2a62      	cmp	r2, #98	@ 0x62
 8000f1c:	d80b      	bhi.n	8000f36 <_printf_i+0x36>
 8000f1e:	2a00      	cmp	r2, #0
 8000f20:	d100      	bne.n	8000f24 <_printf_i+0x24>
 8000f22:	e0ba      	b.n	800109a <_printf_i+0x19a>
 8000f24:	497a      	ldr	r1, [pc, #488]	@ (8001110 <_printf_i+0x210>)
 8000f26:	9104      	str	r1, [sp, #16]
 8000f28:	2a58      	cmp	r2, #88	@ 0x58
 8000f2a:	d100      	bne.n	8000f2e <_printf_i+0x2e>
 8000f2c:	e08e      	b.n	800104c <_printf_i+0x14c>
 8000f2e:	0025      	movs	r5, r4
 8000f30:	3542      	adds	r5, #66	@ 0x42
 8000f32:	702a      	strb	r2, [r5, #0]
 8000f34:	e022      	b.n	8000f7c <_printf_i+0x7c>
 8000f36:	0010      	movs	r0, r2
 8000f38:	3863      	subs	r0, #99	@ 0x63
 8000f3a:	2815      	cmp	r0, #21
 8000f3c:	d8f7      	bhi.n	8000f2e <_printf_i+0x2e>
 8000f3e:	f7ff f8e3 	bl	8000108 <__gnu_thumb1_case_shi>
 8000f42:	0016      	.short	0x0016
 8000f44:	fff6001f 	.word	0xfff6001f
 8000f48:	fff6fff6 	.word	0xfff6fff6
 8000f4c:	001ffff6 	.word	0x001ffff6
 8000f50:	fff6fff6 	.word	0xfff6fff6
 8000f54:	fff6fff6 	.word	0xfff6fff6
 8000f58:	0036009f 	.word	0x0036009f
 8000f5c:	fff6007e 	.word	0xfff6007e
 8000f60:	00b0fff6 	.word	0x00b0fff6
 8000f64:	0036fff6 	.word	0x0036fff6
 8000f68:	fff6fff6 	.word	0xfff6fff6
 8000f6c:	0082      	.short	0x0082
 8000f6e:	0025      	movs	r5, r4
 8000f70:	681a      	ldr	r2, [r3, #0]
 8000f72:	3542      	adds	r5, #66	@ 0x42
 8000f74:	1d11      	adds	r1, r2, #4
 8000f76:	6019      	str	r1, [r3, #0]
 8000f78:	6813      	ldr	r3, [r2, #0]
 8000f7a:	702b      	strb	r3, [r5, #0]
 8000f7c:	2301      	movs	r3, #1
 8000f7e:	e09e      	b.n	80010be <_printf_i+0x1be>
 8000f80:	6818      	ldr	r0, [r3, #0]
 8000f82:	6809      	ldr	r1, [r1, #0]
 8000f84:	1d02      	adds	r2, r0, #4
 8000f86:	060d      	lsls	r5, r1, #24
 8000f88:	d50b      	bpl.n	8000fa2 <_printf_i+0xa2>
 8000f8a:	6806      	ldr	r6, [r0, #0]
 8000f8c:	601a      	str	r2, [r3, #0]
 8000f8e:	2e00      	cmp	r6, #0
 8000f90:	da03      	bge.n	8000f9a <_printf_i+0x9a>
 8000f92:	232d      	movs	r3, #45	@ 0x2d
 8000f94:	9a03      	ldr	r2, [sp, #12]
 8000f96:	4276      	negs	r6, r6
 8000f98:	7013      	strb	r3, [r2, #0]
 8000f9a:	4b5d      	ldr	r3, [pc, #372]	@ (8001110 <_printf_i+0x210>)
 8000f9c:	270a      	movs	r7, #10
 8000f9e:	9304      	str	r3, [sp, #16]
 8000fa0:	e018      	b.n	8000fd4 <_printf_i+0xd4>
 8000fa2:	6806      	ldr	r6, [r0, #0]
 8000fa4:	601a      	str	r2, [r3, #0]
 8000fa6:	0649      	lsls	r1, r1, #25
 8000fa8:	d5f1      	bpl.n	8000f8e <_printf_i+0x8e>
 8000faa:	b236      	sxth	r6, r6
 8000fac:	e7ef      	b.n	8000f8e <_printf_i+0x8e>
 8000fae:	6808      	ldr	r0, [r1, #0]
 8000fb0:	6819      	ldr	r1, [r3, #0]
 8000fb2:	c940      	ldmia	r1!, {r6}
 8000fb4:	0605      	lsls	r5, r0, #24
 8000fb6:	d402      	bmi.n	8000fbe <_printf_i+0xbe>
 8000fb8:	0640      	lsls	r0, r0, #25
 8000fba:	d500      	bpl.n	8000fbe <_printf_i+0xbe>
 8000fbc:	b2b6      	uxth	r6, r6
 8000fbe:	6019      	str	r1, [r3, #0]
 8000fc0:	4b53      	ldr	r3, [pc, #332]	@ (8001110 <_printf_i+0x210>)
 8000fc2:	270a      	movs	r7, #10
 8000fc4:	9304      	str	r3, [sp, #16]
 8000fc6:	2a6f      	cmp	r2, #111	@ 0x6f
 8000fc8:	d100      	bne.n	8000fcc <_printf_i+0xcc>
 8000fca:	3f02      	subs	r7, #2
 8000fcc:	0023      	movs	r3, r4
 8000fce:	2200      	movs	r2, #0
 8000fd0:	3343      	adds	r3, #67	@ 0x43
 8000fd2:	701a      	strb	r2, [r3, #0]
 8000fd4:	6863      	ldr	r3, [r4, #4]
 8000fd6:	60a3      	str	r3, [r4, #8]
 8000fd8:	2b00      	cmp	r3, #0
 8000fda:	db06      	blt.n	8000fea <_printf_i+0xea>
 8000fdc:	2104      	movs	r1, #4
 8000fde:	6822      	ldr	r2, [r4, #0]
 8000fe0:	9d03      	ldr	r5, [sp, #12]
 8000fe2:	438a      	bics	r2, r1
 8000fe4:	6022      	str	r2, [r4, #0]
 8000fe6:	4333      	orrs	r3, r6
 8000fe8:	d00c      	beq.n	8001004 <_printf_i+0x104>
 8000fea:	9d03      	ldr	r5, [sp, #12]
 8000fec:	0030      	movs	r0, r6
 8000fee:	0039      	movs	r1, r7
 8000ff0:	f7ff f91a 	bl	8000228 <__aeabi_uidivmod>
 8000ff4:	9b04      	ldr	r3, [sp, #16]
 8000ff6:	3d01      	subs	r5, #1
 8000ff8:	5c5b      	ldrb	r3, [r3, r1]
 8000ffa:	702b      	strb	r3, [r5, #0]
 8000ffc:	0033      	movs	r3, r6
 8000ffe:	0006      	movs	r6, r0
 8001000:	429f      	cmp	r7, r3
 8001002:	d9f3      	bls.n	8000fec <_printf_i+0xec>
 8001004:	2f08      	cmp	r7, #8
 8001006:	d109      	bne.n	800101c <_printf_i+0x11c>
 8001008:	6823      	ldr	r3, [r4, #0]
 800100a:	07db      	lsls	r3, r3, #31
 800100c:	d506      	bpl.n	800101c <_printf_i+0x11c>
 800100e:	6862      	ldr	r2, [r4, #4]
 8001010:	6923      	ldr	r3, [r4, #16]
 8001012:	429a      	cmp	r2, r3
 8001014:	dc02      	bgt.n	800101c <_printf_i+0x11c>
 8001016:	2330      	movs	r3, #48	@ 0x30
 8001018:	3d01      	subs	r5, #1
 800101a:	702b      	strb	r3, [r5, #0]
 800101c:	9b03      	ldr	r3, [sp, #12]
 800101e:	1b5b      	subs	r3, r3, r5
 8001020:	6123      	str	r3, [r4, #16]
 8001022:	9b07      	ldr	r3, [sp, #28]
 8001024:	0021      	movs	r1, r4
 8001026:	9300      	str	r3, [sp, #0]
 8001028:	9805      	ldr	r0, [sp, #20]
 800102a:	9b06      	ldr	r3, [sp, #24]
 800102c:	aa09      	add	r2, sp, #36	@ 0x24
 800102e:	f7ff fef7 	bl	8000e20 <_printf_common>
 8001032:	3001      	adds	r0, #1
 8001034:	d148      	bne.n	80010c8 <_printf_i+0x1c8>
 8001036:	2001      	movs	r0, #1
 8001038:	4240      	negs	r0, r0
 800103a:	b00b      	add	sp, #44	@ 0x2c
 800103c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800103e:	2220      	movs	r2, #32
 8001040:	6809      	ldr	r1, [r1, #0]
 8001042:	430a      	orrs	r2, r1
 8001044:	6022      	str	r2, [r4, #0]
 8001046:	2278      	movs	r2, #120	@ 0x78
 8001048:	4932      	ldr	r1, [pc, #200]	@ (8001114 <_printf_i+0x214>)
 800104a:	9104      	str	r1, [sp, #16]
 800104c:	0021      	movs	r1, r4
 800104e:	3145      	adds	r1, #69	@ 0x45
 8001050:	700a      	strb	r2, [r1, #0]
 8001052:	6819      	ldr	r1, [r3, #0]
 8001054:	6822      	ldr	r2, [r4, #0]
 8001056:	c940      	ldmia	r1!, {r6}
 8001058:	0610      	lsls	r0, r2, #24
 800105a:	d402      	bmi.n	8001062 <_printf_i+0x162>
 800105c:	0650      	lsls	r0, r2, #25
 800105e:	d500      	bpl.n	8001062 <_printf_i+0x162>
 8001060:	b2b6      	uxth	r6, r6
 8001062:	6019      	str	r1, [r3, #0]
 8001064:	07d3      	lsls	r3, r2, #31
 8001066:	d502      	bpl.n	800106e <_printf_i+0x16e>
 8001068:	2320      	movs	r3, #32
 800106a:	4313      	orrs	r3, r2
 800106c:	6023      	str	r3, [r4, #0]
 800106e:	2e00      	cmp	r6, #0
 8001070:	d001      	beq.n	8001076 <_printf_i+0x176>
 8001072:	2710      	movs	r7, #16
 8001074:	e7aa      	b.n	8000fcc <_printf_i+0xcc>
 8001076:	2220      	movs	r2, #32
 8001078:	6823      	ldr	r3, [r4, #0]
 800107a:	4393      	bics	r3, r2
 800107c:	6023      	str	r3, [r4, #0]
 800107e:	e7f8      	b.n	8001072 <_printf_i+0x172>
 8001080:	681a      	ldr	r2, [r3, #0]
 8001082:	680d      	ldr	r5, [r1, #0]
 8001084:	1d10      	adds	r0, r2, #4
 8001086:	6949      	ldr	r1, [r1, #20]
 8001088:	6018      	str	r0, [r3, #0]
 800108a:	6813      	ldr	r3, [r2, #0]
 800108c:	062e      	lsls	r6, r5, #24
 800108e:	d501      	bpl.n	8001094 <_printf_i+0x194>
 8001090:	6019      	str	r1, [r3, #0]
 8001092:	e002      	b.n	800109a <_printf_i+0x19a>
 8001094:	066d      	lsls	r5, r5, #25
 8001096:	d5fb      	bpl.n	8001090 <_printf_i+0x190>
 8001098:	8019      	strh	r1, [r3, #0]
 800109a:	2300      	movs	r3, #0
 800109c:	9d03      	ldr	r5, [sp, #12]
 800109e:	6123      	str	r3, [r4, #16]
 80010a0:	e7bf      	b.n	8001022 <_printf_i+0x122>
 80010a2:	681a      	ldr	r2, [r3, #0]
 80010a4:	1d11      	adds	r1, r2, #4
 80010a6:	6019      	str	r1, [r3, #0]
 80010a8:	6815      	ldr	r5, [r2, #0]
 80010aa:	2100      	movs	r1, #0
 80010ac:	0028      	movs	r0, r5
 80010ae:	6862      	ldr	r2, [r4, #4]
 80010b0:	f000 f996 	bl	80013e0 <memchr>
 80010b4:	2800      	cmp	r0, #0
 80010b6:	d001      	beq.n	80010bc <_printf_i+0x1bc>
 80010b8:	1b40      	subs	r0, r0, r5
 80010ba:	6060      	str	r0, [r4, #4]
 80010bc:	6863      	ldr	r3, [r4, #4]
 80010be:	6123      	str	r3, [r4, #16]
 80010c0:	2300      	movs	r3, #0
 80010c2:	9a03      	ldr	r2, [sp, #12]
 80010c4:	7013      	strb	r3, [r2, #0]
 80010c6:	e7ac      	b.n	8001022 <_printf_i+0x122>
 80010c8:	002a      	movs	r2, r5
 80010ca:	6923      	ldr	r3, [r4, #16]
 80010cc:	9906      	ldr	r1, [sp, #24]
 80010ce:	9805      	ldr	r0, [sp, #20]
 80010d0:	9d07      	ldr	r5, [sp, #28]
 80010d2:	47a8      	blx	r5
 80010d4:	3001      	adds	r0, #1
 80010d6:	d0ae      	beq.n	8001036 <_printf_i+0x136>
 80010d8:	6823      	ldr	r3, [r4, #0]
 80010da:	079b      	lsls	r3, r3, #30
 80010dc:	d415      	bmi.n	800110a <_printf_i+0x20a>
 80010de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80010e0:	68e0      	ldr	r0, [r4, #12]
 80010e2:	4298      	cmp	r0, r3
 80010e4:	daa9      	bge.n	800103a <_printf_i+0x13a>
 80010e6:	0018      	movs	r0, r3
 80010e8:	e7a7      	b.n	800103a <_printf_i+0x13a>
 80010ea:	0022      	movs	r2, r4
 80010ec:	2301      	movs	r3, #1
 80010ee:	9906      	ldr	r1, [sp, #24]
 80010f0:	9805      	ldr	r0, [sp, #20]
 80010f2:	9e07      	ldr	r6, [sp, #28]
 80010f4:	3219      	adds	r2, #25
 80010f6:	47b0      	blx	r6
 80010f8:	3001      	adds	r0, #1
 80010fa:	d09c      	beq.n	8001036 <_printf_i+0x136>
 80010fc:	3501      	adds	r5, #1
 80010fe:	68e3      	ldr	r3, [r4, #12]
 8001100:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8001102:	1a9b      	subs	r3, r3, r2
 8001104:	42ab      	cmp	r3, r5
 8001106:	dcf0      	bgt.n	80010ea <_printf_i+0x1ea>
 8001108:	e7e9      	b.n	80010de <_printf_i+0x1de>
 800110a:	2500      	movs	r5, #0
 800110c:	e7f7      	b.n	80010fe <_printf_i+0x1fe>
 800110e:	46c0      	nop			@ (mov r8, r8)
 8001110:	08001578 	.word	0x08001578
 8001114:	08001589 	.word	0x08001589

08001118 <__sflush_r>:
 8001118:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800111a:	220c      	movs	r2, #12
 800111c:	5e8b      	ldrsh	r3, [r1, r2]
 800111e:	0005      	movs	r5, r0
 8001120:	000c      	movs	r4, r1
 8001122:	071a      	lsls	r2, r3, #28
 8001124:	d456      	bmi.n	80011d4 <__sflush_r+0xbc>
 8001126:	684a      	ldr	r2, [r1, #4]
 8001128:	2a00      	cmp	r2, #0
 800112a:	dc02      	bgt.n	8001132 <__sflush_r+0x1a>
 800112c:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 800112e:	2a00      	cmp	r2, #0
 8001130:	dd4e      	ble.n	80011d0 <__sflush_r+0xb8>
 8001132:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8001134:	2f00      	cmp	r7, #0
 8001136:	d04b      	beq.n	80011d0 <__sflush_r+0xb8>
 8001138:	2200      	movs	r2, #0
 800113a:	2080      	movs	r0, #128	@ 0x80
 800113c:	682e      	ldr	r6, [r5, #0]
 800113e:	602a      	str	r2, [r5, #0]
 8001140:	001a      	movs	r2, r3
 8001142:	0140      	lsls	r0, r0, #5
 8001144:	6a21      	ldr	r1, [r4, #32]
 8001146:	4002      	ands	r2, r0
 8001148:	4203      	tst	r3, r0
 800114a:	d033      	beq.n	80011b4 <__sflush_r+0x9c>
 800114c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800114e:	89a3      	ldrh	r3, [r4, #12]
 8001150:	075b      	lsls	r3, r3, #29
 8001152:	d506      	bpl.n	8001162 <__sflush_r+0x4a>
 8001154:	6863      	ldr	r3, [r4, #4]
 8001156:	1ad2      	subs	r2, r2, r3
 8001158:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800115a:	2b00      	cmp	r3, #0
 800115c:	d001      	beq.n	8001162 <__sflush_r+0x4a>
 800115e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001160:	1ad2      	subs	r2, r2, r3
 8001162:	2300      	movs	r3, #0
 8001164:	0028      	movs	r0, r5
 8001166:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8001168:	6a21      	ldr	r1, [r4, #32]
 800116a:	47b8      	blx	r7
 800116c:	89a2      	ldrh	r2, [r4, #12]
 800116e:	1c43      	adds	r3, r0, #1
 8001170:	d106      	bne.n	8001180 <__sflush_r+0x68>
 8001172:	6829      	ldr	r1, [r5, #0]
 8001174:	291d      	cmp	r1, #29
 8001176:	d846      	bhi.n	8001206 <__sflush_r+0xee>
 8001178:	4b29      	ldr	r3, [pc, #164]	@ (8001220 <__sflush_r+0x108>)
 800117a:	40cb      	lsrs	r3, r1
 800117c:	07db      	lsls	r3, r3, #31
 800117e:	d542      	bpl.n	8001206 <__sflush_r+0xee>
 8001180:	2300      	movs	r3, #0
 8001182:	6063      	str	r3, [r4, #4]
 8001184:	6923      	ldr	r3, [r4, #16]
 8001186:	6023      	str	r3, [r4, #0]
 8001188:	04d2      	lsls	r2, r2, #19
 800118a:	d505      	bpl.n	8001198 <__sflush_r+0x80>
 800118c:	1c43      	adds	r3, r0, #1
 800118e:	d102      	bne.n	8001196 <__sflush_r+0x7e>
 8001190:	682b      	ldr	r3, [r5, #0]
 8001192:	2b00      	cmp	r3, #0
 8001194:	d100      	bne.n	8001198 <__sflush_r+0x80>
 8001196:	6560      	str	r0, [r4, #84]	@ 0x54
 8001198:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800119a:	602e      	str	r6, [r5, #0]
 800119c:	2900      	cmp	r1, #0
 800119e:	d017      	beq.n	80011d0 <__sflush_r+0xb8>
 80011a0:	0023      	movs	r3, r4
 80011a2:	3344      	adds	r3, #68	@ 0x44
 80011a4:	4299      	cmp	r1, r3
 80011a6:	d002      	beq.n	80011ae <__sflush_r+0x96>
 80011a8:	0028      	movs	r0, r5
 80011aa:	f7ff fbf9 	bl	80009a0 <_free_r>
 80011ae:	2300      	movs	r3, #0
 80011b0:	6363      	str	r3, [r4, #52]	@ 0x34
 80011b2:	e00d      	b.n	80011d0 <__sflush_r+0xb8>
 80011b4:	2301      	movs	r3, #1
 80011b6:	0028      	movs	r0, r5
 80011b8:	47b8      	blx	r7
 80011ba:	0002      	movs	r2, r0
 80011bc:	1c43      	adds	r3, r0, #1
 80011be:	d1c6      	bne.n	800114e <__sflush_r+0x36>
 80011c0:	682b      	ldr	r3, [r5, #0]
 80011c2:	2b00      	cmp	r3, #0
 80011c4:	d0c3      	beq.n	800114e <__sflush_r+0x36>
 80011c6:	2b1d      	cmp	r3, #29
 80011c8:	d001      	beq.n	80011ce <__sflush_r+0xb6>
 80011ca:	2b16      	cmp	r3, #22
 80011cc:	d11a      	bne.n	8001204 <__sflush_r+0xec>
 80011ce:	602e      	str	r6, [r5, #0]
 80011d0:	2000      	movs	r0, #0
 80011d2:	e01e      	b.n	8001212 <__sflush_r+0xfa>
 80011d4:	690e      	ldr	r6, [r1, #16]
 80011d6:	2e00      	cmp	r6, #0
 80011d8:	d0fa      	beq.n	80011d0 <__sflush_r+0xb8>
 80011da:	680f      	ldr	r7, [r1, #0]
 80011dc:	600e      	str	r6, [r1, #0]
 80011de:	1bba      	subs	r2, r7, r6
 80011e0:	9201      	str	r2, [sp, #4]
 80011e2:	2200      	movs	r2, #0
 80011e4:	079b      	lsls	r3, r3, #30
 80011e6:	d100      	bne.n	80011ea <__sflush_r+0xd2>
 80011e8:	694a      	ldr	r2, [r1, #20]
 80011ea:	60a2      	str	r2, [r4, #8]
 80011ec:	9b01      	ldr	r3, [sp, #4]
 80011ee:	2b00      	cmp	r3, #0
 80011f0:	ddee      	ble.n	80011d0 <__sflush_r+0xb8>
 80011f2:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80011f4:	0032      	movs	r2, r6
 80011f6:	001f      	movs	r7, r3
 80011f8:	0028      	movs	r0, r5
 80011fa:	9b01      	ldr	r3, [sp, #4]
 80011fc:	6a21      	ldr	r1, [r4, #32]
 80011fe:	47b8      	blx	r7
 8001200:	2800      	cmp	r0, #0
 8001202:	dc07      	bgt.n	8001214 <__sflush_r+0xfc>
 8001204:	89a2      	ldrh	r2, [r4, #12]
 8001206:	2340      	movs	r3, #64	@ 0x40
 8001208:	2001      	movs	r0, #1
 800120a:	4313      	orrs	r3, r2
 800120c:	b21b      	sxth	r3, r3
 800120e:	81a3      	strh	r3, [r4, #12]
 8001210:	4240      	negs	r0, r0
 8001212:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8001214:	9b01      	ldr	r3, [sp, #4]
 8001216:	1836      	adds	r6, r6, r0
 8001218:	1a1b      	subs	r3, r3, r0
 800121a:	9301      	str	r3, [sp, #4]
 800121c:	e7e6      	b.n	80011ec <__sflush_r+0xd4>
 800121e:	46c0      	nop			@ (mov r8, r8)
 8001220:	20400001 	.word	0x20400001

08001224 <_fflush_r>:
 8001224:	690b      	ldr	r3, [r1, #16]
 8001226:	b570      	push	{r4, r5, r6, lr}
 8001228:	0005      	movs	r5, r0
 800122a:	000c      	movs	r4, r1
 800122c:	2b00      	cmp	r3, #0
 800122e:	d102      	bne.n	8001236 <_fflush_r+0x12>
 8001230:	2500      	movs	r5, #0
 8001232:	0028      	movs	r0, r5
 8001234:	bd70      	pop	{r4, r5, r6, pc}
 8001236:	2800      	cmp	r0, #0
 8001238:	d004      	beq.n	8001244 <_fflush_r+0x20>
 800123a:	6a03      	ldr	r3, [r0, #32]
 800123c:	2b00      	cmp	r3, #0
 800123e:	d101      	bne.n	8001244 <_fflush_r+0x20>
 8001240:	f7ff fa9a 	bl	8000778 <__sinit>
 8001244:	220c      	movs	r2, #12
 8001246:	5ea3      	ldrsh	r3, [r4, r2]
 8001248:	2b00      	cmp	r3, #0
 800124a:	d0f1      	beq.n	8001230 <_fflush_r+0xc>
 800124c:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800124e:	07d2      	lsls	r2, r2, #31
 8001250:	d404      	bmi.n	800125c <_fflush_r+0x38>
 8001252:	059b      	lsls	r3, r3, #22
 8001254:	d402      	bmi.n	800125c <_fflush_r+0x38>
 8001256:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001258:	f7ff fb9f 	bl	800099a <__retarget_lock_acquire_recursive>
 800125c:	0028      	movs	r0, r5
 800125e:	0021      	movs	r1, r4
 8001260:	f7ff ff5a 	bl	8001118 <__sflush_r>
 8001264:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001266:	0005      	movs	r5, r0
 8001268:	07db      	lsls	r3, r3, #31
 800126a:	d4e2      	bmi.n	8001232 <_fflush_r+0xe>
 800126c:	89a3      	ldrh	r3, [r4, #12]
 800126e:	059b      	lsls	r3, r3, #22
 8001270:	d4df      	bmi.n	8001232 <_fflush_r+0xe>
 8001272:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001274:	f7ff fb92 	bl	800099c <__retarget_lock_release_recursive>
 8001278:	e7db      	b.n	8001232 <_fflush_r+0xe>

0800127a <__swbuf_r>:
 800127a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800127c:	0006      	movs	r6, r0
 800127e:	000d      	movs	r5, r1
 8001280:	0014      	movs	r4, r2
 8001282:	2800      	cmp	r0, #0
 8001284:	d004      	beq.n	8001290 <__swbuf_r+0x16>
 8001286:	6a03      	ldr	r3, [r0, #32]
 8001288:	2b00      	cmp	r3, #0
 800128a:	d101      	bne.n	8001290 <__swbuf_r+0x16>
 800128c:	f7ff fa74 	bl	8000778 <__sinit>
 8001290:	69a3      	ldr	r3, [r4, #24]
 8001292:	60a3      	str	r3, [r4, #8]
 8001294:	89a3      	ldrh	r3, [r4, #12]
 8001296:	071b      	lsls	r3, r3, #28
 8001298:	d502      	bpl.n	80012a0 <__swbuf_r+0x26>
 800129a:	6923      	ldr	r3, [r4, #16]
 800129c:	2b00      	cmp	r3, #0
 800129e:	d109      	bne.n	80012b4 <__swbuf_r+0x3a>
 80012a0:	0021      	movs	r1, r4
 80012a2:	0030      	movs	r0, r6
 80012a4:	f000 f82c 	bl	8001300 <__swsetup_r>
 80012a8:	2800      	cmp	r0, #0
 80012aa:	d003      	beq.n	80012b4 <__swbuf_r+0x3a>
 80012ac:	2501      	movs	r5, #1
 80012ae:	426d      	negs	r5, r5
 80012b0:	0028      	movs	r0, r5
 80012b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80012b4:	6923      	ldr	r3, [r4, #16]
 80012b6:	6820      	ldr	r0, [r4, #0]
 80012b8:	b2ef      	uxtb	r7, r5
 80012ba:	1ac0      	subs	r0, r0, r3
 80012bc:	6963      	ldr	r3, [r4, #20]
 80012be:	b2ed      	uxtb	r5, r5
 80012c0:	4283      	cmp	r3, r0
 80012c2:	dc05      	bgt.n	80012d0 <__swbuf_r+0x56>
 80012c4:	0021      	movs	r1, r4
 80012c6:	0030      	movs	r0, r6
 80012c8:	f7ff ffac 	bl	8001224 <_fflush_r>
 80012cc:	2800      	cmp	r0, #0
 80012ce:	d1ed      	bne.n	80012ac <__swbuf_r+0x32>
 80012d0:	68a3      	ldr	r3, [r4, #8]
 80012d2:	3001      	adds	r0, #1
 80012d4:	3b01      	subs	r3, #1
 80012d6:	60a3      	str	r3, [r4, #8]
 80012d8:	6823      	ldr	r3, [r4, #0]
 80012da:	1c5a      	adds	r2, r3, #1
 80012dc:	6022      	str	r2, [r4, #0]
 80012de:	701f      	strb	r7, [r3, #0]
 80012e0:	6963      	ldr	r3, [r4, #20]
 80012e2:	4283      	cmp	r3, r0
 80012e4:	d004      	beq.n	80012f0 <__swbuf_r+0x76>
 80012e6:	89a3      	ldrh	r3, [r4, #12]
 80012e8:	07db      	lsls	r3, r3, #31
 80012ea:	d5e1      	bpl.n	80012b0 <__swbuf_r+0x36>
 80012ec:	2d0a      	cmp	r5, #10
 80012ee:	d1df      	bne.n	80012b0 <__swbuf_r+0x36>
 80012f0:	0021      	movs	r1, r4
 80012f2:	0030      	movs	r0, r6
 80012f4:	f7ff ff96 	bl	8001224 <_fflush_r>
 80012f8:	2800      	cmp	r0, #0
 80012fa:	d0d9      	beq.n	80012b0 <__swbuf_r+0x36>
 80012fc:	e7d6      	b.n	80012ac <__swbuf_r+0x32>
	...

08001300 <__swsetup_r>:
 8001300:	4b2d      	ldr	r3, [pc, #180]	@ (80013b8 <__swsetup_r+0xb8>)
 8001302:	b570      	push	{r4, r5, r6, lr}
 8001304:	0005      	movs	r5, r0
 8001306:	6818      	ldr	r0, [r3, #0]
 8001308:	000c      	movs	r4, r1
 800130a:	2800      	cmp	r0, #0
 800130c:	d004      	beq.n	8001318 <__swsetup_r+0x18>
 800130e:	6a03      	ldr	r3, [r0, #32]
 8001310:	2b00      	cmp	r3, #0
 8001312:	d101      	bne.n	8001318 <__swsetup_r+0x18>
 8001314:	f7ff fa30 	bl	8000778 <__sinit>
 8001318:	220c      	movs	r2, #12
 800131a:	5ea3      	ldrsh	r3, [r4, r2]
 800131c:	071a      	lsls	r2, r3, #28
 800131e:	d423      	bmi.n	8001368 <__swsetup_r+0x68>
 8001320:	06da      	lsls	r2, r3, #27
 8001322:	d407      	bmi.n	8001334 <__swsetup_r+0x34>
 8001324:	2209      	movs	r2, #9
 8001326:	602a      	str	r2, [r5, #0]
 8001328:	2240      	movs	r2, #64	@ 0x40
 800132a:	2001      	movs	r0, #1
 800132c:	4313      	orrs	r3, r2
 800132e:	81a3      	strh	r3, [r4, #12]
 8001330:	4240      	negs	r0, r0
 8001332:	e03a      	b.n	80013aa <__swsetup_r+0xaa>
 8001334:	075b      	lsls	r3, r3, #29
 8001336:	d513      	bpl.n	8001360 <__swsetup_r+0x60>
 8001338:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800133a:	2900      	cmp	r1, #0
 800133c:	d008      	beq.n	8001350 <__swsetup_r+0x50>
 800133e:	0023      	movs	r3, r4
 8001340:	3344      	adds	r3, #68	@ 0x44
 8001342:	4299      	cmp	r1, r3
 8001344:	d002      	beq.n	800134c <__swsetup_r+0x4c>
 8001346:	0028      	movs	r0, r5
 8001348:	f7ff fb2a 	bl	80009a0 <_free_r>
 800134c:	2300      	movs	r3, #0
 800134e:	6363      	str	r3, [r4, #52]	@ 0x34
 8001350:	2224      	movs	r2, #36	@ 0x24
 8001352:	89a3      	ldrh	r3, [r4, #12]
 8001354:	4393      	bics	r3, r2
 8001356:	81a3      	strh	r3, [r4, #12]
 8001358:	2300      	movs	r3, #0
 800135a:	6063      	str	r3, [r4, #4]
 800135c:	6923      	ldr	r3, [r4, #16]
 800135e:	6023      	str	r3, [r4, #0]
 8001360:	2308      	movs	r3, #8
 8001362:	89a2      	ldrh	r2, [r4, #12]
 8001364:	4313      	orrs	r3, r2
 8001366:	81a3      	strh	r3, [r4, #12]
 8001368:	6923      	ldr	r3, [r4, #16]
 800136a:	2b00      	cmp	r3, #0
 800136c:	d10b      	bne.n	8001386 <__swsetup_r+0x86>
 800136e:	21a0      	movs	r1, #160	@ 0xa0
 8001370:	2280      	movs	r2, #128	@ 0x80
 8001372:	89a3      	ldrh	r3, [r4, #12]
 8001374:	0089      	lsls	r1, r1, #2
 8001376:	0092      	lsls	r2, r2, #2
 8001378:	400b      	ands	r3, r1
 800137a:	4293      	cmp	r3, r2
 800137c:	d003      	beq.n	8001386 <__swsetup_r+0x86>
 800137e:	0021      	movs	r1, r4
 8001380:	0028      	movs	r0, r5
 8001382:	f000 f863 	bl	800144c <__smakebuf_r>
 8001386:	220c      	movs	r2, #12
 8001388:	5ea3      	ldrsh	r3, [r4, r2]
 800138a:	2101      	movs	r1, #1
 800138c:	001a      	movs	r2, r3
 800138e:	400a      	ands	r2, r1
 8001390:	420b      	tst	r3, r1
 8001392:	d00b      	beq.n	80013ac <__swsetup_r+0xac>
 8001394:	2200      	movs	r2, #0
 8001396:	60a2      	str	r2, [r4, #8]
 8001398:	6962      	ldr	r2, [r4, #20]
 800139a:	4252      	negs	r2, r2
 800139c:	61a2      	str	r2, [r4, #24]
 800139e:	2000      	movs	r0, #0
 80013a0:	6922      	ldr	r2, [r4, #16]
 80013a2:	4282      	cmp	r2, r0
 80013a4:	d101      	bne.n	80013aa <__swsetup_r+0xaa>
 80013a6:	061a      	lsls	r2, r3, #24
 80013a8:	d4be      	bmi.n	8001328 <__swsetup_r+0x28>
 80013aa:	bd70      	pop	{r4, r5, r6, pc}
 80013ac:	0799      	lsls	r1, r3, #30
 80013ae:	d400      	bmi.n	80013b2 <__swsetup_r+0xb2>
 80013b0:	6962      	ldr	r2, [r4, #20]
 80013b2:	60a2      	str	r2, [r4, #8]
 80013b4:	e7f3      	b.n	800139e <__swsetup_r+0x9e>
 80013b6:	46c0      	nop			@ (mov r8, r8)
 80013b8:	2000000c 	.word	0x2000000c

080013bc <_sbrk_r>:
 80013bc:	2300      	movs	r3, #0
 80013be:	b570      	push	{r4, r5, r6, lr}
 80013c0:	4d06      	ldr	r5, [pc, #24]	@ (80013dc <_sbrk_r+0x20>)
 80013c2:	0004      	movs	r4, r0
 80013c4:	0008      	movs	r0, r1
 80013c6:	602b      	str	r3, [r5, #0]
 80013c8:	f7fe ffd4 	bl	8000374 <_sbrk>
 80013cc:	1c43      	adds	r3, r0, #1
 80013ce:	d103      	bne.n	80013d8 <_sbrk_r+0x1c>
 80013d0:	682b      	ldr	r3, [r5, #0]
 80013d2:	2b00      	cmp	r3, #0
 80013d4:	d000      	beq.n	80013d8 <_sbrk_r+0x1c>
 80013d6:	6023      	str	r3, [r4, #0]
 80013d8:	bd70      	pop	{r4, r5, r6, pc}
 80013da:	46c0      	nop			@ (mov r8, r8)
 80013dc:	200001c0 	.word	0x200001c0

080013e0 <memchr>:
 80013e0:	b2c9      	uxtb	r1, r1
 80013e2:	1882      	adds	r2, r0, r2
 80013e4:	4290      	cmp	r0, r2
 80013e6:	d101      	bne.n	80013ec <memchr+0xc>
 80013e8:	2000      	movs	r0, #0
 80013ea:	4770      	bx	lr
 80013ec:	7803      	ldrb	r3, [r0, #0]
 80013ee:	428b      	cmp	r3, r1
 80013f0:	d0fb      	beq.n	80013ea <memchr+0xa>
 80013f2:	3001      	adds	r0, #1
 80013f4:	e7f6      	b.n	80013e4 <memchr+0x4>
	...

080013f8 <__swhatbuf_r>:
 80013f8:	b570      	push	{r4, r5, r6, lr}
 80013fa:	000e      	movs	r6, r1
 80013fc:	001d      	movs	r5, r3
 80013fe:	230e      	movs	r3, #14
 8001400:	5ec9      	ldrsh	r1, [r1, r3]
 8001402:	0014      	movs	r4, r2
 8001404:	b096      	sub	sp, #88	@ 0x58
 8001406:	2900      	cmp	r1, #0
 8001408:	da0c      	bge.n	8001424 <__swhatbuf_r+0x2c>
 800140a:	89b2      	ldrh	r2, [r6, #12]
 800140c:	2380      	movs	r3, #128	@ 0x80
 800140e:	0011      	movs	r1, r2
 8001410:	4019      	ands	r1, r3
 8001412:	421a      	tst	r2, r3
 8001414:	d114      	bne.n	8001440 <__swhatbuf_r+0x48>
 8001416:	2380      	movs	r3, #128	@ 0x80
 8001418:	00db      	lsls	r3, r3, #3
 800141a:	2000      	movs	r0, #0
 800141c:	6029      	str	r1, [r5, #0]
 800141e:	6023      	str	r3, [r4, #0]
 8001420:	b016      	add	sp, #88	@ 0x58
 8001422:	bd70      	pop	{r4, r5, r6, pc}
 8001424:	466a      	mov	r2, sp
 8001426:	f000 f853 	bl	80014d0 <_fstat_r>
 800142a:	2800      	cmp	r0, #0
 800142c:	dbed      	blt.n	800140a <__swhatbuf_r+0x12>
 800142e:	23f0      	movs	r3, #240	@ 0xf0
 8001430:	9901      	ldr	r1, [sp, #4]
 8001432:	021b      	lsls	r3, r3, #8
 8001434:	4019      	ands	r1, r3
 8001436:	4b04      	ldr	r3, [pc, #16]	@ (8001448 <__swhatbuf_r+0x50>)
 8001438:	18c9      	adds	r1, r1, r3
 800143a:	424b      	negs	r3, r1
 800143c:	4159      	adcs	r1, r3
 800143e:	e7ea      	b.n	8001416 <__swhatbuf_r+0x1e>
 8001440:	2100      	movs	r1, #0
 8001442:	2340      	movs	r3, #64	@ 0x40
 8001444:	e7e9      	b.n	800141a <__swhatbuf_r+0x22>
 8001446:	46c0      	nop			@ (mov r8, r8)
 8001448:	ffffe000 	.word	0xffffe000

0800144c <__smakebuf_r>:
 800144c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800144e:	2602      	movs	r6, #2
 8001450:	898b      	ldrh	r3, [r1, #12]
 8001452:	0005      	movs	r5, r0
 8001454:	000c      	movs	r4, r1
 8001456:	b085      	sub	sp, #20
 8001458:	4233      	tst	r3, r6
 800145a:	d007      	beq.n	800146c <__smakebuf_r+0x20>
 800145c:	0023      	movs	r3, r4
 800145e:	3347      	adds	r3, #71	@ 0x47
 8001460:	6023      	str	r3, [r4, #0]
 8001462:	6123      	str	r3, [r4, #16]
 8001464:	2301      	movs	r3, #1
 8001466:	6163      	str	r3, [r4, #20]
 8001468:	b005      	add	sp, #20
 800146a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800146c:	ab03      	add	r3, sp, #12
 800146e:	aa02      	add	r2, sp, #8
 8001470:	f7ff ffc2 	bl	80013f8 <__swhatbuf_r>
 8001474:	9f02      	ldr	r7, [sp, #8]
 8001476:	9001      	str	r0, [sp, #4]
 8001478:	0039      	movs	r1, r7
 800147a:	0028      	movs	r0, r5
 800147c:	f7ff fafc 	bl	8000a78 <_malloc_r>
 8001480:	2800      	cmp	r0, #0
 8001482:	d108      	bne.n	8001496 <__smakebuf_r+0x4a>
 8001484:	220c      	movs	r2, #12
 8001486:	5ea3      	ldrsh	r3, [r4, r2]
 8001488:	059a      	lsls	r2, r3, #22
 800148a:	d4ed      	bmi.n	8001468 <__smakebuf_r+0x1c>
 800148c:	2203      	movs	r2, #3
 800148e:	4393      	bics	r3, r2
 8001490:	431e      	orrs	r6, r3
 8001492:	81a6      	strh	r6, [r4, #12]
 8001494:	e7e2      	b.n	800145c <__smakebuf_r+0x10>
 8001496:	2380      	movs	r3, #128	@ 0x80
 8001498:	89a2      	ldrh	r2, [r4, #12]
 800149a:	6020      	str	r0, [r4, #0]
 800149c:	4313      	orrs	r3, r2
 800149e:	81a3      	strh	r3, [r4, #12]
 80014a0:	9b03      	ldr	r3, [sp, #12]
 80014a2:	6120      	str	r0, [r4, #16]
 80014a4:	6167      	str	r7, [r4, #20]
 80014a6:	2b00      	cmp	r3, #0
 80014a8:	d00c      	beq.n	80014c4 <__smakebuf_r+0x78>
 80014aa:	0028      	movs	r0, r5
 80014ac:	230e      	movs	r3, #14
 80014ae:	5ee1      	ldrsh	r1, [r4, r3]
 80014b0:	f000 f820 	bl	80014f4 <_isatty_r>
 80014b4:	2800      	cmp	r0, #0
 80014b6:	d005      	beq.n	80014c4 <__smakebuf_r+0x78>
 80014b8:	2303      	movs	r3, #3
 80014ba:	89a2      	ldrh	r2, [r4, #12]
 80014bc:	439a      	bics	r2, r3
 80014be:	3b02      	subs	r3, #2
 80014c0:	4313      	orrs	r3, r2
 80014c2:	81a3      	strh	r3, [r4, #12]
 80014c4:	89a3      	ldrh	r3, [r4, #12]
 80014c6:	9a01      	ldr	r2, [sp, #4]
 80014c8:	4313      	orrs	r3, r2
 80014ca:	81a3      	strh	r3, [r4, #12]
 80014cc:	e7cc      	b.n	8001468 <__smakebuf_r+0x1c>
	...

080014d0 <_fstat_r>:
 80014d0:	2300      	movs	r3, #0
 80014d2:	b570      	push	{r4, r5, r6, lr}
 80014d4:	4d06      	ldr	r5, [pc, #24]	@ (80014f0 <_fstat_r+0x20>)
 80014d6:	0004      	movs	r4, r0
 80014d8:	0008      	movs	r0, r1
 80014da:	0011      	movs	r1, r2
 80014dc:	602b      	str	r3, [r5, #0]
 80014de:	f7fe ff26 	bl	800032e <_fstat>
 80014e2:	1c43      	adds	r3, r0, #1
 80014e4:	d103      	bne.n	80014ee <_fstat_r+0x1e>
 80014e6:	682b      	ldr	r3, [r5, #0]
 80014e8:	2b00      	cmp	r3, #0
 80014ea:	d000      	beq.n	80014ee <_fstat_r+0x1e>
 80014ec:	6023      	str	r3, [r4, #0]
 80014ee:	bd70      	pop	{r4, r5, r6, pc}
 80014f0:	200001c0 	.word	0x200001c0

080014f4 <_isatty_r>:
 80014f4:	2300      	movs	r3, #0
 80014f6:	b570      	push	{r4, r5, r6, lr}
 80014f8:	4d06      	ldr	r5, [pc, #24]	@ (8001514 <_isatty_r+0x20>)
 80014fa:	0004      	movs	r4, r0
 80014fc:	0008      	movs	r0, r1
 80014fe:	602b      	str	r3, [r5, #0]
 8001500:	f7fe ff23 	bl	800034a <_isatty>
 8001504:	1c43      	adds	r3, r0, #1
 8001506:	d103      	bne.n	8001510 <_isatty_r+0x1c>
 8001508:	682b      	ldr	r3, [r5, #0]
 800150a:	2b00      	cmp	r3, #0
 800150c:	d000      	beq.n	8001510 <_isatty_r+0x1c>
 800150e:	6023      	str	r3, [r4, #0]
 8001510:	bd70      	pop	{r4, r5, r6, pc}
 8001512:	46c0      	nop			@ (mov r8, r8)
 8001514:	200001c0 	.word	0x200001c0

08001518 <_init>:
 8001518:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800151a:	46c0      	nop			@ (mov r8, r8)
 800151c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800151e:	bc08      	pop	{r3}
 8001520:	469e      	mov	lr, r3
 8001522:	4770      	bx	lr

08001524 <_fini>:
 8001524:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001526:	46c0      	nop			@ (mov r8, r8)
 8001528:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800152a:	bc08      	pop	{r3}
 800152c:	469e      	mov	lr, r3
 800152e:	4770      	bx	lr
